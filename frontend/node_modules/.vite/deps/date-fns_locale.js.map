{
  "version": 3,
  "sources": ["../../date-fns/locale/af/_lib/formatDistance.js", "../../date-fns/locale/af/_lib/formatLong.js", "../../date-fns/locale/af/_lib/formatRelative.js", "../../date-fns/locale/af/_lib/localize.js", "../../date-fns/locale/af/_lib/match.js", "../../date-fns/locale/af.js", "../../date-fns/locale/ar/_lib/formatDistance.js", "../../date-fns/locale/ar/_lib/formatLong.js", "../../date-fns/locale/ar/_lib/formatRelative.js", "../../date-fns/locale/ar/_lib/localize.js", "../../date-fns/locale/ar/_lib/match.js", "../../date-fns/locale/ar.js", "../../date-fns/locale/ar-DZ/_lib/formatDistance.js", "../../date-fns/locale/ar-DZ/_lib/formatLong.js", "../../date-fns/locale/ar-DZ/_lib/formatRelative.js", "../../date-fns/locale/ar-DZ/_lib/localize.js", "../../date-fns/locale/ar-DZ/_lib/match.js", "../../date-fns/locale/ar-DZ.js", "../../date-fns/locale/ar-EG/_lib/formatDistance.js", "../../date-fns/locale/ar-EG/_lib/formatLong.js", "../../date-fns/locale/ar-EG/_lib/formatRelative.js", "../../date-fns/locale/ar-EG/_lib/localize.js", "../../date-fns/locale/ar-EG/_lib/match.js", "../../date-fns/locale/ar-EG.js", "../../date-fns/locale/ar-MA/_lib/formatDistance.js", "../../date-fns/locale/ar-MA/_lib/formatLong.js", "../../date-fns/locale/ar-MA/_lib/formatRelative.js", "../../date-fns/locale/ar-MA/_lib/localize.js", "../../date-fns/locale/ar-MA/_lib/match.js", "../../date-fns/locale/ar-MA.js", "../../date-fns/locale/ar-SA/_lib/formatDistance.js", "../../date-fns/locale/ar-SA/_lib/formatLong.js", "../../date-fns/locale/ar-SA/_lib/formatRelative.js", "../../date-fns/locale/ar-SA/_lib/localize.js", "../../date-fns/locale/ar-SA/_lib/match.js", "../../date-fns/locale/ar-SA.js", "../../date-fns/locale/ar-TN/_lib/formatDistance.js", "../../date-fns/locale/ar-TN/_lib/formatLong.js", "../../date-fns/locale/ar-TN/_lib/formatRelative.js", "../../date-fns/locale/ar-TN/_lib/localize.js", "../../date-fns/locale/ar-TN/_lib/match.js", "../../date-fns/locale/ar-TN.js", "../../date-fns/locale/az/_lib/formatDistance.js", "../../date-fns/locale/az/_lib/formatLong.js", "../../date-fns/locale/az/_lib/formatRelative.js", "../../date-fns/locale/az/_lib/localize.js", "../../date-fns/locale/az/_lib/match.js", "../../date-fns/locale/az.js", "../../date-fns/locale/be/_lib/formatDistance.js", "../../date-fns/locale/be/_lib/formatLong.js", "../../date-fns/locale/be/_lib/formatRelative.js", "../../date-fns/locale/be/_lib/localize.js", "../../date-fns/locale/be/_lib/match.js", "../../date-fns/locale/be.js", "../../date-fns/locale/be-tarask/_lib/formatDistance.js", "../../date-fns/locale/be-tarask/_lib/formatLong.js", "../../date-fns/locale/be-tarask/_lib/formatRelative.js", "../../date-fns/locale/be-tarask/_lib/localize.js", "../../date-fns/locale/be-tarask/_lib/match.js", "../../date-fns/locale/be-tarask.js", "../../date-fns/locale/bg/_lib/formatDistance.js", "../../date-fns/locale/bg/_lib/formatLong.js", "../../date-fns/locale/bg/_lib/formatRelative.js", "../../date-fns/locale/bg/_lib/localize.js", "../../date-fns/locale/bg/_lib/match.js", "../../date-fns/locale/bg.js", "../../date-fns/locale/bn/_lib/localize.js", "../../date-fns/locale/bn/_lib/formatDistance.js", "../../date-fns/locale/bn/_lib/formatLong.js", "../../date-fns/locale/bn/_lib/formatRelative.js", "../../date-fns/locale/bn/_lib/match.js", "../../date-fns/locale/bn.js", "../../date-fns/locale/bs/_lib/formatDistance.js", "../../date-fns/locale/bs/_lib/formatLong.js", "../../date-fns/locale/bs/_lib/formatRelative.js", "../../date-fns/locale/bs/_lib/localize.js", "../../date-fns/locale/bs/_lib/match.js", "../../date-fns/locale/bs.js", "../../date-fns/locale/ca/_lib/formatDistance.js", "../../date-fns/locale/ca/_lib/formatLong.js", "../../date-fns/locale/ca/_lib/formatRelative.js", "../../date-fns/locale/ca/_lib/localize.js", "../../date-fns/locale/ca/_lib/match.js", "../../date-fns/locale/ca.js", "../../date-fns/locale/ckb/_lib/formatDistance.js", "../../date-fns/locale/ckb/_lib/formatLong.js", "../../date-fns/locale/ckb/_lib/formatRelative.js", "../../date-fns/locale/ckb/_lib/localize.js", "../../date-fns/locale/ckb/_lib/match.js", "../../date-fns/locale/ckb.js", "../../date-fns/locale/cs/_lib/formatDistance.js", "../../date-fns/locale/cs/_lib/formatLong.js", "../../date-fns/locale/cs/_lib/formatRelative.js", "../../date-fns/locale/cs/_lib/localize.js", "../../date-fns/locale/cs/_lib/match.js", "../../date-fns/locale/cs.js", "../../date-fns/locale/cy/_lib/formatDistance.js", "../../date-fns/locale/cy/_lib/formatLong.js", "../../date-fns/locale/cy/_lib/formatRelative.js", "../../date-fns/locale/cy/_lib/localize.js", "../../date-fns/locale/cy/_lib/match.js", "../../date-fns/locale/cy.js", "../../date-fns/locale/da/_lib/formatDistance.js", "../../date-fns/locale/da/_lib/formatLong.js", "../../date-fns/locale/da/_lib/formatRelative.js", "../../date-fns/locale/da/_lib/localize.js", "../../date-fns/locale/da/_lib/match.js", "../../date-fns/locale/da.js", "../../date-fns/locale/de/_lib/formatDistance.js", "../../date-fns/locale/de/_lib/formatLong.js", "../../date-fns/locale/de/_lib/formatRelative.js", "../../date-fns/locale/de/_lib/localize.js", "../../date-fns/locale/de/_lib/match.js", "../../date-fns/locale/de.js", "../../date-fns/locale/de-AT/_lib/localize.js", "../../date-fns/locale/de-AT.js", "../../date-fns/locale/el/_lib/formatDistance.js", "../../date-fns/locale/el/_lib/formatLong.js", "../../date-fns/locale/el/_lib/formatRelative.js", "../../date-fns/locale/el/_lib/localize.js", "../../date-fns/locale/el/_lib/match.js", "../../date-fns/locale/el.js", "../../date-fns/locale/en-AU/_lib/formatLong.js", "../../date-fns/locale/en-AU.js", "../../date-fns/locale/en-CA/_lib/formatDistance.js", "../../date-fns/locale/en-CA/_lib/formatLong.js", "../../date-fns/locale/en-CA.js", "../../date-fns/locale/en-GB/_lib/formatLong.js", "../../date-fns/locale/en-GB.js", "../../date-fns/locale/en-IE.js", "../../date-fns/locale/en-IN/_lib/formatLong.js", "../../date-fns/locale/en-IN.js", "../../date-fns/locale/en-NZ/_lib/formatLong.js", "../../date-fns/locale/en-NZ.js", "../../date-fns/locale/en-ZA/_lib/formatLong.js", "../../date-fns/locale/en-ZA.js", "../../date-fns/locale/eo/_lib/formatDistance.js", "../../date-fns/locale/eo/_lib/formatLong.js", "../../date-fns/locale/eo/_lib/formatRelative.js", "../../date-fns/locale/eo/_lib/localize.js", "../../date-fns/locale/eo/_lib/match.js", "../../date-fns/locale/eo.js", "../../date-fns/locale/es/_lib/formatDistance.js", "../../date-fns/locale/es/_lib/formatLong.js", "../../date-fns/locale/es/_lib/formatRelative.js", "../../date-fns/locale/es/_lib/localize.js", "../../date-fns/locale/es/_lib/match.js", "../../date-fns/locale/es.js", "../../date-fns/locale/et/_lib/formatDistance.js", "../../date-fns/locale/et/_lib/formatLong.js", "../../date-fns/locale/et/_lib/formatRelative.js", "../../date-fns/locale/et/_lib/localize.js", "../../date-fns/locale/et/_lib/match.js", "../../date-fns/locale/et.js", "../../date-fns/locale/eu/_lib/formatDistance.js", "../../date-fns/locale/eu/_lib/formatLong.js", "../../date-fns/locale/eu/_lib/formatRelative.js", "../../date-fns/locale/eu/_lib/localize.js", "../../date-fns/locale/eu/_lib/match.js", "../../date-fns/locale/eu.js", "../../date-fns/locale/fa-IR/_lib/formatDistance.js", "../../date-fns/locale/fa-IR/_lib/formatLong.js", "../../date-fns/locale/fa-IR/_lib/formatRelative.js", "../../date-fns/locale/fa-IR/_lib/localize.js", "../../date-fns/locale/fa-IR/_lib/match.js", "../../date-fns/locale/fa-IR.js", "../../date-fns/locale/fi/_lib/formatDistance.js", "../../date-fns/locale/fi/_lib/formatLong.js", "../../date-fns/locale/fi/_lib/formatRelative.js", "../../date-fns/locale/fi/_lib/localize.js", "../../date-fns/locale/fi/_lib/match.js", "../../date-fns/locale/fi.js", "../../date-fns/locale/fr/_lib/formatDistance.js", "../../date-fns/locale/fr/_lib/formatLong.js", "../../date-fns/locale/fr/_lib/formatRelative.js", "../../date-fns/locale/fr/_lib/localize.js", "../../date-fns/locale/fr/_lib/match.js", "../../date-fns/locale/fr.js", "../../date-fns/locale/fr-CA/_lib/formatLong.js", "../../date-fns/locale/fr-CA.js", "../../date-fns/locale/fr-CH/_lib/formatLong.js", "../../date-fns/locale/fr-CH/_lib/formatRelative.js", "../../date-fns/locale/fr-CH.js", "../../date-fns/locale/fy/_lib/formatDistance.js", "../../date-fns/locale/fy/_lib/formatLong.js", "../../date-fns/locale/fy/_lib/formatRelative.js", "../../date-fns/locale/fy/_lib/localize.js", "../../date-fns/locale/fy/_lib/match.js", "../../date-fns/locale/fy.js", "../../date-fns/locale/gd/_lib/formatDistance.js", "../../date-fns/locale/gd/_lib/formatLong.js", "../../date-fns/locale/gd/_lib/formatRelative.js", "../../date-fns/locale/gd/_lib/localize.js", "../../date-fns/locale/gd/_lib/match.js", "../../date-fns/locale/gd.js", "../../date-fns/locale/gl/_lib/formatDistance.js", "../../date-fns/locale/gl/_lib/formatLong.js", "../../date-fns/locale/gl/_lib/formatRelative.js", "../../date-fns/locale/gl/_lib/localize.js", "../../date-fns/locale/gl/_lib/match.js", "../../date-fns/locale/gl.js", "../../date-fns/locale/gu/_lib/formatDistance.js", "../../date-fns/locale/gu/_lib/formatLong.js", "../../date-fns/locale/gu/_lib/formatRelative.js", "../../date-fns/locale/gu/_lib/localize.js", "../../date-fns/locale/gu/_lib/match.js", "../../date-fns/locale/gu.js", "../../date-fns/locale/he/_lib/formatDistance.js", "../../date-fns/locale/he/_lib/formatLong.js", "../../date-fns/locale/he/_lib/formatRelative.js", "../../date-fns/locale/he/_lib/localize.js", "../../date-fns/locale/he/_lib/match.js", "../../date-fns/locale/he.js", "../../date-fns/locale/hi/_lib/localize.js", "../../date-fns/locale/hi/_lib/formatDistance.js", "../../date-fns/locale/hi/_lib/formatLong.js", "../../date-fns/locale/hi/_lib/formatRelative.js", "../../date-fns/locale/hi/_lib/match.js", "../../date-fns/locale/hi.js", "../../date-fns/locale/hr/_lib/formatDistance.js", "../../date-fns/locale/hr/_lib/formatLong.js", "../../date-fns/locale/hr/_lib/formatRelative.js", "../../date-fns/locale/hr/_lib/localize.js", "../../date-fns/locale/hr/_lib/match.js", "../../date-fns/locale/hr.js", "../../date-fns/locale/ht/_lib/formatDistance.js", "../../date-fns/locale/ht/_lib/formatLong.js", "../../date-fns/locale/ht/_lib/formatRelative.js", "../../date-fns/locale/ht/_lib/localize.js", "../../date-fns/locale/ht/_lib/match.js", "../../date-fns/locale/ht.js", "../../date-fns/locale/hu/_lib/formatDistance.js", "../../date-fns/locale/hu/_lib/formatLong.js", "../../date-fns/locale/hu/_lib/formatRelative.js", "../../date-fns/locale/hu/_lib/localize.js", "../../date-fns/locale/hu/_lib/match.js", "../../date-fns/locale/hu.js", "../../date-fns/locale/hy/_lib/formatDistance.js", "../../date-fns/locale/hy/_lib/formatLong.js", "../../date-fns/locale/hy/_lib/formatRelative.js", "../../date-fns/locale/hy/_lib/localize.js", "../../date-fns/locale/hy/_lib/match.js", "../../date-fns/locale/hy.js", "../../date-fns/locale/id/_lib/formatDistance.js", "../../date-fns/locale/id/_lib/formatLong.js", "../../date-fns/locale/id/_lib/formatRelative.js", "../../date-fns/locale/id/_lib/localize.js", "../../date-fns/locale/id/_lib/match.js", "../../date-fns/locale/id.js", "../../date-fns/locale/is/_lib/formatDistance.js", "../../date-fns/locale/is/_lib/formatLong.js", "../../date-fns/locale/is/_lib/formatRelative.js", "../../date-fns/locale/is/_lib/localize.js", "../../date-fns/locale/is/_lib/match.js", "../../date-fns/locale/is.js", "../../date-fns/locale/it/_lib/formatDistance.js", "../../date-fns/locale/it/_lib/formatLong.js", "../../date-fns/locale/it/_lib/formatRelative.js", "../../date-fns/locale/it/_lib/localize.js", "../../date-fns/locale/it/_lib/match.js", "../../date-fns/locale/it.js", "../../date-fns/locale/it-CH/_lib/formatLong.js", "../../date-fns/locale/it-CH.js", "../../date-fns/locale/ja/_lib/formatDistance.js", "../../date-fns/locale/ja/_lib/formatLong.js", "../../date-fns/locale/ja/_lib/formatRelative.js", "../../date-fns/locale/ja/_lib/localize.js", "../../date-fns/locale/ja/_lib/match.js", "../../date-fns/locale/ja.js", "../../date-fns/locale/ja-Hira/_lib/formatDistance.js", "../../date-fns/locale/ja-Hira/_lib/formatLong.js", "../../date-fns/locale/ja-Hira/_lib/formatRelative.js", "../../date-fns/locale/ja-Hira/_lib/localize.js", "../../date-fns/locale/ja-Hira/_lib/match.js", "../../date-fns/locale/ja-Hira.js", "../../date-fns/locale/ka/_lib/formatDistance.js", "../../date-fns/locale/ka/_lib/formatLong.js", "../../date-fns/locale/ka/_lib/formatRelative.js", "../../date-fns/locale/ka/_lib/localize.js", "../../date-fns/locale/ka/_lib/match.js", "../../date-fns/locale/ka.js", "../../date-fns/locale/kk/_lib/formatDistance.js", "../../date-fns/locale/kk/_lib/formatLong.js", "../../date-fns/locale/kk/_lib/formatRelative.js", "../../date-fns/locale/kk/_lib/localize.js", "../../date-fns/locale/kk/_lib/match.js", "../../date-fns/locale/kk.js", "../../date-fns/locale/km/_lib/formatDistance.js", "../../date-fns/locale/km/_lib/formatLong.js", "../../date-fns/locale/km/_lib/formatRelative.js", "../../date-fns/locale/km/_lib/localize.js", "../../date-fns/locale/km/_lib/match.js", "../../date-fns/locale/km.js", "../../date-fns/locale/kn/_lib/formatDistance.js", "../../date-fns/locale/kn/_lib/formatLong.js", "../../date-fns/locale/kn/_lib/formatRelative.js", "../../date-fns/locale/kn/_lib/localize.js", "../../date-fns/locale/kn/_lib/match.js", "../../date-fns/locale/kn.js", "../../date-fns/locale/ko/_lib/formatDistance.js", "../../date-fns/locale/ko/_lib/formatLong.js", "../../date-fns/locale/ko/_lib/formatRelative.js", "../../date-fns/locale/ko/_lib/localize.js", "../../date-fns/locale/ko/_lib/match.js", "../../date-fns/locale/ko.js", "../../date-fns/locale/lb/_lib/formatDistance.js", "../../date-fns/locale/lb/_lib/formatLong.js", "../../date-fns/locale/lb/_lib/formatRelative.js", "../../date-fns/locale/lb/_lib/localize.js", "../../date-fns/locale/lb/_lib/match.js", "../../date-fns/locale/lb.js", "../../date-fns/locale/lt/_lib/formatDistance.js", "../../date-fns/locale/lt/_lib/formatLong.js", "../../date-fns/locale/lt/_lib/formatRelative.js", "../../date-fns/locale/lt/_lib/localize.js", "../../date-fns/locale/lt/_lib/match.js", "../../date-fns/locale/lt.js", "../../date-fns/locale/lv/_lib/formatDistance.js", "../../date-fns/locale/lv/_lib/formatLong.js", "../../date-fns/locale/lv/_lib/formatRelative.js", "../../date-fns/locale/lv/_lib/localize.js", "../../date-fns/locale/lv/_lib/match.js", "../../date-fns/locale/lv.js", "../../date-fns/locale/mk/_lib/formatDistance.js", "../../date-fns/locale/mk/_lib/formatLong.js", "../../date-fns/locale/mk/_lib/formatRelative.js", "../../date-fns/locale/mk/_lib/localize.js", "../../date-fns/locale/mk/_lib/match.js", "../../date-fns/locale/mk.js", "../../date-fns/locale/mn/_lib/formatDistance.js", "../../date-fns/locale/mn/_lib/formatLong.js", "../../date-fns/locale/mn/_lib/formatRelative.js", "../../date-fns/locale/mn/_lib/localize.js", "../../date-fns/locale/mn/_lib/match.js", "../../date-fns/locale/mn.js", "../../date-fns/locale/ms/_lib/formatDistance.js", "../../date-fns/locale/ms/_lib/formatLong.js", "../../date-fns/locale/ms/_lib/formatRelative.js", "../../date-fns/locale/ms/_lib/localize.js", "../../date-fns/locale/ms/_lib/match.js", "../../date-fns/locale/ms.js", "../../date-fns/locale/mt/_lib/formatDistance.js", "../../date-fns/locale/mt/_lib/formatLong.js", "../../date-fns/locale/mt/_lib/formatRelative.js", "../../date-fns/locale/mt/_lib/localize.js", "../../date-fns/locale/mt/_lib/match.js", "../../date-fns/locale/mt.js", "../../date-fns/locale/nb/_lib/formatDistance.js", "../../date-fns/locale/nb/_lib/formatLong.js", "../../date-fns/locale/nb/_lib/formatRelative.js", "../../date-fns/locale/nb/_lib/localize.js", "../../date-fns/locale/nb/_lib/match.js", "../../date-fns/locale/nb.js", "../../date-fns/locale/nl/_lib/formatDistance.js", "../../date-fns/locale/nl/_lib/formatLong.js", "../../date-fns/locale/nl/_lib/formatRelative.js", "../../date-fns/locale/nl/_lib/localize.js", "../../date-fns/locale/nl/_lib/match.js", "../../date-fns/locale/nl.js", "../../date-fns/locale/nl-BE/_lib/formatDistance.js", "../../date-fns/locale/nl-BE/_lib/formatLong.js", "../../date-fns/locale/nl-BE/_lib/formatRelative.js", "../../date-fns/locale/nl-BE/_lib/localize.js", "../../date-fns/locale/nl-BE/_lib/match.js", "../../date-fns/locale/nl-BE.js", "../../date-fns/locale/nn/_lib/formatDistance.js", "../../date-fns/locale/nn/_lib/formatLong.js", "../../date-fns/locale/nn/_lib/formatRelative.js", "../../date-fns/locale/nn/_lib/localize.js", "../../date-fns/locale/nn/_lib/match.js", "../../date-fns/locale/nn.js", "../../date-fns/locale/oc/_lib/formatDistance.js", "../../date-fns/locale/oc/_lib/formatLong.js", "../../date-fns/locale/oc/_lib/formatRelative.js", "../../date-fns/locale/oc/_lib/localize.js", "../../date-fns/locale/oc/_lib/match.js", "../../date-fns/locale/oc.js", "../../date-fns/locale/pl/_lib/formatDistance.js", "../../date-fns/locale/pl/_lib/formatLong.js", "../../date-fns/locale/pl/_lib/formatRelative.js", "../../date-fns/locale/pl/_lib/localize.js", "../../date-fns/locale/pl/_lib/match.js", "../../date-fns/locale/pl.js", "../../date-fns/locale/pt/_lib/formatDistance.js", "../../date-fns/locale/pt/_lib/formatLong.js", "../../date-fns/locale/pt/_lib/formatRelative.js", "../../date-fns/locale/pt/_lib/localize.js", "../../date-fns/locale/pt/_lib/match.js", "../../date-fns/locale/pt.js", "../../date-fns/locale/pt-BR/_lib/formatDistance.js", "../../date-fns/locale/pt-BR/_lib/formatLong.js", "../../date-fns/locale/pt-BR/_lib/formatRelative.js", "../../date-fns/locale/pt-BR/_lib/localize.js", "../../date-fns/locale/pt-BR/_lib/match.js", "../../date-fns/locale/pt-BR.js", "../../date-fns/locale/ro/_lib/formatDistance.js", "../../date-fns/locale/ro/_lib/formatLong.js", "../../date-fns/locale/ro/_lib/formatRelative.js", "../../date-fns/locale/ro/_lib/localize.js", "../../date-fns/locale/ro/_lib/match.js", "../../date-fns/locale/ro.js", "../../date-fns/locale/ru/_lib/formatDistance.js", "../../date-fns/locale/ru/_lib/formatLong.js", "../../date-fns/locale/ru/_lib/formatRelative.js", "../../date-fns/locale/ru/_lib/localize.js", "../../date-fns/locale/ru/_lib/match.js", "../../date-fns/locale/ru.js", "../../date-fns/locale/se/_lib/formatDistance.js", "../../date-fns/locale/se/_lib/formatLong.js", "../../date-fns/locale/se/_lib/formatRelative.js", "../../date-fns/locale/se/_lib/localize.js", "../../date-fns/locale/se/_lib/match.js", "../../date-fns/locale/se.js", "../../date-fns/locale/sk/_lib/formatDistance.js", "../../date-fns/locale/sk/_lib/formatLong.js", "../../date-fns/locale/sk/_lib/formatRelative.js", "../../date-fns/locale/sk/_lib/localize.js", "../../date-fns/locale/sk/_lib/match.js", "../../date-fns/locale/sk.js", "../../date-fns/locale/sl/_lib/formatDistance.js", "../../date-fns/locale/sl/_lib/formatLong.js", "../../date-fns/locale/sl/_lib/formatRelative.js", "../../date-fns/locale/sl/_lib/localize.js", "../../date-fns/locale/sl/_lib/match.js", "../../date-fns/locale/sl.js", "../../date-fns/locale/sq/_lib/formatDistance.js", "../../date-fns/locale/sq/_lib/formatLong.js", "../../date-fns/locale/sq/_lib/formatRelative.js", "../../date-fns/locale/sq/_lib/localize.js", "../../date-fns/locale/sq/_lib/match.js", "../../date-fns/locale/sq.js", "../../date-fns/locale/sr/_lib/formatDistance.js", "../../date-fns/locale/sr/_lib/formatLong.js", "../../date-fns/locale/sr/_lib/formatRelative.js", "../../date-fns/locale/sr/_lib/localize.js", "../../date-fns/locale/sr/_lib/match.js", "../../date-fns/locale/sr.js", "../../date-fns/locale/sr-Latn/_lib/formatDistance.js", "../../date-fns/locale/sr-Latn/_lib/formatLong.js", "../../date-fns/locale/sr-Latn/_lib/formatRelative.js", "../../date-fns/locale/sr-Latn/_lib/localize.js", "../../date-fns/locale/sr-Latn/_lib/match.js", "../../date-fns/locale/sr-Latn.js", "../../date-fns/locale/sv/_lib/formatDistance.js", "../../date-fns/locale/sv/_lib/formatLong.js", "../../date-fns/locale/sv/_lib/formatRelative.js", "../../date-fns/locale/sv/_lib/localize.js", "../../date-fns/locale/sv/_lib/match.js", "../../date-fns/locale/sv.js", "../../date-fns/locale/ta/_lib/formatDistance.js", "../../date-fns/locale/ta/_lib/formatLong.js", "../../date-fns/locale/ta/_lib/formatRelative.js", "../../date-fns/locale/ta/_lib/localize.js", "../../date-fns/locale/ta/_lib/match.js", "../../date-fns/locale/ta.js", "../../date-fns/locale/te/_lib/formatDistance.js", "../../date-fns/locale/te/_lib/formatLong.js", "../../date-fns/locale/te/_lib/formatRelative.js", "../../date-fns/locale/te/_lib/localize.js", "../../date-fns/locale/te/_lib/match.js", "../../date-fns/locale/te.js", "../../date-fns/locale/th/_lib/formatDistance.js", "../../date-fns/locale/th/_lib/formatLong.js", "../../date-fns/locale/th/_lib/formatRelative.js", "../../date-fns/locale/th/_lib/localize.js", "../../date-fns/locale/th/_lib/match.js", "../../date-fns/locale/th.js", "../../date-fns/locale/tr/_lib/formatDistance.js", "../../date-fns/locale/tr/_lib/formatLong.js", "../../date-fns/locale/tr/_lib/formatRelative.js", "../../date-fns/locale/tr/_lib/localize.js", "../../date-fns/locale/tr/_lib/match.js", "../../date-fns/locale/tr.js", "../../date-fns/locale/ug/_lib/formatDistance.js", "../../date-fns/locale/ug/_lib/formatLong.js", "../../date-fns/locale/ug/_lib/formatRelative.js", "../../date-fns/locale/ug/_lib/localize.js", "../../date-fns/locale/ug/_lib/match.js", "../../date-fns/locale/ug.js", "../../date-fns/locale/uk/_lib/formatDistance.js", "../../date-fns/locale/uk/_lib/formatLong.js", "../../date-fns/locale/uk/_lib/formatRelative.js", "../../date-fns/locale/uk/_lib/localize.js", "../../date-fns/locale/uk/_lib/match.js", "../../date-fns/locale/uk.js", "../../date-fns/locale/uz/_lib/formatDistance.js", "../../date-fns/locale/uz/_lib/formatLong.js", "../../date-fns/locale/uz/_lib/formatRelative.js", "../../date-fns/locale/uz/_lib/localize.js", "../../date-fns/locale/uz/_lib/match.js", "../../date-fns/locale/uz.js", "../../date-fns/locale/uz-Cyrl/_lib/formatDistance.js", "../../date-fns/locale/uz-Cyrl/_lib/formatLong.js", "../../date-fns/locale/uz-Cyrl/_lib/formatRelative.js", "../../date-fns/locale/uz-Cyrl/_lib/localize.js", "../../date-fns/locale/uz-Cyrl/_lib/match.js", "../../date-fns/locale/uz-Cyrl.js", "../../date-fns/locale/vi/_lib/formatDistance.js", "../../date-fns/locale/vi/_lib/formatLong.js", "../../date-fns/locale/vi/_lib/formatRelative.js", "../../date-fns/locale/vi/_lib/localize.js", "../../date-fns/locale/vi/_lib/match.js", "../../date-fns/locale/vi.js", "../../date-fns/locale/zh-CN/_lib/formatDistance.js", "../../date-fns/locale/zh-CN/_lib/formatLong.js", "../../date-fns/locale/zh-CN/_lib/formatRelative.js", "../../date-fns/locale/zh-CN/_lib/localize.js", "../../date-fns/locale/zh-CN/_lib/match.js", "../../date-fns/locale/zh-CN.js", "../../date-fns/locale/zh-HK/_lib/formatDistance.js", "../../date-fns/locale/zh-HK/_lib/formatLong.js", "../../date-fns/locale/zh-HK/_lib/formatRelative.js", "../../date-fns/locale/zh-HK/_lib/localize.js", "../../date-fns/locale/zh-HK/_lib/match.js", "../../date-fns/locale/zh-HK.js", "../../date-fns/locale/zh-TW/_lib/formatDistance.js", "../../date-fns/locale/zh-TW/_lib/formatLong.js", "../../date-fns/locale/zh-TW/_lib/formatRelative.js", "../../date-fns/locale/zh-TW/_lib/localize.js", "../../date-fns/locale/zh-TW/_lib/match.js", "../../date-fns/locale/zh-TW.js"],
  "sourcesContent": ["const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"minder as 'n sekonde\",\r\n    other: \"minder as {{count}} sekondes\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekonde\",\r\n    other: \"{{count}} sekondes\",\r\n  },\r\n\r\n  halfAMinute: \"'n halwe minuut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minder as 'n minuut\",\r\n    other: \"minder as {{count}} minute\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"'n minuut\",\r\n    other: \"{{count}} minute\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ongeveer 1 uur\",\r\n    other: \"ongeveer {{count}} ure\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 uur\",\r\n    other: \"{{count}} ure\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dag\",\r\n    other: \"{{count}} dae\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ongeveer 1 week\",\r\n    other: \"ongeveer {{count}} weke\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 week\",\r\n    other: \"{{count}} weke\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ongeveer 1 maand\",\r\n    other: \"ongeveer {{count}} maande\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 maand\",\r\n    other: \"{{count}} maande\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ongeveer 1 jaar\",\r\n    other: \"ongeveer {{count}} jaar\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 jaar\",\r\n    other: \"{{count}} jaar\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"meer as 1 jaar\",\r\n    other: \"meer as {{count}} jaar\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"byna 1 jaar\",\r\n    other: \"byna {{count}} jaar\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"oor \" + result;\r\n    } else {\r\n      return result + \" gelede\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"yyyy/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'om' {{time}}\",\r\n  long: \"{{date}} 'om' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'verlede' eeee 'om' p\",\r\n  yesterday: \"'gister om' p\",\r\n  today: \"'vandag om' p\",\r\n  tomorrow: \"'môre om' p\",\r\n  nextWeek: \"eeee 'om' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"vC\", \"nC\"],\r\n  abbreviated: [\"vC\", \"nC\"],\r\n  wide: [\"voor Christus\", \"na Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1ste kwartaal\", \"2de kwartaal\", \"3de kwartaal\", \"4de kwartaal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mrt\",\r\n    \"Apr\",\r\n    \"Mei\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Des\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Januarie\",\r\n    \"Februarie\",\r\n    \"Maart\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Junie\",\r\n    \"Julie\",\r\n    \"Augustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"D\", \"W\", \"D\", \"V\", \"S\"],\r\n  short: [\"So\", \"Ma\", \"Di\", \"Wo\", \"Do\", \"Vr\", \"Sa\"],\r\n  abbreviated: [\"Son\", \"Maa\", \"Din\", \"Woe\", \"Don\", \"Vry\", \"Sat\"],\r\n  wide: [\r\n    \"Sondag\",\r\n    \"Maandag\",\r\n    \"Dinsdag\",\r\n    \"Woensdag\",\r\n    \"Donderdag\",\r\n    \"Vrydag\",\r\n    \"Saterdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"middaguur\",\r\n    morning: \"oggend\",\r\n    afternoon: \"middag\",\r\n    evening: \"laat middag\",\r\n    night: \"aand\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"middaguur\",\r\n    morning: \"oggend\",\r\n    afternoon: \"middag\",\r\n    evening: \"laat middag\",\r\n    night: \"aand\",\r\n  },\r\n  wide: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"middaguur\",\r\n    morning: \"oggend\",\r\n    afternoon: \"middag\",\r\n    evening: \"laat middag\",\r\n    night: \"aand\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"uur die middag\",\r\n    morning: \"uur die oggend\",\r\n    afternoon: \"uur die middag\",\r\n    evening: \"uur die aand\",\r\n    night: \"uur die aand\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"uur die middag\",\r\n    morning: \"uur die oggend\",\r\n    afternoon: \"uur die middag\",\r\n    evening: \"uur die aand\",\r\n    night: \"uur die aand\",\r\n  },\r\n  wide: {\r\n    am: \"vm\",\r\n    pm: \"nm\",\r\n    midnight: \"middernag\",\r\n    noon: \"uur die middag\",\r\n    morning: \"uur die oggend\",\r\n    afternoon: \"uur die middag\",\r\n    evening: \"uur die aand\",\r\n    night: \"uur die aand\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n  const rem100 = number % 100;\r\n  if (rem100 < 20) {\r\n    switch (rem100) {\r\n      case 1:\r\n      case 8:\r\n        return number + \"ste\";\r\n      default:\r\n        return number + \"de\";\r\n    }\r\n  }\r\n  return number + \"ste\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ste|de)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([vn]\\.? ?C\\.?)/,\r\n  abbreviated: /^([vn]\\. ?C\\.?)/,\r\n  wide: /^((voor|na) Christus)/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^v/, /^n/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K[1234]/i,\r\n  wide: /^[1234](st|d)e kwartaal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\\.?/i,\r\n  wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^J/i,\r\n    /^F/i,\r\n    /^M/i,\r\n    /^A/i,\r\n    /^M/i,\r\n    /^J/i,\r\n    /^J/i,\r\n    /^A/i,\r\n    /^S/i,\r\n    /^O/i,\r\n    /^N/i,\r\n    /^D/i,\r\n  ],\r\n\r\n  any: [\r\n    /^Jan/i,\r\n    /^Feb/i,\r\n    /^Mrt/i,\r\n    /^Apr/i,\r\n    /^Mei/i,\r\n    /^Jun/i,\r\n    /^Jul/i,\r\n    /^Aug/i,\r\n    /^Sep/i,\r\n    /^Okt/i,\r\n    /^Nov/i,\r\n    /^Dec/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smdwv]/i,\r\n  short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,\r\n  abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,\r\n  wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i],\r\n  any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^vm/i,\r\n    pm: /^nm/i,\r\n    midnight: /^middernag/i,\r\n    noon: /^middaguur/i,\r\n    morning: /oggend/i,\r\n    afternoon: /middag/i,\r\n    evening: /laat middag/i,\r\n    night: /aand/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./af/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./af/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./af/_lib/formatRelative.js\";\r\nimport { localize } from \"./af/_lib/localize.js\";\r\nimport { match } from \"./af/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Afrikaans locale.\r\n * @language Afrikaans\r\n * @iso-639-2 afr\r\n * @author Marnus Weststrate [@marnusw](https://github.com/marnusw)\r\n */\r\nexport const af = {\r\n  code: \"af\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default af;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية\",\r\n    two: \"أقل من ثانيتين\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية واحدة\",\r\n    two: \"ثانيتان\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نصف دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقائق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة واحدة\",\r\n    two: \"دقيقتان\",\r\n    threeToTen: \"{{count}} دقائق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ساعة واحدة تقريباً\",\r\n    two: \"ساعتين تقريبا\",\r\n    threeToTen: \"{{count}} ساعات تقريباً\",\r\n    other: \"{{count}} ساعة تقريباً\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة واحدة\",\r\n    two: \"ساعتان\",\r\n    threeToTen: \"{{count}} ساعات\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"يوم واحد\",\r\n    two: \"يومان\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"أسبوع واحد تقريبا\",\r\n    two: \"أسبوعين تقريبا\",\r\n    threeToTen: \"{{count}} أسابيع تقريبا\",\r\n    other: \"{{count}} أسبوعا تقريبا\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"أسبوع واحد\",\r\n    two: \"أسبوعان\",\r\n    threeToTen: \"{{count}} أسابيع\",\r\n    other: \"{{count}} أسبوعا\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"شهر واحد تقريباً\",\r\n    two: \"شهرين تقريبا\",\r\n    threeToTen: \"{{count}} أشهر تقريبا\",\r\n    other: \"{{count}} شهرا تقريباً\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر واحد\",\r\n    two: \"شهران\",\r\n    threeToTen: \"{{count}} أشهر\",\r\n    other: \"{{count}} شهرا\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"سنة واحدة تقريباً\",\r\n    two: \"سنتين تقريبا\",\r\n    threeToTen: \"{{count}} سنوات تقريباً\",\r\n    other: \"{{count}} سنة تقريباً\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"سنة واحد\",\r\n    two: \"سنتان\",\r\n    threeToTen: \"{{count}} سنوات\",\r\n    other: \"{{count}} سنة\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من سنة\",\r\n    two: \"أكثر من سنتين\",\r\n    threeToTen: \"أكثر من {{count}} سنوات\",\r\n    other: \"أكثر من {{count}} سنة\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"ما يقارب سنة واحدة\",\r\n    two: \"ما يقارب سنتين\",\r\n    threeToTen: \"ما يقارب {{count}} سنوات\",\r\n    other: \"ما يقارب {{count}} سنة\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const usageGroup = formatDistanceLocale[token];\r\n  let result;\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else if (count === 2) {\r\n    result = usageGroup.two;\r\n  } else if (count <= 10) {\r\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"خلال \" + result;\r\n    } else {\r\n      return \"منذ \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE، do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss\",\r\n  long: \"HH:mm:ss\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'عند الساعة' {{time}}\",\r\n  long: \"{{date}} 'عند الساعة' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'الماضي عند الساعة' p\",\r\n  yesterday: \"'الأمس عند الساعة' p\",\r\n  today: \"'اليوم عند الساعة' p\",\r\n  tomorrow: \"'غدا عند الساعة' p\",\r\n  nextWeek: \"eeee 'القادم عند الساعة' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token) => formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"ي\", \"ف\", \"م\", \"أ\", \"م\", \"ي\", \"ي\", \"أ\", \"س\", \"أ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"يناير\",\r\n    \"فبراير\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونيو\",\r\n    \"يوليو\",\r\n    \"أغسطس\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يناير\",\r\n    \"فبراير\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونيو\",\r\n    \"يوليو\",\r\n    \"أغسطس\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الاثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"المساء\",\r\n    night: \"الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"المساء\",\r\n    night: \"الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"المساء\",\r\n    night: \"الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"في الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"في الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    morning: \"في الصباح\",\r\n    noon: \"الظهر\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n    midnight: \"منتصف الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (num) => String(num);\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /[قب]/,\r\n  abbreviated: /[قب]\\.م\\./,\r\n  wide: /(قبل|بعد) الميلاد/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/قبل/, /بعد/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /ر[1234]/,\r\n  wide: /الربع (الأول|الثاني|الثالث|الرابع)/,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[أيفمسند]/,\r\n  abbreviated:\r\n    /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\r\n  wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ي/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^أ/i,\r\n    /^م/i,\r\n    /^ي/i,\r\n    /^ي/i,\r\n    /^أ/i,\r\n    /^س/i,\r\n    /^أ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^يناير/i,\r\n    /^فبراير/i,\r\n    /^مارس/i,\r\n    /^أبريل/i,\r\n    /^مايو/i,\r\n    /^يونيو/i,\r\n    /^يوليو/i,\r\n    /^أغسطس/i,\r\n    /^سبتمبر/i,\r\n    /^أكتوبر/i,\r\n    /^نوفمبر/i,\r\n    /^ديسمبر/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[حنثرخجس]/i,\r\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\r\n  wide: [\r\n    /^الأحد/i,\r\n    /^الاثنين/i,\r\n    /^الثلاثاء/i,\r\n    /^الأربعاء/i,\r\n    /^الخميس/i,\r\n    /^الجمعة/i,\r\n    /^السبت/i,\r\n  ],\r\n\r\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,\r\n  any: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ص/,\r\n    pm: /^م/,\r\n    midnight: /منتصف الليل/,\r\n    noon: /الظهر/,\r\n    afternoon: /بعد الظهر/,\r\n    morning: /في الصباح/,\r\n    evening: /في المساء/,\r\n    night: /في الليل/,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar/_lib/localize.js\";\r\nimport { match } from \"./ar/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Modern Standard Arabic - Al-fussha).\r\n * @language Modern Standard Arabic\r\n * @iso-639-2 ara\r\n * @author Abdallah Hassan [@AbdallahAHO](https://github.com/AbdallahAHO)\r\n * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)\r\n */\r\nexport const ar = {\r\n  code: \"ar\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 6 /* Saturday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ar;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية واحدة\",\r\n    two: \"أقل من ثانتين\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية واحدة\",\r\n    two: \"ثانتين\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نصف دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقائق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة واحدة\",\r\n    two: \"دقيقتين\",\r\n    threeToTen: \"{{count}} دقائق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ساعة واحدة تقريباً\",\r\n    two: \"ساعتين تقريباً\",\r\n    threeToTen: \"{{count}} ساعات تقريباً\",\r\n    other: \"{{count}} ساعة تقريباً\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة واحدة\",\r\n    two: \"ساعتين\",\r\n    threeToTen: \"{{count}} ساعات\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"يوم واحد\",\r\n    two: \"يومين\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"أسبوع واحد تقريباً\",\r\n    two: \"أسبوعين تقريباً\",\r\n    threeToTen: \"{{count}} أسابيع تقريباً\",\r\n    other: \"{{count}} أسبوع تقريباً\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"أسبوع واحد\",\r\n    two: \"أسبوعين\",\r\n    threeToTen: \"{{count}} أسابيع\",\r\n    other: \"{{count}} أسبوع\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"شهر واحد تقريباً\",\r\n    two: \"شهرين تقريباً\",\r\n    threeToTen: \"{{count}} أشهر تقريباً\",\r\n    other: \"{{count}} شهر تقريباً\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر واحد\",\r\n    two: \"شهرين\",\r\n    threeToTen: \"{{count}} أشهر\",\r\n    other: \"{{count}} شهر\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"عام واحد\",\r\n    two: \"عامين\",\r\n    threeToTen: \"{{count}} أعوام\",\r\n    other: \"{{count}} عام\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من عام\",\r\n    two: \"أكثر من عامين\",\r\n    threeToTen: \"أكثر من {{count}} أعوام\",\r\n    other: \"أكثر من {{count}} عام\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n\r\n  const usageGroup = formatDistanceLocale[token];\r\n  let result;\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else if (count === 2) {\r\n    result = usageGroup.two;\r\n  } else if (count <= 10) {\r\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"في خلال \" + result;\r\n    } else {\r\n      return \"منذ \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'عند' {{time}}\",\r\n  long: \"{{date}} 'عند' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'أخر' eeee 'عند' p\",\r\n  yesterday: \"'أمس عند' p\",\r\n  today: \"'اليوم عند' p\",\r\n  tomorrow: \"'غداً عند' p\",\r\n  nextWeek: \"eeee 'عند' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) => {\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"ج\", \"ف\", \"م\", \"أ\", \"م\", \"ج\", \"ج\", \"أ\", \"س\", \"أ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"جانـ\",\r\n    \"فيفـ\",\r\n    \"مارس\",\r\n    \"أفريل\",\r\n    \"مايـ\",\r\n    \"جوانـ\",\r\n    \"جويـ\",\r\n    \"أوت\",\r\n    \"سبتـ\",\r\n    \"أكتـ\",\r\n    \"نوفـ\",\r\n    \"ديسـ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"جانفي\",\r\n    \"فيفري\",\r\n    \"مارس\",\r\n    \"أفريل\",\r\n    \"ماي\",\r\n    \"جوان\",\r\n    \"جويلية\",\r\n    \"أوت\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنـ\", \"ثلا\", \"أربـ\", \"خميـ\", \"جمعة\", \"سبت\"],\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الاثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ق|ب)/i,\r\n  abbreviated: /^(ق\\.?\\s?م\\.?|ق\\.?\\s?م\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\r\n  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^قبل/i, /^بعد/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ر[1234]/i,\r\n  wide: /^الربع [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[جفمأسند]/i,\r\n  abbreviated: /^(جان|فيف|مار|أفر|ماي|جوا|جوي|أوت|سبت|أكت|نوف|ديس)/i,\r\n  wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/i,\r\n};\r\n\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ج/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^أ/i,\r\n    /^م/i,\r\n    /^ج/i,\r\n    /^ج/i,\r\n    /^أ/i,\r\n    /^س/i,\r\n    /^أ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^جان/i,\r\n    /^فيف/i,\r\n    /^مار/i,\r\n    /^أفر/i,\r\n    /^ماي/i,\r\n    /^جوا/i,\r\n    /^جوي/i,\r\n    /^أوت/i,\r\n    /^سبت/i,\r\n    /^أكت/i,\r\n    /^نوف/i,\r\n    /^ديس/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[حنثرخجس]/i,\r\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,\r\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\r\n  wide: [\r\n    /^الأحد/i,\r\n    /^الاثنين/i,\r\n    /^الثلاثاء/i,\r\n    /^الأربعاء/i,\r\n    /^الخميس/i,\r\n    /^الجمعة/i,\r\n    /^السبت/i,\r\n  ],\r\n\r\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mi/i,\r\n    noon: /^no/i,\r\n    morning: /morning/i,\r\n    afternoon: /afternoon/i,\r\n    evening: /evening/i,\r\n    night: /night/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => Number(index) + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar-DZ/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar-DZ/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar-DZ/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar-DZ/_lib/localize.js\";\r\nimport { match } from \"./ar-DZ/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Algerian Arabic).\r\n * @language Algerian Arabic\r\n * @iso-639-2 ara\r\n * @author Badreddine Boumaza [@badre429](https://github.com/badre429)\r\n * @author Ahmed ElShahat [@elshahat](https://github.com/elshahat)\r\n */\r\nexport const arDZ = {\r\n  code: \"ar-DZ\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default arDZ;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية\",\r\n    two: \"أقل من ثانيتين\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية\",\r\n    two: \"ثانيتين\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نص دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقايق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة\",\r\n    two: \"دقيقتين\",\r\n    threeToTen: \"{{count}} دقايق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"حوالي ساعة\",\r\n    two: \"حوالي ساعتين\",\r\n    threeToTen: \"حوالي {{count}} ساعات\",\r\n    other: \"حوالي {{count}} ساعة\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة\",\r\n    two: \"ساعتين\",\r\n    threeToTen: \"{{count}} ساعات\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"يوم\",\r\n    two: \"يومين\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"حوالي أسبوع\",\r\n    two: \"حوالي أسبوعين\",\r\n    threeToTen: \"حوالي {{count}} أسابيع\",\r\n    other: \"حوالي {{count}} أسبوع\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"أسبوع\",\r\n    two: \"أسبوعين\",\r\n    threeToTen: \"{{count}} أسابيع\",\r\n    other: \"{{count}} أسبوع\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"حوالي شهر\",\r\n    two: \"حوالي شهرين\",\r\n    threeToTen: \"حوالي {{count}} أشهر\",\r\n    other: \"حوالي {{count}} شهر\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر\",\r\n    two: \"شهرين\",\r\n    threeToTen: \"{{count}} أشهر\",\r\n    other: \"{{count}} شهر\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"حوالي سنة\",\r\n    two: \"حوالي سنتين\",\r\n    threeToTen: \"حوالي {{count}} سنين\",\r\n    other: \"حوالي {{count}} سنة\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"عام\",\r\n    two: \"عامين\",\r\n    threeToTen: \"{{count}} أعوام\",\r\n    other: \"{{count}} عام\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من سنة\",\r\n    two: \"أكثر من سنتين\",\r\n    threeToTen: \"أكثر من {{count}} سنين\",\r\n    other: \"أكثر من {{count}} سنة\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"عام تقريبًا\",\r\n    two: \"عامين تقريبًا\",\r\n    threeToTen: \"{{count}} أعوام تقريبًا\",\r\n    other: \"{{count}} عام تقريبًا\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2) {\r\n    result = tokenValue.two;\r\n  } else if (count <= 10) {\r\n    result = tokenValue.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return `في خلال ${result}`;\r\n    } else {\r\n      return `منذ ${result}`;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE، do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"dd/MMM/y\",\r\n  short: \"d/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'الساعة' {{time}}\",\r\n  long: \"{{date}} 'الساعة' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'اللي جاي الساعة' p\",\r\n  yesterday: \"'إمبارح الساعة' p\",\r\n  today: \"'النهاردة الساعة' p\",\r\n  tomorrow: \"'بكرة الساعة' p\",\r\n  nextWeek: \"eeee 'الساعة' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م\", \"ب.م\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"ي\", \"ف\", \"م\", \"أ\", \"م\", \"ي\", \"ي\", \"أ\", \"س\", \"أ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"ينا\",\r\n    \"فبر\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونـ\",\r\n    \"يولـ\",\r\n    \"أغسـ\",\r\n    \"سبتـ\",\r\n    \"أكتـ\",\r\n    \"نوفـ\",\r\n    \"ديسـ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يناير\",\r\n    \"فبراير\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونيو\",\r\n    \"يوليو\",\r\n    \"أغسطس\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الاثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهراً\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهراً\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءً\",\r\n    night: \"ليلاً\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهراً\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    morning: \"في الصباح\",\r\n    noon: \"ظهراً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)/;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ق|ب)/g,\r\n  abbreviated: /^(ق.م|ب.م)/g,\r\n  wide: /^(قبل الميلاد|بعد الميلاد)/g,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ق/g, /^ب/g],\r\n};\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/,\r\n  abbreviated: /^ر[1234]/,\r\n  wide: /^الربع (الأول|الثاني|الثالث|الرابع)/,\r\n};\r\nconst parseQuarterPatterns = {\r\n  wide: [/الربع الأول/, /الربع الثاني/, /الربع الثالث/, /الربع الرابع/],\r\n\r\n  any: [/1/, /2/, /3/, /4/],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(ي|ف|م|أ|س|ن|د)/,\r\n  abbreviated: /^(ينا|فبر|مارس|أبريل|مايو|يونـ|يولـ|أغسـ|سبتـ|أكتـ|نوفـ|ديسـ)/,\r\n  wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ي/,\r\n    /^ف/,\r\n    /^م/,\r\n    /^أ/,\r\n    /^م/,\r\n    /^ي/,\r\n    /^ي/,\r\n    /^أ/,\r\n    /^س/,\r\n    /^أ/,\r\n    /^ن/,\r\n    /^د/,\r\n  ],\r\n\r\n  any: [\r\n    /^ينا/,\r\n    /^فبر/,\r\n    /^مارس/,\r\n    /^أبريل/,\r\n    /^مايو/,\r\n    /^يون/,\r\n    /^يول/,\r\n    /^أغس/,\r\n    /^سبت/,\r\n    /^أكت/,\r\n    /^نوف/,\r\n    /^ديس/,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ح|ن|ث|ر|خ|ج|س)/,\r\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,\r\n  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/,\r\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/, /^ن/, /^ث/, /^ر/, /^خ/, /^ج/, /^س/],\r\n  any: [/أحد/, /اثنين/, /ثلاثاء/, /أربعاء/, /خميس/, /جمعة/, /سبت/],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ص|م|ن|ظ|في الصباح|بعد الظهر|في المساء|في الليل)/,\r\n  abbreviated: /^(ص|م|نصف الليل|ظهراً|في الصباح|بعد الظهر|في المساء|في الليل)/,\r\n  wide: /^(ص|م|نصف الليل|في الصباح|ظهراً|بعد الظهر|في المساء|في الليل)/,\r\n  any: /^(ص|م|صباح|ظهر|مساء|ليل)/,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ص/,\r\n    pm: /^م/,\r\n    midnight: /^ن/,\r\n    noon: /^ظ/,\r\n    morning: /^ص/,\r\n    afternoon: /^بعد/,\r\n    evening: /^م/,\r\n    night: /^ل/,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar-EG/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar-EG/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar-EG/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar-EG/_lib/localize.js\";\r\nimport { match } from \"./ar-EG/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Egypt).\r\n * @language Arabic\r\n * @iso-639-2 ara\r\n * @author AbdAllah AbdElFattah [@AbdAllahAbdElFattah13](https://github.com/AbdAllahAbdElFattah13)\r\n */\r\nexport const arEG = {\r\n  code: \"ar-EG\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default arEG;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية واحدة\",\r\n    two: \"أقل من ثانتين\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية واحدة\",\r\n    two: \"ثانتين\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نصف دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقائق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة واحدة\",\r\n    two: \"دقيقتين\",\r\n    threeToTen: \"{{count}} دقائق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ساعة واحدة تقريباً\",\r\n    two: \"ساعتين تقريباً\",\r\n    threeToTen: \"{{count}} ساعات تقريباً\",\r\n    other: \"{{count}} ساعة تقريباً\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة واحدة\",\r\n    two: \"ساعتين\",\r\n    threeToTen: \"{{count}} ساعات\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"يوم واحد\",\r\n    two: \"يومين\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"أسبوع واحد تقريباً\",\r\n    two: \"أسبوعين تقريباً\",\r\n    threeToTen: \"{{count}} أسابيع تقريباً\",\r\n    other: \"{{count}} أسبوع تقريباً\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"أسبوع واحد\",\r\n    two: \"أسبوعين\",\r\n    threeToTen: \"{{count}} أسابيع\",\r\n    other: \"{{count}} أسبوع\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"شهر واحد تقريباً\",\r\n    two: \"شهرين تقريباً\",\r\n    threeToTen: \"{{count}} أشهر تقريباً\",\r\n    other: \"{{count}} شهر تقريباً\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر واحد\",\r\n    two: \"شهرين\",\r\n    threeToTen: \"{{count}} أشهر\",\r\n    other: \"{{count}} شهر\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"عام واحد\",\r\n    two: \"عامين\",\r\n    threeToTen: \"{{count}} أعوام\",\r\n    other: \"{{count}} عام\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من عام\",\r\n    two: \"أكثر من عامين\",\r\n    threeToTen: \"أكثر من {{count}} أعوام\",\r\n    other: \"أكثر من {{count}} عام\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n\r\n  const usageGroup = formatDistanceLocale[token];\r\n  let result;\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else if (count === 2) {\r\n    result = usageGroup.two;\r\n  } else if (count <= 10) {\r\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"في خلال \" + result;\r\n    } else {\r\n      return \"منذ \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'عند' {{time}}\",\r\n  long: \"{{date}} 'عند' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'أخر' eeee 'عند' p\",\r\n  yesterday: \"'أمس عند' p\",\r\n  today: \"'اليوم عند' p\",\r\n  tomorrow: \"'غداً عند' p\",\r\n  nextWeek: \"eeee 'عند' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) => {\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"ي\", \"ف\", \"م\", \"أ\", \"م\", \"ي\", \"ي\", \"غ\", \"ش\", \"أ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"ينا\",\r\n    \"فبر\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"ماي\",\r\n    \"يونـ\",\r\n    \"يولـ\",\r\n    \"غشت\",\r\n    \"شتنـ\",\r\n    \"أكتـ\",\r\n    \"نونـ\",\r\n    \"دجنـ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يناير\",\r\n    \"فبراير\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"ماي\",\r\n    \"يونيو\",\r\n    \"يوليوز\",\r\n    \"غشت\",\r\n    \"شتنبر\",\r\n    \"أكتوبر\",\r\n    \"نونبر\",\r\n    \"دجنبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنـ\", \"ثلا\", \"أربـ\", \"خميـ\", \"جمعة\", \"سبت\"],\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الإثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ق|ب)/i,\r\n  abbreviated: /^(ق\\.?\\s?م\\.?|ق\\.?\\s?م\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\r\n  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^قبل/i, /^بعد/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ر[1234]/i,\r\n  wide: /^الربع [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[يفمأمسند]/i,\r\n  abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i,\r\n  wide: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ي/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^أ/i,\r\n    /^م/i,\r\n    /^ي/i,\r\n    /^ي/i,\r\n    /^غ/i,\r\n    /^ش/i,\r\n    /^أ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ين/i,\r\n    /^فب/i,\r\n    /^مار/i,\r\n    /^أب/i,\r\n    /^ماي/i,\r\n    /^يون/i,\r\n    /^يول/i,\r\n    /^غشت/i,\r\n    /^ش/i,\r\n    /^أك/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[حنثرخجس]/i,\r\n  short: /^(أحد|إثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  abbreviated: /^(أحد|إثن|ثلا|أرب|خمي|جمعة|سبت)/i,\r\n  wide: /^(الأحد|الإثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\r\n  wide: [\r\n    /^الأحد/i,\r\n    /^الإثنين/i,\r\n    /^الثلاثاء/i,\r\n    /^الأربعاء/i,\r\n    /^الخميس/i,\r\n    /^الجمعة/i,\r\n    /^السبت/i,\r\n  ],\r\n\r\n  any: [/^أح/i, /^إث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mi/i,\r\n    noon: /^no/i,\r\n    morning: /morning/i,\r\n    afternoon: /afternoon/i,\r\n    evening: /evening/i,\r\n    night: /night/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => Number(index) + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar-MA/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar-MA/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar-MA/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar-MA/_lib/localize.js\";\r\nimport { match } from \"./ar-MA/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Moroccan Arabic).\r\n * @language Moroccan Arabic\r\n * @iso-639-2 ara\r\n * @author Achraf Rrami [@rramiachraf](https://github.com/rramiachraf)\r\n */\r\nexport const arMA = {\r\n  code: \"ar-MA\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    // Monday is 1\r\n    weekStartsOn: 1,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default arMA;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية واحدة\",\r\n    two: \"أقل من ثانتين\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية واحدة\",\r\n    two: \"ثانتين\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نصف دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقائق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة واحدة\",\r\n    two: \"دقيقتين\",\r\n    threeToTen: \"{{count}} دقائق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ساعة واحدة تقريباً\",\r\n    two: \"ساعتين تقريباً\",\r\n    threeToTen: \"{{count}} ساعات تقريباً\",\r\n    other: \"{{count}} ساعة تقريباً\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة واحدة\",\r\n    two: \"ساعتين\",\r\n    threeToTen: \"{{count}} ساعات\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"يوم واحد\",\r\n    two: \"يومين\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"أسبوع واحد تقريباً\",\r\n    two: \"أسبوعين تقريباً\",\r\n    threeToTen: \"{{count}} أسابيع تقريباً\",\r\n    other: \"{{count}} أسبوع تقريباً\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"أسبوع واحد\",\r\n    two: \"أسبوعين\",\r\n    threeToTen: \"{{count}} أسابيع\",\r\n    other: \"{{count}} أسبوع\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"شهر واحد تقريباً\",\r\n    two: \"شهرين تقريباً\",\r\n    threeToTen: \"{{count}} أشهر تقريباً\",\r\n    other: \"{{count}} شهر تقريباً\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر واحد\",\r\n    two: \"شهرين\",\r\n    threeToTen: \"{{count}} أشهر\",\r\n    other: \"{{count}} شهر\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"عام واحد\",\r\n    two: \"عامين\",\r\n    threeToTen: \"{{count}} أعوام\",\r\n    other: \"{{count}} عام\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من عام\",\r\n    two: \"أكثر من عامين\",\r\n    threeToTen: \"أكثر من {{count}} أعوام\",\r\n    other: \"أكثر من {{count}} عام\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"عام واحد تقريباً\",\r\n    two: \"عامين تقريباً\",\r\n    threeToTen: \"{{count}} أعوام تقريباً\",\r\n    other: \"{{count}} عام تقريباً\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2) {\r\n    result = tokenValue.two;\r\n  } else if (count <= 10) {\r\n    result = tokenValue.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"في خلال \" + result;\r\n    } else {\r\n      return \"منذ \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'عند' {{time}}\",\r\n  long: \"{{date}} 'عند' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'أخر' eeee 'عند' p\",\r\n  yesterday: \"'أمس عند' p\",\r\n  today: \"'اليوم عند' p\",\r\n  tomorrow: \"'غداً عند' p\",\r\n  nextWeek: \"eeee 'عند' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"ي\", \"ف\", \"م\", \"أ\", \"م\", \"ي\", \"ي\", \"أ\", \"س\", \"أ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"ينا\",\r\n    \"فبر\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونـ\",\r\n    \"يولـ\",\r\n    \"أغسـ\",\r\n    \"سبتـ\",\r\n    \"أكتـ\",\r\n    \"نوفـ\",\r\n    \"ديسـ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يناير\",\r\n    \"فبراير\",\r\n    \"مارس\",\r\n    \"أبريل\",\r\n    \"مايو\",\r\n    \"يونيو\",\r\n    \"يوليو\",\r\n    \"أغسطس\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنـ\", \"ثلا\", \"أربـ\", \"خميـ\", \"جمعة\", \"سبت\"],\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الاثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"مساءاً\",\r\n    night: \"ليلاً\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"في الصباح\",\r\n    afternoon: \"بعد الظهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"م\",\r\n    midnight: \"نصف الليل\",\r\n    noon: \"ظهر\",\r\n    morning: \"صباحاً\",\r\n    afternoon: \"بعد الظـهر\",\r\n    evening: \"في المساء\",\r\n    night: \"في الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ق|ب)/i,\r\n  abbreviated: /^(ق\\.?\\s?م\\.?|ق\\.?\\s?م\\.?\\s?|a\\.?\\s?d\\.?|c\\.?\\s?)/i,\r\n  wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^قبل/i, /^بعد/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ر[1234]/i,\r\n  wide: /^الربع [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[يفمأمسند]/i,\r\n  abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,\r\n  wide: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ي/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^أ/i,\r\n    /^م/i,\r\n    /^ي/i,\r\n    /^ي/i,\r\n    /^أ/i,\r\n    /^س/i,\r\n    /^أ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ين/i,\r\n    /^ف/i,\r\n    /^مار/i,\r\n    /^أب/i,\r\n    /^ماي/i,\r\n    /^يون/i,\r\n    /^يول/i,\r\n    /^أغ/i,\r\n    /^س/i,\r\n    /^أك/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[حنثرخجس]/i,\r\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i,\r\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\r\n  wide: [\r\n    /^الأحد/i,\r\n    /^الاثنين/i,\r\n    /^الثلاثاء/i,\r\n    /^الأربعاء/i,\r\n    /^الخميس/i,\r\n    /^الجمعة/i,\r\n    /^السبت/i,\r\n  ],\r\n\r\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mi/i,\r\n    noon: /^no/i,\r\n    morning: /morning/i,\r\n    afternoon: /afternoon/i,\r\n    evening: /evening/i,\r\n    night: /night/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar-SA/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar-SA/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar-SA/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar-SA/_lib/localize.js\";\r\nimport { match } from \"./ar-SA/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Sauid Arabic).\r\n * @language Arabic\r\n * @iso-639-2 ara\r\n * @author Dhaifallah Alwadani [@dalwadani](https://github.com/dalwadani)\r\n */\r\nexport const arSA = {\r\n  code: \"ar-SA\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default arSA;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"أقل من ثانية\",\r\n    two: \"أقل من زوز ثواني\",\r\n    threeToTen: \"أقل من {{count}} ثواني\",\r\n    other: \"أقل من {{count}} ثانية\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ثانية\",\r\n    two: \"زوز ثواني\",\r\n    threeToTen: \"{{count}} ثواني\",\r\n    other: \"{{count}} ثانية\",\r\n  },\r\n\r\n  halfAMinute: \"نص دقيقة\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"أقل من دقيقة\",\r\n    two: \"أقل من دقيقتين\",\r\n    threeToTen: \"أقل من {{count}} دقايق\",\r\n    other: \"أقل من {{count}} دقيقة\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"دقيقة\",\r\n    two: \"دقيقتين\",\r\n    threeToTen: \"{{count}} دقايق\",\r\n    other: \"{{count}} دقيقة\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ساعة تقريب\",\r\n    two: \"ساعتين تقريب\",\r\n    threeToTen: \"{{count}} سوايع تقريب\",\r\n    other: \"{{count}} ساعة تقريب\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ساعة\",\r\n    two: \"ساعتين\",\r\n    threeToTen: \"{{count}} سوايع\",\r\n    other: \"{{count}} ساعة\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"نهار\",\r\n    two: \"نهارين\",\r\n    threeToTen: \"{{count}} أيام\",\r\n    other: \"{{count}} يوم\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"جمعة تقريب\",\r\n    two: \"جمعتين تقريب\",\r\n    threeToTen: \"{{count}} جماع تقريب\",\r\n    other: \"{{count}} جمعة تقريب\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"جمعة\",\r\n    two: \"جمعتين\",\r\n    threeToTen: \"{{count}} جماع\",\r\n    other: \"{{count}} جمعة\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"شهر تقريب\",\r\n    two: \"شهرين تقريب\",\r\n    threeToTen: \"{{count}} أشهرة تقريب\",\r\n    other: \"{{count}} شهر تقريب\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"شهر\",\r\n    two: \"شهرين\",\r\n    threeToTen: \"{{count}} أشهرة\",\r\n    other: \"{{count}} شهر\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"عام تقريب\",\r\n    two: \"عامين تقريب\",\r\n    threeToTen: \"{{count}} أعوام تقريب\",\r\n    other: \"{{count}} عام تقريب\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"عام\",\r\n    two: \"عامين\",\r\n    threeToTen: \"{{count}} أعوام\",\r\n    other: \"{{count}} عام\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"أكثر من عام\",\r\n    two: \"أكثر من عامين\",\r\n    threeToTen: \"أكثر من {{count}} أعوام\",\r\n    other: \"أكثر من {{count}} عام\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"عام تقريب\",\r\n    two: \"عامين تقريب\",\r\n    threeToTen: \"{{count}} أعوام تقريب\",\r\n    other: \"{{count}} عام تقريب\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const usageGroup = formatDistanceLocale[token];\r\n  let result;\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else if (count === 2) {\r\n    result = usageGroup.two;\r\n  } else if (count <= 10) {\r\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"في \" + result;\r\n    } else {\r\n      return \"عندو \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE، do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss\",\r\n  long: \"HH:mm:ss\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'مع' {{time}}\",\r\n  long: \"{{date}} 'مع' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'إلي فات مع' p\",\r\n  yesterday: \"'البارح مع' p\",\r\n  today: \"'اليوم مع' p\",\r\n  tomorrow: \"'غدوة مع' p\",\r\n  nextWeek: \"eeee 'الجمعة الجاية مع' p 'نهار'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token) => formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\r\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"د\", \"ن\", \"أ\", \"س\", \"أ\", \"ج\", \"ج\", \"م\", \"أ\", \"م\", \"ف\", \"ج\"],\r\n  abbreviated: [\r\n    \"جانفي\",\r\n    \"فيفري\",\r\n    \"مارس\",\r\n    \"أفريل\",\r\n    \"ماي\",\r\n    \"جوان\",\r\n    \"جويلية\",\r\n    \"أوت\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n\r\n  wide: [\r\n    \"جانفي\",\r\n    \"فيفري\",\r\n    \"مارس\",\r\n    \"أفريل\",\r\n    \"ماي\",\r\n    \"جوان\",\r\n    \"جويلية\",\r\n    \"أوت\",\r\n    \"سبتمبر\",\r\n    \"أكتوبر\",\r\n    \"نوفمبر\",\r\n    \"ديسمبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\r\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n  abbreviated: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\r\n\r\n  wide: [\r\n    \"الأحد\",\r\n    \"الاثنين\",\r\n    \"الثلاثاء\",\r\n    \"الأربعاء\",\r\n    \"الخميس\",\r\n    \"الجمعة\",\r\n    \"السبت\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"الصباح\",\r\n    noon: \"القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"العشية\",\r\n    night: \"الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"الصباح\",\r\n    noon: \"القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"العشية\",\r\n    night: \"الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"الصباح\",\r\n    noon: \"القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"العشية\",\r\n    night: \"الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"في الصباح\",\r\n    noon: \"في القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"في العشية\",\r\n    night: \"في الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"في الصباح\",\r\n    noon: \"في القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"في العشية\",\r\n    night: \"في الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n  wide: {\r\n    am: \"ص\",\r\n    pm: \"ع\",\r\n    morning: \"في الصباح\",\r\n    noon: \"في القايلة\",\r\n    afternoon: \"بعد القايلة\",\r\n    evening: \"في العشية\",\r\n    night: \"في الليل\",\r\n    midnight: \"نص الليل\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (num) => String(num);\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /[قب]/,\r\n  abbreviated: /[قب]\\.م\\./,\r\n  wide: /(قبل|بعد) الميلاد/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/قبل/, /بعد/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /ر[1234]/,\r\n  wide: /الربع (الأول|الثاني|الثالث|الرابع)/,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[جفمأسند]/,\r\n  abbreviated:\r\n    /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\r\n  wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ج/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^أ/i,\r\n    /^م/i,\r\n    /^ج/i,\r\n    /^ج/i,\r\n    /^أ/i,\r\n    /^س/i,\r\n    /^أ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^جانفي/i,\r\n    /^فيفري/i,\r\n    /^مارس/i,\r\n    /^أفريل/i,\r\n    /^ماي/i,\r\n    /^جوان/i,\r\n    /^جويلية/i,\r\n    /^أوت/i,\r\n    /^سبتمبر/i,\r\n    /^أكتوبر/i,\r\n    /^نوفمبر/i,\r\n    /^ديسمبر/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[حنثرخجس]/i,\r\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\r\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\r\n  wide: [\r\n    /^الأحد/i,\r\n    /^الاثنين/i,\r\n    /^الثلاثاء/i,\r\n    /^الأربعاء/i,\r\n    /^الخميس/i,\r\n    /^الجمعة/i,\r\n    /^السبت/i,\r\n  ],\r\n\r\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ص|ع|ن ل|ل|(في|مع) (صباح|قايلة|عشية|ليل))/,\r\n  any: /^([صع]|نص الليل|قايلة|(في|مع) (صباح|قايلة|عشية|ليل))/,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ص/,\r\n    pm: /^ع/,\r\n    midnight: /نص الليل/,\r\n    noon: /قايلة/,\r\n    afternoon: /بعد القايلة/,\r\n    morning: /صباح/,\r\n    evening: /عشية/,\r\n    night: /ليل/,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ar-TN/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ar-TN/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ar-TN/_lib/formatRelative.js\";\r\nimport { localize } from \"./ar-TN/_lib/localize.js\";\r\nimport { match } from \"./ar-TN/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Arabic locale (Tunisian Arabic).\r\n * @language Arabic\r\n * @iso-639-2 ara\r\n * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)\r\n */\r\nexport const arTN = {\r\n  code: \"ar-TN\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default arTN;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"bir saniyədən az\",\r\n    other: \"{{count}} bir saniyədən az\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 saniyə\",\r\n    other: \"{{count}} saniyə\",\r\n  },\r\n\r\n  halfAMinute: \"yarım dəqiqə\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"bir dəqiqədən az\",\r\n    other: \"{{count}} bir dəqiqədən az\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"bir dəqiqə\",\r\n    other: \"{{count}} dəqiqə\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"təxminən 1 saat\",\r\n    other: \"təxminən {{count}} saat\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 saat\",\r\n    other: \"{{count}} saat\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 gün\",\r\n    other: \"{{count}} gün\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"təxminən 1 həftə\",\r\n    other: \"təxminən {{count}} həftə\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 həftə\",\r\n    other: \"{{count}} həftə\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"təxminən 1 ay\",\r\n    other: \"təxminən {{count}} ay\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 ay\",\r\n    other: \"{{count}} ay\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"təxminən 1 il\",\r\n    other: \"təxminən {{count}} il\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 il\",\r\n    other: \"{{count}} il\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 ildən çox\",\r\n    other: \"{{count}} ildən çox\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"demək olar ki 1 il\",\r\n    other: \"demək olar ki {{count}} il\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" sonra\";\r\n    } else {\r\n      return result + \" əvvəl\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y 'il'\",\r\n  long: \"do MMMM y 'il'\",\r\n  medium: \"d MMM y 'il'\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}} - 'də'\",\r\n  long: \"{{date}} {{time}} - 'də'\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'sonuncu' eeee p -'də'\",\r\n  yesterday: \"'dünən' p -'də'\",\r\n  today: \"'bugün' p -'də'\",\r\n  tomorrow: \"'sabah' p -'də'\",\r\n  nextWeek: \"eeee p -'də'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"e.ə\", \"b.e\"],\r\n  abbreviated: [\"e.ə\", \"b.e\"],\r\n  wide: [\"eramızdan əvvəl\", \"bizim era\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1ci kvartal\", \"2ci kvartal\", \"3cü kvartal\", \"4cü kvartal\"],\r\n};\r\nconst monthValues = {\r\n  narrow: [\"Y\", \"F\", \"M\", \"A\", \"M\", \"İ\", \"İ\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Yan\",\r\n    \"Fev\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"İyun\",\r\n    \"İyul\",\r\n    \"Avq\",\r\n    \"Sen\",\r\n    \"Okt\",\r\n    \"Noy\",\r\n    \"Dek\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Yanvar\",\r\n    \"Fevral\",\r\n    \"Mart\",\r\n    \"Aprel\",\r\n    \"May\",\r\n    \"İyun\",\r\n    \"İyul\",\r\n    \"Avqust\",\r\n    \"Sentyabr\",\r\n    \"Oktyabr\",\r\n    \"Noyabr\",\r\n    \"Dekabr\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"B.\", \"B.e\", \"Ç.a\", \"Ç.\", \"C.a\", \"C.\", \"Ş.\"],\r\n  short: [\"B.\", \"B.e\", \"Ç.a\", \"Ç.\", \"C.a\", \"C.\", \"Ş.\"],\r\n  abbreviated: [\"Baz\", \"Baz.e\", \"Çər.a\", \"Çər\", \"Cüm.a\", \"Cüm\", \"Şə\"],\r\n  wide: [\r\n    \"Bazar\",\r\n    \"Bazar ertəsi\",\r\n    \"Çərşənbə axşamı\",\r\n    \"Çərşənbə\",\r\n    \"Cümə axşamı\",\r\n    \"Cümə\",\r\n    \"Şənbə\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gecəyarı\",\r\n    noon: \"gün\",\r\n    morning: \"səhər\",\r\n    afternoon: \"gündüz\",\r\n    evening: \"axşam\",\r\n    night: \"gecə\",\r\n  },\r\n};\r\n\r\nconst suffixes = {\r\n  1: \"-inci\",\r\n  5: \"-inci\",\r\n  8: \"-inci\",\r\n  70: \"-inci\",\r\n  80: \"-inci\",\r\n  2: \"-nci\",\r\n  7: \"-nci\",\r\n  20: \"-nci\",\r\n  50: \"-nci\",\r\n  3: \"-üncü\",\r\n  4: \"-üncü\",\r\n  100: \"-üncü\",\r\n  6: \"-ncı\",\r\n  9: \"-uncu\",\r\n  10: \"-uncu\",\r\n  30: \"-uncu\",\r\n  60: \"-ıncı\",\r\n  90: \"-ıncı\",\r\n};\r\n\r\nconst getSuffix = (number) => {\r\n  if (number === 0) {\r\n    // special case for zero\r\n    return number + \"-ıncı\";\r\n  }\r\n\r\n  const a = number % 10;\r\n  const b = (number % 100) - a;\r\n  const c = number >= 100 ? 100 : null;\r\n\r\n  if (suffixes[a]) {\r\n    return suffixes[a];\r\n  } else if (suffixes[b]) {\r\n    return suffixes[b];\r\n  } else if (c !== null) {\r\n    return suffixes[c];\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  const suffix = getSuffix(number);\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(ci|inci|nci|uncu|üncü|ncı))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(b|a)$/i,\r\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)$/i,\r\n  wide: /^(bizim eradan əvvəl|bizim era)$/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^b$/i, /^(a|c)$/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]$/i,\r\n  abbreviated: /^K[1234]$/i,\r\n  wide: /^[1234](ci)? kvartal$/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[(?-i)yfmaisond]$/i,\r\n  abbreviated: /^(Yan|Fev|Mar|Apr|May|İyun|İyul|Avq|Sen|Okt|Noy|Dek)$/i,\r\n  wide: /^(Yanvar|Fevral|Mart|Aprel|May|İyun|İyul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^[(?-i)y]$/i,\r\n    /^[(?-i)f]$/i,\r\n    /^[(?-i)m]$/i,\r\n    /^[(?-i)a]$/i,\r\n    /^[(?-i)m]$/i,\r\n    /^[(?-i)i]$/i,\r\n    /^[(?-i)i]$/i,\r\n    /^[(?-i)a]$/i,\r\n    /^[(?-i)s]$/i,\r\n    /^[(?-i)o]$/i,\r\n    /^[(?-i)n]$/i,\r\n    /^[(?-i)d]$/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^Yan$/i,\r\n    /^Fev$/i,\r\n    /^Mar$/i,\r\n    /^Apr$/i,\r\n    /^May$/i,\r\n    /^İyun$/i,\r\n    /^İyul$/i,\r\n    /^Avg$/i,\r\n    /^Sen$/i,\r\n    /^Okt$/i,\r\n    /^Noy$/i,\r\n    /^Dek$/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^Yanvar$/i,\r\n    /^Fevral$/i,\r\n    /^Mart$/i,\r\n    /^Aprel$/i,\r\n    /^May$/i,\r\n    /^İyun$/i,\r\n    /^İyul$/i,\r\n    /^Avgust$/i,\r\n    /^Sentyabr$/i,\r\n    /^Oktyabr$/i,\r\n    /^Noyabr$/i,\r\n    /^Dekabr$/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(B\\.|B\\.e|Ç\\.a|Ç\\.|C\\.a|C\\.|Ş\\.)$/i,\r\n  short: /^(B\\.|B\\.e|Ç\\.a|Ç\\.|C\\.a|C\\.|Ş\\.)$/i,\r\n  abbreviated: /^(Baz\\.e|Çər|Çər\\.a|Cüm|Cüm\\.a|Şə)$/i,\r\n  wide: /^(Bazar|Bazar ertəsi|Çərşənbə axşamı|Çərşənbə|Cümə axşamı|Cümə|Şənbə)$/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [\r\n    /^B\\.$/i,\r\n    /^B\\.e$/i,\r\n    /^Ç\\.a$/i,\r\n    /^Ç\\.$/i,\r\n    /^C\\.a$/i,\r\n    /^C\\.$/i,\r\n    /^Ş\\.$/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^Baz$/i,\r\n    /^Baz\\.e$/i,\r\n    /^Çər\\.a$/i,\r\n    /^Çər$/i,\r\n    /^Cüm\\.a$/i,\r\n    /^Cüm$/i,\r\n    /^Şə$/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^Bazar$/i,\r\n    /^Bazar ertəsi$/i,\r\n    /^Çərşənbə axşamı$/i,\r\n    /^Çərşənbə$/i,\r\n    /^Cümə axşamı$/i,\r\n    /^Cümə$/i,\r\n    /^Şənbə$/i,\r\n  ],\r\n\r\n  any: [\r\n    /^B\\.$/i,\r\n    /^B\\.e$/i,\r\n    /^Ç\\.a$/i,\r\n    /^Ç\\.$/i,\r\n    /^C\\.a$/i,\r\n    /^C\\.$/i,\r\n    /^Ş\\.$/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i,\r\n  any: /^(am|pm|a\\.m\\.|p\\.m\\.|AM|PM|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a$/i,\r\n    pm: /^p$/i,\r\n    midnight: /^gecəyarı$/i,\r\n    noon: /^gün$/i,\r\n    morning: /səhər$/i,\r\n    afternoon: /gündüz$/i,\r\n    evening: /axşam$/i,\r\n    night: /gecə$/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"narrow\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./az/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./az/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./az/_lib/formatRelative.js\";\r\nimport { localize } from \"./az/_lib/localize.js\";\r\nimport { match } from \"./az/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Azerbaijani locale.\r\n * @language Azerbaijani\r\n * @iso-639-2 aze\r\n */\r\n\r\nexport const az = {\r\n  code: \"az\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default az;\r\n", "function declension(scheme, count) {\r\n  // scheme for count=1 exists\r\n  if (scheme.one !== undefined && count === 1) {\r\n    return scheme.one;\r\n  }\r\n\r\n  const rem10 = count % 10;\r\n  const rem100 = count % 100;\r\n\r\n  // 1, 21, 31, ...\r\n  if (rem10 === 1 && rem100 !== 11) {\r\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\r\n\r\n    // 2, 3, 4, 22, 23, 24, 32 ...\r\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\r\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\r\n\r\n    // 5, 6, 7, 8, 9, 10, 11, ...\r\n  } else {\r\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\r\n  }\r\n}\r\n\r\nfunction buildLocalizeTokenFn(scheme) {\r\n  return (count, options) => {\r\n    if (options && options.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        if (scheme.future) {\r\n          return declension(scheme.future, count);\r\n        } else {\r\n          return \"праз \" + declension(scheme.regular, count);\r\n        }\r\n      } else {\r\n        if (scheme.past) {\r\n          return declension(scheme.past, count);\r\n        } else {\r\n          return declension(scheme.regular, count) + \" таму\";\r\n        }\r\n      }\r\n    } else {\r\n      return declension(scheme.regular, count);\r\n    }\r\n  };\r\n}\r\n\r\nconst halfAMinute = (_, options) => {\r\n  if (options && options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"праз паўхвіліны\";\r\n    } else {\r\n      return \"паўхвіліны таму\";\r\n    }\r\n  }\r\n\r\n  return \"паўхвіліны\";\r\n};\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менш за секунду\",\r\n      singularNominative: \"менш за {{count}} секунду\",\r\n      singularGenitive: \"менш за {{count}} секунды\",\r\n      pluralGenitive: \"менш за {{count}} секунд\",\r\n    },\r\n    future: {\r\n      one: \"менш, чым праз секунду\",\r\n      singularNominative: \"менш, чым праз {{count}} секунду\",\r\n      singularGenitive: \"менш, чым праз {{count}} секунды\",\r\n      pluralGenitive: \"менш, чым праз {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  xSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} секунда\",\r\n      singularGenitive: \"{{count}} секунды\",\r\n      pluralGenitive: \"{{count}} секунд\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} секунду таму\",\r\n      singularGenitive: \"{{count}} секунды таму\",\r\n      pluralGenitive: \"{{count}} секунд таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} секунду\",\r\n      singularGenitive: \"праз {{count}} секунды\",\r\n      pluralGenitive: \"праз {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  halfAMinute: halfAMinute,\r\n\r\n  lessThanXMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менш за хвіліну\",\r\n      singularNominative: \"менш за {{count}} хвіліну\",\r\n      singularGenitive: \"менш за {{count}} хвіліны\",\r\n      pluralGenitive: \"менш за {{count}} хвілін\",\r\n    },\r\n    future: {\r\n      one: \"менш, чым праз хвіліну\",\r\n      singularNominative: \"менш, чым праз {{count}} хвіліну\",\r\n      singularGenitive: \"менш, чым праз {{count}} хвіліны\",\r\n      pluralGenitive: \"менш, чым праз {{count}} хвілін\",\r\n    },\r\n  }),\r\n\r\n  xMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} хвіліна\",\r\n      singularGenitive: \"{{count}} хвіліны\",\r\n      pluralGenitive: \"{{count}} хвілін\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} хвіліну таму\",\r\n      singularGenitive: \"{{count}} хвіліны таму\",\r\n      pluralGenitive: \"{{count}} хвілін таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} хвіліну\",\r\n      singularGenitive: \"праз {{count}} хвіліны\",\r\n      pluralGenitive: \"праз {{count}} хвілін\",\r\n    },\r\n  }),\r\n\r\n  aboutXHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} гадзіны\",\r\n      singularGenitive: \"каля {{count}} гадзін\",\r\n      pluralGenitive: \"каля {{count}} гадзін\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} гадзіну\",\r\n      singularGenitive: \"прыблізна праз {{count}} гадзіны\",\r\n      pluralGenitive: \"прыблізна праз {{count}} гадзін\",\r\n    },\r\n  }),\r\n\r\n  xHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} гадзіна\",\r\n      singularGenitive: \"{{count}} гадзіны\",\r\n      pluralGenitive: \"{{count}} гадзін\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} гадзіну таму\",\r\n      singularGenitive: \"{{count}} гадзіны таму\",\r\n      pluralGenitive: \"{{count}} гадзін таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} гадзіну\",\r\n      singularGenitive: \"праз {{count}} гадзіны\",\r\n      pluralGenitive: \"праз {{count}} гадзін\",\r\n    },\r\n  }),\r\n\r\n  xDays: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} дзень\",\r\n      singularGenitive: \"{{count}} дні\",\r\n      pluralGenitive: \"{{count}} дзён\",\r\n    },\r\n  }),\r\n\r\n  aboutXWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} тыдні\",\r\n      singularGenitive: \"каля {{count}} тыдняў\",\r\n      pluralGenitive: \"каля {{count}} тыдняў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} тыдзень\",\r\n      singularGenitive: \"прыблізна праз {{count}} тыдні\",\r\n      pluralGenitive: \"прыблізна праз {{count}} тыдняў\",\r\n    },\r\n  }),\r\n\r\n  xWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} тыдзень\",\r\n      singularGenitive: \"{{count}} тыдні\",\r\n      pluralGenitive: \"{{count}} тыдняў\",\r\n    },\r\n  }),\r\n\r\n  aboutXMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} месяца\",\r\n      singularGenitive: \"каля {{count}} месяцаў\",\r\n      pluralGenitive: \"каля {{count}} месяцаў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} месяц\",\r\n      singularGenitive: \"прыблізна праз {{count}} месяцы\",\r\n      pluralGenitive: \"прыблізна праз {{count}} месяцаў\",\r\n    },\r\n  }),\r\n\r\n  xMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} месяц\",\r\n      singularGenitive: \"{{count}} месяцы\",\r\n      pluralGenitive: \"{{count}} месяцаў\",\r\n    },\r\n  }),\r\n\r\n  aboutXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} года\",\r\n      singularGenitive: \"каля {{count}} гадоў\",\r\n      pluralGenitive: \"каля {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} год\",\r\n      singularGenitive: \"прыблізна праз {{count}} гады\",\r\n      pluralGenitive: \"прыблізна праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  xYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} год\",\r\n      singularGenitive: \"{{count}} гады\",\r\n      pluralGenitive: \"{{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  overXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"больш за {{count}} год\",\r\n      singularGenitive: \"больш за {{count}} гады\",\r\n      pluralGenitive: \"больш за {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"больш, чым праз {{count}} год\",\r\n      singularGenitive: \"больш, чым праз {{count}} гады\",\r\n      pluralGenitive: \"больш, чым праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  almostXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"амаль {{count}} год\",\r\n      singularGenitive: \"амаль {{count}} гады\",\r\n      pluralGenitive: \"амаль {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"амаль праз {{count}} год\",\r\n      singularGenitive: \"амаль праз {{count}} гады\",\r\n      pluralGenitive: \"амаль праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n  return formatDistanceLocale[token](count, options);\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM y 'г.'\",\r\n  long: \"d MMMM y 'г.'\",\r\n  medium: \"d MMM y 'г.'\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\nimport { toDate } from \"../../../toDate.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"нядзелю\",\r\n  \"панядзелак\",\r\n  \"аўторак\",\r\n  \"сераду\",\r\n  \"чацвер\",\r\n  \"пятніцу\",\r\n  \"суботу\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у мінулую \" + weekday + \" а' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у мінулы \" + weekday + \" а' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'у \" + weekday + \" а' p\";\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у наступную \" + weekday + \" а' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у наступны \" + weekday + \" а' p\";\r\n  }\r\n}\r\n\r\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return lastWeek(day);\r\n  }\r\n};\r\n\r\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return nextWeek(day);\r\n  }\r\n};\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: lastWeekFormat,\r\n  yesterday: \"'учора а' p\",\r\n  today: \"'сёння а' p\",\r\n  tomorrow: \"'заўтра а' p\",\r\n  nextWeek: nextWeekFormat,\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"да н.э.\", \"н.э.\"],\r\n  abbreviated: [\"да н. э.\", \"н. э.\"],\r\n  wide: [\"да нашай эры\", \"нашай эры\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-ы кв.\", \"2-і кв.\", \"3-і кв.\", \"4-ы кв.\"],\r\n  wide: [\"1-ы квартал\", \"2-і квартал\", \"3-і квартал\", \"4-ы квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"С\", \"Л\", \"С\", \"К\", \"М\", \"Ч\", \"Л\", \"Ж\", \"В\", \"К\", \"Л\", \"С\"],\r\n  abbreviated: [\r\n    \"студз.\",\r\n    \"лют.\",\r\n    \"сак.\",\r\n    \"крас.\",\r\n    \"май\",\r\n    \"чэрв.\",\r\n    \"ліп.\",\r\n    \"жн.\",\r\n    \"вер.\",\r\n    \"кастр.\",\r\n    \"ліст.\",\r\n    \"снеж.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"студзень\",\r\n    \"люты\",\r\n    \"сакавік\",\r\n    \"красавік\",\r\n    \"май\",\r\n    \"чэрвень\",\r\n    \"ліпень\",\r\n    \"жнівень\",\r\n    \"верасень\",\r\n    \"кастрычнік\",\r\n    \"лістапад\",\r\n    \"снежань\",\r\n  ],\r\n};\r\nconst formattingMonthValues = {\r\n  narrow: [\"С\", \"Л\", \"С\", \"К\", \"М\", \"Ч\", \"Л\", \"Ж\", \"В\", \"К\", \"Л\", \"С\"],\r\n  abbreviated: [\r\n    \"студз.\",\r\n    \"лют.\",\r\n    \"сак.\",\r\n    \"крас.\",\r\n    \"мая\",\r\n    \"чэрв.\",\r\n    \"ліп.\",\r\n    \"жн.\",\r\n    \"вер.\",\r\n    \"кастр.\",\r\n    \"ліст.\",\r\n    \"снеж.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"студзеня\",\r\n    \"лютага\",\r\n    \"сакавіка\",\r\n    \"красавіка\",\r\n    \"мая\",\r\n    \"чэрвеня\",\r\n    \"ліпеня\",\r\n    \"жніўня\",\r\n    \"верасня\",\r\n    \"кастрычніка\",\r\n    \"лістапада\",\r\n    \"снежня\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"А\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"нд\", \"пн\", \"аў\", \"ср\", \"чц\", \"пт\", \"сб\"],\r\n  abbreviated: [\"нядз\", \"пан\", \"аўт\", \"сер\", \"чац\", \"пят\", \"суб\"],\r\n  wide: [\r\n    \"нядзеля\",\r\n    \"панядзелак\",\r\n    \"аўторак\",\r\n    \"серада\",\r\n    \"чацвер\",\r\n    \"пятніца\",\r\n    \"субота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дзень\",\r\n    evening: \"веч.\",\r\n    night: \"ноч\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дзень\",\r\n    evening: \"веч.\",\r\n    night: \"ноч\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўнач\",\r\n    noon: \"поўдзень\",\r\n    morning: \"раніца\",\r\n    afternoon: \"дзень\",\r\n    evening: \"вечар\",\r\n    night: \"ноч\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночы\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночы\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўнач\",\r\n    noon: \"поўдзень\",\r\n    morning: \"раніцы\",\r\n    afternoon: \"дня\",\r\n    evening: \"вечара\",\r\n    night: \"ночы\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const unit = String(options?.unit);\r\n  const number = Number(dirtyNumber);\r\n  let suffix;\r\n\r\n  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)\r\n   *  For date-month combinations should be used `d` formatter.\r\n   *  Correct:   `d MMMM` (4 верасня)\r\n   *  Incorrect: `do MMMM` (4-га верасня)\r\n   *\r\n   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).\r\n   *  So for phrase \"5th day of month\" (`do дзень месяца`)\r\n   *  library will produce:            `5-га дзень месяца`\r\n   *  but correct spelling should be:  `5-ы дзень месяца`\r\n   *\r\n   *  So I guess there should be a stand-alone and a formatting version of \"day of month\" formatters\r\n   */\r\n  if (unit === \"date\") {\r\n    suffix = \"-га\";\r\n  } else if (unit === \"hour\" || unit === \"minute\" || unit === \"second\") {\r\n    suffix = \"-я\";\r\n  } else {\r\n    suffix =\r\n      (number % 10 === 2 || number % 10 === 3) &&\r\n      number % 100 !== 12 &&\r\n      number % 100 !== 13\r\n        ? \"-і\"\r\n        : \"-ы\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern =\r\n  /^(\\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((да )?н\\.?\\s?э\\.?)/i,\r\n  abbreviated: /^((да )?н\\.?\\s?э\\.?)/i,\r\n  wide: /^(да нашай эры|нашай эры|наша эра)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^д/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[ыі]?)? кв.?/i,\r\n  wide: /^[1234](-?[ыі]?)? квартал/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[слкмчжв]/i,\r\n  abbreviated:\r\n    /^(студз|лют|сак|крас|ма[йя]|чэрв|ліп|жн|вер|кастр|ліст|снеж)\\.?/i,\r\n  wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|ма[йя]|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|снеж(ань|ня))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^с/i,\r\n    /^л/i,\r\n    /^с/i,\r\n    /^к/i,\r\n    /^м/i,\r\n    /^ч/i,\r\n    /^л/i,\r\n    /^ж/i,\r\n    /^в/i,\r\n    /^к/i,\r\n    /^л/i,\r\n    /^с/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ст/i,\r\n    /^лю/i,\r\n    /^са/i,\r\n    /^кр/i,\r\n    /^ма/i,\r\n    /^ч/i,\r\n    /^ліп/i,\r\n    /^ж/i,\r\n    /^в/i,\r\n    /^ка/i,\r\n    /^ліс/i,\r\n    /^сн/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[нпасч]/i,\r\n  short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\\.?/i,\r\n  abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцв|чац|птн|пят|суб).?/i,\r\n  wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацв(ер|ярга)|пятніц[аы]|субот[аы])/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\r\n  abbreviated: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\r\n  wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^дп/i,\r\n    pm: /^пп/i,\r\n    midnight: /^поўн/i,\r\n    noon: /^поўд/i,\r\n    morning: /^р/i,\r\n    afternoon: /^д[зн]/i,\r\n    evening: /^в/i,\r\n    night: /^н/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./be/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./be/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./be/_lib/formatRelative.js\";\r\nimport { localize } from \"./be/_lib/localize.js\";\r\nimport { match } from \"./be/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Belarusian locale.\r\n * @language Belarusian\r\n * @iso-639-2 bel\r\n * @author Kiryl Anokhin [@alyrik](https://github.com/alyrik)\r\n * @author Martin Wind [@arvigeus](https://github.com/mawi12345)\r\n */\r\nexport const be = {\r\n  code: \"be\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default be;\r\n", "function declension(scheme, count) {\r\n  // scheme for count=1 exists\r\n  if (scheme.one !== undefined && count === 1) {\r\n    return scheme.one;\r\n  }\r\n\r\n  const rem10 = count % 10;\r\n  const rem100 = count % 100;\r\n\r\n  // 1, 21, 31, ...\r\n  if (rem10 === 1 && rem100 !== 11) {\r\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\r\n\r\n    // 2, 3, 4, 22, 23, 24, 32 ...\r\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\r\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\r\n\r\n    // 5, 6, 7, 8, 9, 10, 11, ...\r\n  } else {\r\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\r\n  }\r\n}\r\n\r\nfunction buildLocalizeTokenFn(scheme) {\r\n  return (count, options) => {\r\n    if (options && options.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        if (scheme.future) {\r\n          return declension(scheme.future, count);\r\n        } else {\r\n          return \"праз \" + declension(scheme.regular, count);\r\n        }\r\n      } else {\r\n        if (scheme.past) {\r\n          return declension(scheme.past, count);\r\n        } else {\r\n          return declension(scheme.regular, count) + \" таму\";\r\n        }\r\n      }\r\n    } else {\r\n      return declension(scheme.regular, count);\r\n    }\r\n  };\r\n}\r\n\r\nconst halfAMinute = (_, options) => {\r\n  if (options && options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"праз паўхвіліны\";\r\n    } else {\r\n      return \"паўхвіліны таму\";\r\n    }\r\n  }\r\n\r\n  return \"паўхвіліны\";\r\n};\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менш за секунду\",\r\n      singularNominative: \"менш за {{count}} секунду\",\r\n      singularGenitive: \"менш за {{count}} секунды\",\r\n      pluralGenitive: \"менш за {{count}} секунд\",\r\n    },\r\n    future: {\r\n      one: \"менш, чым праз секунду\",\r\n      singularNominative: \"менш, чым праз {{count}} секунду\",\r\n      singularGenitive: \"менш, чым праз {{count}} секунды\",\r\n      pluralGenitive: \"менш, чым праз {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  xSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} секунда\",\r\n      singularGenitive: \"{{count}} секунды\",\r\n      pluralGenitive: \"{{count}} секунд\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} секунду таму\",\r\n      singularGenitive: \"{{count}} секунды таму\",\r\n      pluralGenitive: \"{{count}} секунд таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} секунду\",\r\n      singularGenitive: \"праз {{count}} секунды\",\r\n      pluralGenitive: \"праз {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  halfAMinute: halfAMinute,\r\n\r\n  lessThanXMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менш за хвіліну\",\r\n      singularNominative: \"менш за {{count}} хвіліну\",\r\n      singularGenitive: \"менш за {{count}} хвіліны\",\r\n      pluralGenitive: \"менш за {{count}} хвілін\",\r\n    },\r\n    future: {\r\n      one: \"менш, чым праз хвіліну\",\r\n      singularNominative: \"менш, чым праз {{count}} хвіліну\",\r\n      singularGenitive: \"менш, чым праз {{count}} хвіліны\",\r\n      pluralGenitive: \"менш, чым праз {{count}} хвілін\",\r\n    },\r\n  }),\r\n\r\n  xMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} хвіліна\",\r\n      singularGenitive: \"{{count}} хвіліны\",\r\n      pluralGenitive: \"{{count}} хвілін\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} хвіліну таму\",\r\n      singularGenitive: \"{{count}} хвіліны таму\",\r\n      pluralGenitive: \"{{count}} хвілін таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} хвіліну\",\r\n      singularGenitive: \"праз {{count}} хвіліны\",\r\n      pluralGenitive: \"праз {{count}} хвілін\",\r\n    },\r\n  }),\r\n\r\n  aboutXHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} гадзіны\",\r\n      singularGenitive: \"каля {{count}} гадзін\",\r\n      pluralGenitive: \"каля {{count}} гадзін\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} гадзіну\",\r\n      singularGenitive: \"прыблізна праз {{count}} гадзіны\",\r\n      pluralGenitive: \"прыблізна праз {{count}} гадзін\",\r\n    },\r\n  }),\r\n\r\n  xHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} гадзіна\",\r\n      singularGenitive: \"{{count}} гадзіны\",\r\n      pluralGenitive: \"{{count}} гадзін\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} гадзіну таму\",\r\n      singularGenitive: \"{{count}} гадзіны таму\",\r\n      pluralGenitive: \"{{count}} гадзін таму\",\r\n    },\r\n    future: {\r\n      singularNominative: \"праз {{count}} гадзіну\",\r\n      singularGenitive: \"праз {{count}} гадзіны\",\r\n      pluralGenitive: \"праз {{count}} гадзін\",\r\n    },\r\n  }),\r\n\r\n  xDays: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} дзень\",\r\n      singularGenitive: \"{{count}} дні\",\r\n      pluralGenitive: \"{{count}} дзён\",\r\n    },\r\n  }),\r\n\r\n  aboutXWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} тыдні\",\r\n      singularGenitive: \"каля {{count}} тыдняў\",\r\n      pluralGenitive: \"каля {{count}} тыдняў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} тыдзень\",\r\n      singularGenitive: \"прыблізна праз {{count}} тыдні\",\r\n      pluralGenitive: \"прыблізна праз {{count}} тыдняў\",\r\n    },\r\n  }),\r\n\r\n  xWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} тыдзень\",\r\n      singularGenitive: \"{{count}} тыдні\",\r\n      pluralGenitive: \"{{count}} тыдняў\",\r\n    },\r\n  }),\r\n\r\n  aboutXMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} месяца\",\r\n      singularGenitive: \"каля {{count}} месяцаў\",\r\n      pluralGenitive: \"каля {{count}} месяцаў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} месяц\",\r\n      singularGenitive: \"прыблізна праз {{count}} месяцы\",\r\n      pluralGenitive: \"прыблізна праз {{count}} месяцаў\",\r\n    },\r\n  }),\r\n\r\n  xMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} месяц\",\r\n      singularGenitive: \"{{count}} месяцы\",\r\n      pluralGenitive: \"{{count}} месяцаў\",\r\n    },\r\n  }),\r\n\r\n  aboutXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"каля {{count}} года\",\r\n      singularGenitive: \"каля {{count}} гадоў\",\r\n      pluralGenitive: \"каля {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"прыблізна праз {{count}} год\",\r\n      singularGenitive: \"прыблізна праз {{count}} гады\",\r\n      pluralGenitive: \"прыблізна праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  xYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} год\",\r\n      singularGenitive: \"{{count}} гады\",\r\n      pluralGenitive: \"{{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  overXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"больш за {{count}} год\",\r\n      singularGenitive: \"больш за {{count}} гады\",\r\n      pluralGenitive: \"больш за {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"больш, чым праз {{count}} год\",\r\n      singularGenitive: \"больш, чым праз {{count}} гады\",\r\n      pluralGenitive: \"больш, чым праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n\r\n  almostXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"амаль {{count}} год\",\r\n      singularGenitive: \"амаль {{count}} гады\",\r\n      pluralGenitive: \"амаль {{count}} гадоў\",\r\n    },\r\n    future: {\r\n      singularNominative: \"амаль праз {{count}} год\",\r\n      singularGenitive: \"амаль праз {{count}} гады\",\r\n      pluralGenitive: \"амаль праз {{count}} гадоў\",\r\n    },\r\n  }),\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n  return formatDistanceLocale[token](count, options);\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM y 'г.'\",\r\n  long: \"d MMMM y 'г.'\",\r\n  medium: \"d MMM y 'г.'\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\nimport { toDate } from \"../../../toDate.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"нядзелю\",\r\n  \"панядзелак\",\r\n  \"аўторак\",\r\n  \"сераду\",\r\n  \"чацьвер\",\r\n  \"пятніцу\",\r\n  \"суботу\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у мінулую \" + weekday + \" а' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у мінулы \" + weekday + \" а' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'у \" + weekday + \" а' p\";\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у наступную \" + weekday + \" а' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у наступны \" + weekday + \" а' p\";\r\n  }\r\n}\r\n\r\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return lastWeek(day);\r\n  }\r\n};\r\n\r\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return nextWeek(day);\r\n  }\r\n};\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: lastWeekFormat,\r\n  yesterday: \"'учора а' p\",\r\n  today: \"'сёньня а' p\",\r\n  tomorrow: \"'заўтра а' p\",\r\n  nextWeek: nextWeekFormat,\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"да н.э.\", \"н.э.\"],\r\n  abbreviated: [\"да н. э.\", \"н. э.\"],\r\n  wide: [\"да нашай эры\", \"нашай эры\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-ы кв.\", \"2-і кв.\", \"3-і кв.\", \"4-ы кв.\"],\r\n  wide: [\"1-ы квартал\", \"2-і квартал\", \"3-і квартал\", \"4-ы квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"С\", \"Л\", \"С\", \"К\", \"Т\", \"Ч\", \"Л\", \"Ж\", \"В\", \"К\", \"Л\", \"С\"],\r\n  abbreviated: [\r\n    \"студз.\",\r\n    \"лют.\",\r\n    \"сак.\",\r\n    \"крас.\",\r\n    \"трав.\",\r\n    \"чэрв.\",\r\n    \"ліп.\",\r\n    \"жн.\",\r\n    \"вер.\",\r\n    \"кастр.\",\r\n    \"ліст.\",\r\n    \"сьнеж.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"студзень\",\r\n    \"люты\",\r\n    \"сакавік\",\r\n    \"красавік\",\r\n    \"травень\",\r\n    \"чэрвень\",\r\n    \"ліпень\",\r\n    \"жнівень\",\r\n    \"верасень\",\r\n    \"кастрычнік\",\r\n    \"лістапад\",\r\n    \"сьнежань\",\r\n  ],\r\n};\r\nconst formattingMonthValues = {\r\n  narrow: [\"С\", \"Л\", \"С\", \"К\", \"Т\", \"Ч\", \"Л\", \"Ж\", \"В\", \"К\", \"Л\", \"С\"],\r\n  abbreviated: [\r\n    \"студз.\",\r\n    \"лют.\",\r\n    \"сак.\",\r\n    \"крас.\",\r\n    \"трав.\",\r\n    \"чэрв.\",\r\n    \"ліп.\",\r\n    \"жн.\",\r\n    \"вер.\",\r\n    \"кастр.\",\r\n    \"ліст.\",\r\n    \"сьнеж.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"студзеня\",\r\n    \"лютага\",\r\n    \"сакавіка\",\r\n    \"красавіка\",\r\n    \"траўня\",\r\n    \"чэрвеня\",\r\n    \"ліпеня\",\r\n    \"жніўня\",\r\n    \"верасня\",\r\n    \"кастрычніка\",\r\n    \"лістапада\",\r\n    \"сьнежня\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"А\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"нд\", \"пн\", \"аў\", \"ср\", \"чц\", \"пт\", \"сб\"],\r\n  abbreviated: [\"нядз\", \"пан\", \"аўт\", \"сер\", \"чаць\", \"пят\", \"суб\"],\r\n  wide: [\r\n    \"нядзеля\",\r\n    \"панядзелак\",\r\n    \"аўторак\",\r\n    \"серада\",\r\n    \"чацьвер\",\r\n    \"пятніца\",\r\n    \"субота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дзень\",\r\n    evening: \"веч.\",\r\n    night: \"ноч\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дзень\",\r\n    evening: \"веч.\",\r\n    night: \"ноч\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўнач\",\r\n    noon: \"поўдзень\",\r\n    morning: \"раніца\",\r\n    afternoon: \"дзень\",\r\n    evening: \"вечар\",\r\n    night: \"ноч\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночы\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўн.\",\r\n    noon: \"поўд.\",\r\n    morning: \"ран.\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночы\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"поўнач\",\r\n    noon: \"поўдзень\",\r\n    morning: \"раніцы\",\r\n    afternoon: \"дня\",\r\n    evening: \"вечара\",\r\n    night: \"ночы\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const unit = String(options?.unit);\r\n  const number = Number(dirtyNumber);\r\n  let suffix;\r\n\r\n  /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)\r\n   *  For date-month combinations should be used `d` formatter.\r\n   *  Correct:   `d MMMM` (4 верасня)\r\n   *  Incorrect: `do MMMM` (4-га верасня)\r\n   *\r\n   *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).\r\n   *  So for phrase \"5th day of month\" (`do дзень месяца`)\r\n   *  library will produce:            `5-га дзень месяца`\r\n   *  but correct spelling should be:  `5-ы дзень месяца`\r\n   *\r\n   *  So I guess there should be a stand-alone and a formatting version of \"day of month\" formatters\r\n   */\r\n  if (unit === \"date\") {\r\n    suffix = \"-га\";\r\n  } else if (unit === \"hour\" || unit === \"minute\" || unit === \"second\") {\r\n    suffix = \"-я\";\r\n  } else {\r\n    suffix =\r\n      (number % 10 === 2 || number % 10 === 3) &&\r\n      number % 100 !== 12 &&\r\n      number % 100 !== 13\r\n        ? \"-і\"\r\n        : \"-ы\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern =\r\n  /^(\\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((да )?н\\.?\\s?э\\.?)/i,\r\n  abbreviated: /^((да )?н\\.?\\s?э\\.?)/i,\r\n  wide: /^(да нашай эры|нашай эры|наша эра)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^д/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[ыі]?)? кв.?/i,\r\n  wide: /^[1234](-?[ыі]?)? квартал/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[слкмчжв]/i,\r\n  abbreviated:\r\n    /^(студз|лют|сак|крас|тр(ав)?|чэрв|ліп|жн|вер|кастр|ліст|сьнеж)\\.?/i,\r\n  wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|тра(вень|ўня)|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|сьнеж(ань|ня))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^с/i,\r\n    /^л/i,\r\n    /^с/i,\r\n    /^к/i,\r\n    /^т/i,\r\n    /^ч/i,\r\n    /^л/i,\r\n    /^ж/i,\r\n    /^в/i,\r\n    /^к/i,\r\n    /^л/i,\r\n    /^с/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ст/i,\r\n    /^лю/i,\r\n    /^са/i,\r\n    /^кр/i,\r\n    /^тр/i,\r\n    /^ч/i,\r\n    /^ліп/i,\r\n    /^ж/i,\r\n    /^в/i,\r\n    /^ка/i,\r\n    /^ліс/i,\r\n    /^сн/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[нпасч]/i,\r\n  short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\\.?/i,\r\n  abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцьв|чаць|птн|пят|суб).?/i,\r\n  wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацьв(ер|ярга)|пятніц[аы]|субот[аы])/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\r\n  abbreviated: /^([дп]п|поўн\\.?|поўд\\.?|ран\\.?|дзень|дня|веч\\.?|ночы?)/i,\r\n  wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^дп/i,\r\n    pm: /^пп/i,\r\n    midnight: /^поўн/i,\r\n    noon: /^поўд/i,\r\n    morning: /^р/i,\r\n    afternoon: /^д[зн]/i,\r\n    evening: /^в/i,\r\n    night: /^н/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./be-tarask/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./be-tarask/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./be-tarask/_lib/formatRelative.js\";\r\nimport { localize } from \"./be-tarask/_lib/localize.js\";\r\nimport { match } from \"./be-tarask/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Belarusian Classic locale.\r\n * @language Belarusian Classic\r\n * @iso-639-2 bel\r\n * @author Ryhor Nopears [@nopears](https://github.com/nopears)\r\n */\r\nexport const beTarask = {\r\n  code: \"be-tarask\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default beTarask;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"по-малко от секунда\",\r\n    other: \"по-малко от {{count}} секунди\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 секунда\",\r\n    other: \"{{count}} секунди\",\r\n  },\r\n\r\n  halfAMinute: \"половин минута\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"по-малко от минута\",\r\n    other: \"по-малко от {{count}} минути\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 минута\",\r\n    other: \"{{count}} минути\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"около час\",\r\n    other: \"около {{count}} часа\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 час\",\r\n    other: \"{{count}} часа\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ден\",\r\n    other: \"{{count}} дни\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"около седмица\",\r\n    other: \"около {{count}} седмици\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 седмица\",\r\n    other: \"{{count}} седмици\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"около месец\",\r\n    other: \"около {{count}} месеца\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 месец\",\r\n    other: \"{{count}} месеца\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"около година\",\r\n    other: \"около {{count}} години\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 година\",\r\n    other: \"{{count}} години\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"над година\",\r\n    other: \"над {{count}} години\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"почти година\",\r\n    other: \"почти {{count}} години\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"след \" + result;\r\n    } else {\r\n      return \"преди \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, dd MMMM yyyy\",\r\n  long: \"dd MMMM yyyy\",\r\n  medium: \"dd MMM yyyy\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\nimport { toDate } from \"../../../toDate.js\";\r\n\r\n// Adapted from the `ru` translation\r\n\r\nconst weekdays = [\r\n  \"неделя\",\r\n  \"понеделник\",\r\n  \"вторник\",\r\n  \"сряда\",\r\n  \"четвъртък\",\r\n  \"петък\",\r\n  \"събота\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'миналата \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'миналия \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  if (day === 2 /* Tue */) {\r\n    return \"'във \" + weekday + \" в' p\";\r\n  } else {\r\n    return \"'в \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'следващата \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'следващия \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nconst lastWeekFormatToken = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return lastWeek(day);\r\n  }\r\n};\r\n\r\nconst nextWeekFormatToken = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return nextWeek(day);\r\n  }\r\n};\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: lastWeekFormatToken,\r\n  yesterday: \"'вчера в' p\",\r\n  today: \"'днес в' p\",\r\n  tomorrow: \"'утре в' p\",\r\n  nextWeek: nextWeekFormatToken,\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"пр.н.е.\", \"н.е.\"],\r\n  abbreviated: [\"преди н. е.\", \"н. е.\"],\r\n  wide: [\"преди новата ера\", \"новата ера\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-во тримес.\", \"2-ро тримес.\", \"3-то тримес.\", \"4-то тримес.\"],\r\n\r\n  wide: [\r\n    \"1-во тримесечие\",\r\n    \"2-ро тримесечие\",\r\n    \"3-то тримесечие\",\r\n    \"4-то тримесечие\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  abbreviated: [\r\n    \"яну\",\r\n    \"фев\",\r\n    \"мар\",\r\n    \"апр\",\r\n    \"май\",\r\n    \"юни\",\r\n    \"юли\",\r\n    \"авг\",\r\n    \"сеп\",\r\n    \"окт\",\r\n    \"ное\",\r\n    \"дек\",\r\n  ],\r\n\r\n  wide: [\r\n    \"януари\",\r\n    \"февруари\",\r\n    \"март\",\r\n    \"април\",\r\n    \"май\",\r\n    \"юни\",\r\n    \"юли\",\r\n    \"август\",\r\n    \"септември\",\r\n    \"октомври\",\r\n    \"ноември\",\r\n    \"декември\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"нд\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\r\n  abbreviated: [\"нед\", \"пон\", \"вто\", \"сря\", \"чет\", \"пет\", \"съб\"],\r\n  wide: [\r\n    \"неделя\",\r\n    \"понеделник\",\r\n    \"вторник\",\r\n    \"сряда\",\r\n    \"четвъртък\",\r\n    \"петък\",\r\n    \"събота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  wide: {\r\n    am: \"преди обяд\",\r\n    pm: \"след обяд\",\r\n    midnight: \"в полунощ\",\r\n    noon: \"на обяд\",\r\n    morning: \"сутринта\",\r\n    afternoon: \"следобед\",\r\n    evening: \"вечерта\",\r\n    night: \"през нощта\",\r\n  },\r\n};\r\n\r\nfunction isFeminine(unit) {\r\n  return (\r\n    unit === \"year\" || unit === \"week\" || unit === \"minute\" || unit === \"second\"\r\n  );\r\n}\r\n\r\nfunction isNeuter(unit) {\r\n  return unit === \"quarter\";\r\n}\r\n\r\nfunction numberWithSuffix(number, unit, masculine, feminine, neuter) {\r\n  const suffix = isNeuter(unit)\r\n    ? neuter\r\n    : isFeminine(unit)\r\n      ? feminine\r\n      : masculine;\r\n  return number + \"-\" + suffix;\r\n}\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n\r\n  if (number === 0) {\r\n    return numberWithSuffix(0, unit, \"ев\", \"ева\", \"ево\");\r\n  } else if (number % 1000 === 0) {\r\n    return numberWithSuffix(number, unit, \"ен\", \"на\", \"но\");\r\n  } else if (number % 100 === 0) {\r\n    return numberWithSuffix(number, unit, \"тен\", \"тна\", \"тно\");\r\n  }\r\n\r\n  const rem100 = number % 100;\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return numberWithSuffix(number, unit, \"ви\", \"ва\", \"во\");\r\n      case 2:\r\n        return numberWithSuffix(number, unit, \"ри\", \"ра\", \"ро\");\r\n      case 7:\r\n      case 8:\r\n        return numberWithSuffix(number, unit, \"ми\", \"ма\", \"мо\");\r\n    }\r\n  }\r\n\r\n  return numberWithSuffix(number, unit, \"ти\", \"та\", \"то\");\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern =\r\n  /^(\\d+)(-?[врмт][аи]|-?т?(ен|на)|-?(ев|ева))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((пр)?н\\.?\\s?е\\.?)/i,\r\n  abbreviated: /^((пр)?н\\.?\\s?е\\.?)/i,\r\n  wide: /^(преди новата ера|новата ера|нова ера)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^п/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[врт]?o?)? тримес.?/i,\r\n  wide: /^[1234](-?[врт]?о?)? тримесечие/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[нпвсч]/i,\r\n  short: /^(нд|пн|вт|ср|чт|пт|сб)/i,\r\n  abbreviated: /^(нед|пон|вто|сря|чет|пет|съб)/i,\r\n  wide: /^(неделя|понеделник|вторник|сряда|четвъртък|петък|събота)/i,\r\n};\r\n\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[ъб]/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  abbreviated: /^(яну|фев|мар|апр|май|юни|юли|авг|сеп|окт|ное|дек)/i,\r\n  wide: /^(януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/i,\r\n};\r\n\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^я/i,\r\n    /^ф/i,\r\n    /^мар/i,\r\n    /^ап/i,\r\n    /^май/i,\r\n    /^юн/i,\r\n    /^юл/i,\r\n    /^ав/i,\r\n    /^се/i,\r\n    /^окт/i,\r\n    /^но/i,\r\n    /^де/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(преди о|след о|в по|на о|през|веч|сут|следо)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^преди о/i,\r\n    pm: /^след о/i,\r\n    midnight: /^в пол/i,\r\n    noon: /^на об/i,\r\n    morning: /^сут/i,\r\n    afternoon: /^следо/i,\r\n    evening: /^веч/i,\r\n    night: /^през н/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./bg/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./bg/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./bg/_lib/formatRelative.js\";\r\nimport { localize } from \"./bg/_lib/localize.js\";\r\nimport { match } from \"./bg/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Bulgarian locale.\r\n * @language Bulgarian\r\n * @iso-639-2 bul\r\n * @author Nikolay Stoynov [@arvigeus](https://github.com/arvigeus)\r\n * @author Tsvetan Ovedenski [@fintara](https://github.com/fintara)\r\n */\r\nexport const bg = {\r\n  code: \"bg\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default bg;\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst numberValues = {\r\n  locale: {\r\n    1: \"১\",\r\n    2: \"২\",\r\n    3: \"৩\",\r\n    4: \"৪\",\r\n    5: \"৫\",\r\n    6: \"৬\",\r\n    7: \"৭\",\r\n    8: \"৮\",\r\n    9: \"৯\",\r\n    0: \"০\",\r\n  },\r\n  number: {\r\n    \"১\": \"1\",\r\n    \"২\": \"2\",\r\n    \"৩\": \"3\",\r\n    \"৪\": \"4\",\r\n    \"৫\": \"5\",\r\n    \"৬\": \"6\",\r\n    \"৭\": \"7\",\r\n    \"৮\": \"8\",\r\n    \"৯\": \"9\",\r\n    \"০\": \"0\",\r\n  },\r\n};\r\n\r\nconst eraValues = {\r\n  narrow: [\"খ্রিঃপূঃ\", \"খ্রিঃ\"],\r\n  abbreviated: [\"খ্রিঃপূর্ব\", \"খ্রিঃ\"],\r\n  wide: [\"খ্রিস্টপূর্ব\", \"খ্রিস্টাব্দ\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"১\", \"২\", \"৩\", \"৪\"],\r\n  abbreviated: [\"১ত্রৈ\", \"২ত্রৈ\", \"৩ত্রৈ\", \"৪ত্রৈ\"],\r\n  wide: [\"১ম ত্রৈমাসিক\", \"২য় ত্রৈমাসিক\", \"৩য় ত্রৈমাসিক\", \"৪র্থ ত্রৈমাসিক\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"জানু\",\r\n    \"ফেব্রু\",\r\n    \"মার্চ\",\r\n    \"এপ্রিল\",\r\n    \"মে\",\r\n    \"জুন\",\r\n    \"জুলাই\",\r\n    \"আগস্ট\",\r\n    \"সেপ্ট\",\r\n    \"অক্টো\",\r\n    \"নভে\",\r\n    \"ডিসে\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"জানু\",\r\n    \"ফেব্রু\",\r\n    \"মার্চ\",\r\n    \"এপ্রিল\",\r\n    \"মে\",\r\n    \"জুন\",\r\n    \"জুলাই\",\r\n    \"আগস্ট\",\r\n    \"সেপ্ট\",\r\n    \"অক্টো\",\r\n    \"নভে\",\r\n    \"ডিসে\",\r\n  ],\r\n\r\n  wide: [\r\n    \"জানুয়ারি\",\r\n    \"ফেব্রুয়ারি\",\r\n    \"মার্চ\",\r\n    \"এপ্রিল\",\r\n    \"মে\",\r\n    \"জুন\",\r\n    \"জুলাই\",\r\n    \"আগস্ট\",\r\n    \"সেপ্টেম্বর\",\r\n    \"অক্টোবর\",\r\n    \"নভেম্বর\",\r\n    \"ডিসেম্বর\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"র\", \"সো\", \"ম\", \"বু\", \"বৃ\", \"শু\", \"শ\"],\r\n  short: [\"রবি\", \"সোম\", \"মঙ্গল\", \"বুধ\", \"বৃহ\", \"শুক্র\", \"শনি\"],\r\n  abbreviated: [\"রবি\", \"সোম\", \"মঙ্গল\", \"বুধ\", \"বৃহ\", \"শুক্র\", \"শনি\"],\r\n  wide: [\r\n    \"রবিবার\",\r\n    \"সোমবার\",\r\n    \"মঙ্গলবার\",\r\n    \"বুধবার\",\r\n    \"বৃহস্পতিবার \",\r\n    \"শুক্রবার\",\r\n    \"শনিবার\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"পূ\",\r\n    pm: \"অপ\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n  abbreviated: {\r\n    am: \"পূর্বাহ্ন\",\r\n    pm: \"অপরাহ্ন\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n  wide: {\r\n    am: \"পূর্বাহ্ন\",\r\n    pm: \"অপরাহ্ন\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"পূ\",\r\n    pm: \"অপ\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n  abbreviated: {\r\n    am: \"পূর্বাহ্ন\",\r\n    pm: \"অপরাহ্ন\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n  wide: {\r\n    am: \"পূর্বাহ্ন\",\r\n    pm: \"অপরাহ্ন\",\r\n    midnight: \"মধ্যরাত\",\r\n    noon: \"মধ্যাহ্ন\",\r\n    morning: \"সকাল\",\r\n    afternoon: \"বিকাল\",\r\n    evening: \"সন্ধ্যা\",\r\n    night: \"রাত\",\r\n  },\r\n};\r\n\r\nfunction dateOrdinalNumber(number, localeNumber) {\r\n  if (number > 18 && number <= 31) {\r\n    return localeNumber + \"শে\";\r\n  } else {\r\n    switch (number) {\r\n      case 1:\r\n        return localeNumber + \"লা\";\r\n      case 2:\r\n      case 3:\r\n        return localeNumber + \"রা\";\r\n      case 4:\r\n        return localeNumber + \"ঠা\";\r\n      default:\r\n        return localeNumber + \"ই\";\r\n    }\r\n  }\r\n}\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const localeNumber = numberToLocale(number);\r\n  const unit = options?.unit;\r\n\r\n  if (unit === \"date\") {\r\n    return dateOrdinalNumber(number, localeNumber);\r\n  }\r\n  if (number > 10 || number === 0) return localeNumber + \"তম\";\r\n\r\n  const rem10 = number % 10;\r\n  switch (rem10) {\r\n    case 2:\r\n    case 3:\r\n      return localeNumber + \"য়\";\r\n    case 4:\r\n      return localeNumber + \"র্থ\";\r\n    case 6:\r\n      return localeNumber + \"ষ্ঠ\";\r\n    default:\r\n      return localeNumber + \"ম\";\r\n  }\r\n};\r\n\r\n// function localeToNumber(locale: string): number {\r\n//   const enNumber = locale.toString().replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\r\n//     return numberValues.number[match as keyof typeof numberValues.number]\r\n//   })\r\n//   return Number(enNumber)\r\n// }\r\n\r\nexport function numberToLocale(enNumber) {\r\n  return enNumber.toString().replace(/\\d/g, function (match) {\r\n    return numberValues.locale[match];\r\n  });\r\n}\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { numberToLocale } from \"./localize.js\";\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"প্রায় ১ সেকেন্ড\",\r\n    other: \"প্রায় {{count}} সেকেন্ড\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"১ সেকেন্ড\",\r\n    other: \"{{count}} সেকেন্ড\",\r\n  },\r\n\r\n  halfAMinute: \"আধ মিনিট\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"প্রায় ১ মিনিট\",\r\n    other: \"প্রায় {{count}} মিনিট\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"১ মিনিট\",\r\n    other: \"{{count}} মিনিট\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"প্রায় ১ ঘন্টা\",\r\n    other: \"প্রায় {{count}} ঘন্টা\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"১ ঘন্টা\",\r\n    other: \"{{count}} ঘন্টা\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"১ দিন\",\r\n    other: \"{{count}} দিন\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"প্রায় ১ সপ্তাহ\",\r\n    other: \"প্রায় {{count}} সপ্তাহ\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"১ সপ্তাহ\",\r\n    other: \"{{count}} সপ্তাহ\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"প্রায় ১ মাস\",\r\n    other: \"প্রায় {{count}} মাস\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"১ মাস\",\r\n    other: \"{{count}} মাস\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"প্রায় ১ বছর\",\r\n    other: \"প্রায় {{count}} বছর\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"১ বছর\",\r\n    other: \"{{count}} বছর\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"১ বছরের বেশি\",\r\n    other: \"{{count}} বছরের বেশি\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"প্রায় ১ বছর\",\r\n    other: \"প্রায় {{count}} বছর\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", numberToLocale(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" এর মধ্যে\";\r\n    } else {\r\n      return result + \" আগে\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}} 'সময়'\",\r\n  long: \"{{date}} {{time}} 'সময়'\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'গত' eeee 'সময়' p\",\r\n  yesterday: \"'গতকাল' 'সময়' p\",\r\n  today: \"'আজ' 'সময়' p\",\r\n  tomorrow: \"'আগামীকাল' 'সময়' p\",\r\n  nextWeek: \"eeee 'সময়' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ম|য়|র্থ|ষ্ঠ|শে|ই|তম)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(খ্রিঃপূঃ|খ্রিঃ)/i,\r\n  abbreviated: /^(খ্রিঃপূর্ব|খ্রিঃ)/i,\r\n  wide: /^(খ্রিস্টপূর্ব|খ্রিস্টাব্দ)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/^খ্রিঃপূঃ/i, /^খ্রিঃ/i],\r\n  abbreviated: [/^খ্রিঃপূর্ব/i, /^খ্রিঃ/i],\r\n  wide: [/^খ্রিস্টপূর্ব/i, /^খ্রিস্টাব্দ/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[১২৩৪]/i,\r\n  abbreviated: /^[১২৩৪]ত্রৈ/i,\r\n  wide: /^[১২৩৪](ম|য়|র্থ)? ত্রৈমাসিক/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/১/i, /২/i, /৩/i, /৪/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow:\r\n    /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,\r\n  abbreviated:\r\n    /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i,\r\n  wide: /^(জানুয়ারি|ফেব্রুয়ারি|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^জানু/i,\r\n    /^ফেব্রু/i,\r\n    /^মার্চ/i,\r\n    /^এপ্রিল/i,\r\n    /^মে/i,\r\n    /^জুন/i,\r\n    /^জুলাই/i,\r\n    /^আগস্ট/i,\r\n    /^সেপ্ট/i,\r\n    /^অক্টো/i,\r\n    /^নভে/i,\r\n    /^ডিসে/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(র|সো|ম|বু|বৃ|শু|শ)+/i,\r\n  short: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,\r\n  abbreviated: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i,\r\n  wide: /^(রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার |শুক্রবার|শনিবার)+/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^র/i, /^সো/i, /^ম/i, /^বু/i, /^বৃ/i, /^শু/i, /^শ/i],\r\n  short: [/^রবি/i, /^সোম/i, /^মঙ্গল/i, /^বুধ/i, /^বৃহ/i, /^শুক্র/i, /^শনি/i],\r\n\r\n  abbreviated: [\r\n    /^রবি/i,\r\n    /^সোম/i,\r\n    /^মঙ্গল/i,\r\n    /^বুধ/i,\r\n    /^বৃহ/i,\r\n    /^শুক্র/i,\r\n    /^শনি/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^রবিবার/i,\r\n    /^সোমবার/i,\r\n    /^মঙ্গলবার/i,\r\n    /^বুধবার/i,\r\n    /^বৃহস্পতিবার /i,\r\n    /^শুক্রবার/i,\r\n    /^শনিবার/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(পূ|অপ|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,\r\n  abbreviated: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,\r\n  wide: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^পূ/i,\r\n    pm: /^অপ/i,\r\n    midnight: /^মধ্যরাত/i,\r\n    noon: /^মধ্যাহ্ন/i,\r\n    morning: /সকাল/i,\r\n    afternoon: /বিকাল/i,\r\n    evening: /সন্ধ্যা/i,\r\n    night: /রাত/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./bn/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./bn/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./bn/_lib/formatRelative.js\";\r\nimport { localize } from \"./bn/_lib/localize.js\";\r\nimport { match } from \"./bn/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Bengali locale.\r\n * @language Bengali\r\n * @iso-639-2 ben\r\n * @author Touhidur Rahman [@touhidrahman](https://github.com/touhidrahman)\r\n * @author Farhad Yasir [@nutboltu](https://github.com/nutboltu)\r\n */\r\nexport const bn = {\r\n  code: \"bn\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default bn;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      standalone: \"manje od 1 sekunde\",\r\n      withPrepositionAgo: \"manje od 1 sekunde\",\r\n      withPrepositionIn: \"manje od 1 sekundu\",\r\n    },\r\n    dual: \"manje od {{count}} sekunde\",\r\n    other: \"manje od {{count}} sekundi\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      standalone: \"1 sekunda\",\r\n      withPrepositionAgo: \"1 sekunde\",\r\n      withPrepositionIn: \"1 sekundu\",\r\n    },\r\n    dual: \"{{count}} sekunde\",\r\n    other: \"{{count}} sekundi\",\r\n  },\r\n\r\n  halfAMinute: \"pola minute\",\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      standalone: \"manje od 1 minute\",\r\n      withPrepositionAgo: \"manje od 1 minute\",\r\n      withPrepositionIn: \"manje od 1 minutu\",\r\n    },\r\n    dual: \"manje od {{count}} minute\",\r\n    other: \"manje od {{count}} minuta\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      standalone: \"1 minuta\",\r\n      withPrepositionAgo: \"1 minute\",\r\n      withPrepositionIn: \"1 minutu\",\r\n    },\r\n    dual: \"{{count}} minute\",\r\n    other: \"{{count}} minuta\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      standalone: \"oko 1 sat\",\r\n      withPrepositionAgo: \"oko 1 sat\",\r\n      withPrepositionIn: \"oko 1 sat\",\r\n    },\r\n    dual: \"oko {{count}} sata\",\r\n    other: \"oko {{count}} sati\",\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      standalone: \"1 sat\",\r\n      withPrepositionAgo: \"1 sat\",\r\n      withPrepositionIn: \"1 sat\",\r\n    },\r\n    dual: \"{{count}} sata\",\r\n    other: \"{{count}} sati\",\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      standalone: \"1 dan\",\r\n      withPrepositionAgo: \"1 dan\",\r\n      withPrepositionIn: \"1 dan\",\r\n    },\r\n    dual: \"{{count}} dana\",\r\n    other: \"{{count}} dana\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      standalone: \"oko 1 sedmicu\",\r\n      withPrepositionAgo: \"oko 1 sedmicu\",\r\n      withPrepositionIn: \"oko 1 sedmicu\",\r\n    },\r\n    dual: \"oko {{count}} sedmice\",\r\n    other: \"oko {{count}} sedmice\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      standalone: \"1 sedmicu\",\r\n      withPrepositionAgo: \"1 sedmicu\",\r\n      withPrepositionIn: \"1 sedmicu\",\r\n    },\r\n    dual: \"{{count}} sedmice\",\r\n    other: \"{{count}} sedmice\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      standalone: \"oko 1 mjesec\",\r\n      withPrepositionAgo: \"oko 1 mjesec\",\r\n      withPrepositionIn: \"oko 1 mjesec\",\r\n    },\r\n    dual: \"oko {{count}} mjeseca\",\r\n    other: \"oko {{count}} mjeseci\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      standalone: \"1 mjesec\",\r\n      withPrepositionAgo: \"1 mjesec\",\r\n      withPrepositionIn: \"1 mjesec\",\r\n    },\r\n    dual: \"{{count}} mjeseca\",\r\n    other: \"{{count}} mjeseci\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      standalone: \"oko 1 godinu\",\r\n      withPrepositionAgo: \"oko 1 godinu\",\r\n      withPrepositionIn: \"oko 1 godinu\",\r\n    },\r\n    dual: \"oko {{count}} godine\",\r\n    other: \"oko {{count}} godina\",\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      standalone: \"1 godina\",\r\n      withPrepositionAgo: \"1 godine\",\r\n      withPrepositionIn: \"1 godinu\",\r\n    },\r\n    dual: \"{{count}} godine\",\r\n    other: \"{{count}} godina\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      standalone: \"preko 1 godinu\",\r\n      withPrepositionAgo: \"preko 1 godinu\",\r\n      withPrepositionIn: \"preko 1 godinu\",\r\n    },\r\n    dual: \"preko {{count}} godine\",\r\n    other: \"preko {{count}} godina\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      standalone: \"gotovo 1 godinu\",\r\n      withPrepositionAgo: \"gotovo 1 godinu\",\r\n      withPrepositionIn: \"gotovo 1 godinu\",\r\n    },\r\n    dual: \"gotovo {{count}} godine\",\r\n    other: \"gotovo {{count}} godina\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        result = tokenValue.one.withPrepositionIn;\r\n      } else {\r\n        result = tokenValue.one.withPrepositionAgo;\r\n      }\r\n    } else {\r\n      result = tokenValue.one.standalone;\r\n    }\r\n  } else if (\r\n    count % 10 > 1 &&\r\n    count % 10 < 5 && // if last digit is between 2 and 4\r\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\r\n  ) {\r\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"za \" + result;\r\n    } else {\r\n      return \"prije \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM yyyy.\",\r\n  long: \"d. MMMM yyyy.\",\r\n  medium: \"d. MMM yy.\",\r\n  short: \"dd. MM. yy.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss (zzzz)\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'u' {{time}}\",\r\n  long: \"{{date}} 'u' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'prošle nedjelje u' p\";\r\n      case 3:\r\n        return \"'prošle srijede u' p\";\r\n      case 6:\r\n        return \"'prošle subote u' p\";\r\n      default:\r\n        return \"'prošli' EEEE 'u' p\";\r\n    }\r\n  },\r\n  yesterday: \"'juče u' p\",\r\n  today: \"'danas u' p\",\r\n  tomorrow: \"'sutra u' p\",\r\n  nextWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'sljedeće nedjelje u' p\";\r\n      case 3:\r\n        return \"'sljedeću srijedu u' p\";\r\n      case 6:\r\n        return \"'sljedeću subotu u' p\";\r\n      default:\r\n        return \"'sljedeći' EEEE 'u' p\";\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"pr.n.e.\", \"AD\"],\r\n  abbreviated: [\"pr. Hr.\", \"po. Hr.\"],\r\n  wide: [\"Prije Hrista\", \"Poslije Hrista\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\r\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avg\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mart\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"avgust\",\r\n    \"septembar\",\r\n    \"oktobar\",\r\n    \"novembar\",\r\n    \"decembar\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avg\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mart\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"avgust\",\r\n    \"septembar\",\r\n    \"oktobar\",\r\n    \"novembar\",\r\n    \"decembar\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"Č\", \"P\", \"S\"],\r\n  short: [\"ned\", \"pon\", \"uto\", \"sre\", \"čet\", \"pet\", \"sub\"],\r\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sre\", \"čet\", \"pet\", \"sub\"],\r\n  wide: [\r\n    \"nedjelja\",\r\n    \"ponedjeljak\",\r\n    \"utorak\",\r\n    \"srijeda\",\r\n    \"četvrtak\",\r\n    \"petak\",\r\n    \"subota\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"poslije podne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"poslije podne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return String(number) + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\r\n  abbreviated: /^(pr\\.\\s?Hr\\.|po\\.\\s?Hr\\.)/i,\r\n  wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^pr/i, /^(po|nova)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\r\n  wide: /^[1234]\\. kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(10|11|12|[123456789])\\./i,\r\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,\r\n  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^1/i,\r\n    /^2/i,\r\n    /^3/i,\r\n    /^4/i,\r\n    /^5/i,\r\n    /^6/i,\r\n    /^7/i,\r\n    /^8/i,\r\n    /^9/i,\r\n    /^10/i,\r\n    /^11/i,\r\n    /^12/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^avg/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npusčc]/i,\r\n  short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,\r\n  abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,\r\n  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\r\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|poslije podne|ujutru)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^pono/i,\r\n    noon: /^pod/i,\r\n    morning: /jutro/i,\r\n    afternoon: /(poslije\\s|po)+podne/i,\r\n    evening: /(uvece|uveče)/i,\r\n    night: /(nocu|noću)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./bs/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./bs/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./bs/_lib/formatRelative.js\";\r\nimport { localize } from \"./bs/_lib/localize.js\";\r\nimport { match } from \"./bs/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Bosnian locale.\r\n * @language Bosnian\r\n * @iso-639-2 bos\r\n * @author Branislav Lazić [@branislavlazic](https://github.com/branislavlazic)\r\n */\r\nexport const bs = {\r\n  code: \"bs\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default bs;\r\n", "/**\r\n * Davant de les xifres que es diuen amb vocal inicial, 1 i 11, s'apostrofen els articles el i la i la preposició de igual que si estiguessin escrits amb lletres.\r\n *    l'1 de juliol ('l'u')\r\n *    l'11 de novembre ('l'onze')\r\n *    l'11a clàusula del contracte ('l'onzena')\r\n *    la contractació d'11 jugadors ('d'onze')\r\n *    l'aval d'11.000 socis ('d'onze mil')\r\n *\r\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=apostrofaci%25F3+davant+xifres&action=Principal&method=detall_completa&numPagina=1&idHit=11236&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=11236&titol=apostrofaci%F3%20davant%20de%20xifres%20%2F%20apostrofaci%F3%20davant%20de%201%20i%2011&numeroResultat=1&clickLink=detall&tipusCerca=cerca.normes\r\n */\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menys d'un segon\",\r\n    eleven: \"menys d'onze segons\",\r\n    other: \"menys de {{count}} segons\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segon\",\r\n    other: \"{{count}} segons\",\r\n  },\r\n\r\n  halfAMinute: \"mig minut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menys d'un minut\",\r\n    eleven: \"menys d'onze minuts\",\r\n    other: \"menys de {{count}} minuts\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minut\",\r\n    other: \"{{count}} minuts\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"aproximadament una hora\",\r\n    other: \"aproximadament {{count}} hores\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} hores\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dia\",\r\n    other: \"{{count}} dies\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"aproximadament una setmana\",\r\n    other: \"aproximadament {{count}} setmanes\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 setmana\",\r\n    other: \"{{count}} setmanes\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"aproximadament un mes\",\r\n    other: \"aproximadament {{count}} mesos\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mes\",\r\n    other: \"{{count}} mesos\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"aproximadament un any\",\r\n    other: \"aproximadament {{count}} anys\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 any\",\r\n    other: \"{{count}} anys\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"més d'un any\",\r\n    eleven: \"més d'onze anys\",\r\n    other: \"més de {{count}} anys\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"gairebé un any\",\r\n    other: \"gairebé {{count}} anys\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 11 && tokenValue.eleven) {\r\n    result = tokenValue.eleven;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"en \" + result;\r\n    } else {\r\n      return \"fa \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d 'de' MMMM y\",\r\n  long: \"d 'de' MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'a les' {{time}}\",\r\n  long: \"{{date}} 'a les' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'el' eeee 'passat a la' LT\",\r\n  yesterday: \"'ahir a la' p\",\r\n  today: \"'avui a la' p\",\r\n  tomorrow: \"'demà a la' p\",\r\n  nextWeek: \"eeee 'a la' p\",\r\n  other: \"P\",\r\n};\r\n\r\nconst formatRelativeLocalePlural = {\r\n  lastWeek: \"'el' eeee 'passat a les' p\",\r\n  yesterday: \"'ahir a les' p\",\r\n  today: \"'avui a les' p\",\r\n  tomorrow: \"'demà a les' p\",\r\n  nextWeek: \"eeee 'a les' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  if (date.getHours() !== 1) {\r\n    return formatRelativeLocalePlural[token];\r\n  }\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n/**\r\n * General information\r\n * Reference: https://aplicacions.llengua.gencat.cat\r\n * Reference: https://www.uoc.edu/portal/ca/servei-linguistic/convencions/abreviacions/simbols/simbols-habituals.html\r\n */\r\n\r\n/**\r\n * Abans de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abans+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6876&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6876&titol=abans%20de%20Crist%20(abreviatura)%20/%20abans%20de%20Crist%20(sigla)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes\r\n * Desprest de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=despr%E9s+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6879&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6879&titol=despr%E9s%20de%20Crist%20(sigla)%20/%20despr%E9s%20de%20Crist%20(abreviatura)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes\r\n */\r\nconst eraValues = {\r\n  narrow: [\"aC\", \"dC\"],\r\n  abbreviated: [\"a. de C.\", \"d. de C.\"],\r\n  wide: [\"abans de Crist\", \"després de Crist\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1r trimestre\", \"2n trimestre\", \"3r trimestre\", \"4t trimestre\"],\r\n};\r\n\r\n/**\r\n * Dins d'un text convé fer servir la forma sencera dels mesos, ja que sempre és més clar el mot sencer que l'abreviatura, encara que aquesta sigui força coneguda.\r\n * Cal reservar, doncs, les abreviatures per a les llistes o classificacions, els gràfics, les taules o quadres estadístics, els textos publicitaris, etc.\r\n *\r\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviacions+mesos&action=Principal&method=detall_completa&numPagina=1&idHit=8402&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8402&titol=abreviatures%20dels%20mesos%20de%20l%27any&numeroResultat=5&clickLink=detall&tipusCerca=cerca.fitxes\r\n */\r\nconst monthValues = {\r\n  narrow: [\r\n    \"GN\",\r\n    \"FB\",\r\n    \"MÇ\",\r\n    \"AB\",\r\n    \"MG\",\r\n    \"JN\",\r\n    \"JL\",\r\n    \"AG\",\r\n    \"ST\",\r\n    \"OC\",\r\n    \"NV\",\r\n    \"DS\",\r\n  ],\r\n\r\n  /**\r\n   * Les abreviatures dels mesos de l'any es formen seguint una de les normes generals de formació d'abreviatures.\r\n   * S'escriu la primera síl·laba i les consonants de la síl·laba següent anteriors a la primera vocal.\r\n   * Els mesos de març, maig i juny no s'abreugen perquè són paraules d'una sola síl·laba.\r\n   */\r\n  abbreviated: [\r\n    \"gen.\",\r\n    \"febr.\",\r\n    \"març\",\r\n    \"abr.\",\r\n    \"maig\",\r\n    \"juny\",\r\n    \"jul.\",\r\n    \"ag.\",\r\n    \"set.\",\r\n    \"oct.\",\r\n    \"nov.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"gener\",\r\n    \"febrer\",\r\n    \"març\",\r\n    \"abril\",\r\n    \"maig\",\r\n    \"juny\",\r\n    \"juliol\",\r\n    \"agost\",\r\n    \"setembre\",\r\n    \"octubre\",\r\n    \"novembre\",\r\n    \"desembre\",\r\n  ],\r\n};\r\n\r\n/**\r\n * Les abreviatures dels dies de la setmana comencen totes amb la lletra d.\r\n * Tot seguit porten la consonant següent a la i, excepte en el cas de dimarts, dimecres i diumenge, en què aquesta consonant és la m i, per tant, hi podria haver confusió.\r\n * Per evitar-ho, s'ha substituït la m per una t (en el cas de dimarts), una c (en el cas de dimecres) i una g (en el cas de diumenge), respectivament.\r\n *\r\n * Seguint la norma general d'ús de les abreviatures, les dels dies de la setmana sempre porten punt final.\r\n * Igualment, van amb la primera lletra en majúscula quan la paraula sencera també hi aniria.\r\n * En canvi, van amb la primera lletra en minúscula quan la inicial de la paraula sencera també hi aniria.\r\n *\r\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviatures+dies&action=Principal&method=detall_completa&numPagina=1&idHit=8387&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8387&titol=abreviatures%20dels%20dies%20de%20la%20setmana&numeroResultat=1&clickLink=detall&tipusCerca=cerca.tot\r\n */\r\nconst dayValues = {\r\n  narrow: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  short: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  abbreviated: [\"dg.\", \"dl.\", \"dt.\", \"dm.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  wide: [\r\n    \"diumenge\",\r\n    \"dilluns\",\r\n    \"dimarts\",\r\n    \"dimecres\",\r\n    \"dijous\",\r\n    \"divendres\",\r\n    \"dissabte\",\r\n  ],\r\n};\r\n\r\n/**\r\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?action=Principal&method=detall&input_cercar=parts+del+dia&numPagina=1&database=FITXES_PUB&idFont=12801&idHit=12801&tipusFont=Fitxes+de+l%27Optimot&numeroResultat=1&databases_avansada=&categories_avansada=&clickLink=detall&titol=Nom+de+les+parts+del+dia&tematica=&tipusCerca=cerca.fitxes\r\n */\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"mitjanit\",\r\n    noon: \"migdia\",\r\n    morning: \"matí\",\r\n    afternoon: \"tarda\",\r\n    evening: \"vespre\",\r\n    night: \"nit\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"mitjanit\",\r\n    noon: \"migdia\",\r\n    morning: \"matí\",\r\n    afternoon: \"tarda\",\r\n    evening: \"vespre\",\r\n    night: \"nit\",\r\n  },\r\n  wide: {\r\n    am: \"ante meridiem\",\r\n    pm: \"post meridiem\",\r\n    midnight: \"mitjanit\",\r\n    noon: \"migdia\",\r\n    morning: \"matí\",\r\n    afternoon: \"tarda\",\r\n    evening: \"vespre\",\r\n    night: \"nit\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"de la mitjanit\",\r\n    noon: \"del migdia\",\r\n    morning: \"del matí\",\r\n    afternoon: \"de la tarda\",\r\n    evening: \"del vespre\",\r\n    night: \"de la nit\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"de la mitjanit\",\r\n    noon: \"del migdia\",\r\n    morning: \"del matí\",\r\n    afternoon: \"de la tarda\",\r\n    evening: \"del vespre\",\r\n    night: \"de la nit\",\r\n  },\r\n  wide: {\r\n    am: \"ante meridiem\",\r\n    pm: \"post meridiem\",\r\n    midnight: \"de la mitjanit\",\r\n    noon: \"del migdia\",\r\n    morning: \"del matí\",\r\n    afternoon: \"de la tarda\",\r\n    evening: \"del vespre\",\r\n    night: \"de la nit\",\r\n  },\r\n};\r\n\r\n/**\r\n * Quan van en singular, els nombres ordinals es representen, en forma d’abreviatura, amb la xifra seguida de l’última lletra del mot desplegat.\r\n * És optatiu posar punt després de la lletra.\r\n *\r\n * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/pdf/abrevia.pdf#page=18\r\n */\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  const rem100 = number % 100;\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return number + \"r\";\r\n      case 2:\r\n        return number + \"n\";\r\n      case 3:\r\n        return number + \"r\";\r\n      case 4:\r\n        return number + \"t\";\r\n    }\r\n  }\r\n  return number + \"è\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(è|r|n|r|t)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(aC|dC)/i,\r\n  abbreviated: /^(a. de C.|d. de C.)/i,\r\n  wide: /^(abans de Crist|despr[eé]s de Crist)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/^aC/i, /^dC/i],\r\n  abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],\r\n  wide: [/^(abans de Crist)/i, /^(despr[eé]s de Crist)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^[1234](è|r|n|r|t)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,\r\n  abbreviated:\r\n    /^(gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,\r\n  wide: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^GN/i,\r\n    /^FB/i,\r\n    /^MÇ/i,\r\n    /^AB/i,\r\n    /^MG/i,\r\n    /^JN/i,\r\n    /^JL/i,\r\n    /^AG/i,\r\n    /^ST/i,\r\n    /^OC/i,\r\n    /^NV/i,\r\n    /^DS/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^gen./i,\r\n    /^febr./i,\r\n    /^març/i,\r\n    /^abr./i,\r\n    /^maig/i,\r\n    /^juny/i,\r\n    /^jul./i,\r\n    /^ag./i,\r\n    /^set./i,\r\n    /^oct./i,\r\n    /^nov./i,\r\n    /^des./i,\r\n  ],\r\n\r\n  wide: [\r\n    /^gener/i,\r\n    /^febrer/i,\r\n    /^març/i,\r\n    /^abril/i,\r\n    /^maig/i,\r\n    /^juny/i,\r\n    /^juliol/i,\r\n    /^agost/i,\r\n    /^setembre/i,\r\n    /^octubre/i,\r\n    /^novembre/i,\r\n    /^desembre/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\r\n  short: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\r\n  abbreviated: /^(dg\\.|dl\\.|dt\\.|dm\\.|dj\\.|dv\\.|ds\\.)/i,\r\n  wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],\r\n\r\n  abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],\r\n\r\n  wide: [\r\n    /^diumenge/i,\r\n    /^dilluns/i,\r\n    /^dimarts/i,\r\n    /^dimecres/i,\r\n    /^dijous/i,\r\n    /^divendres/i,\r\n    /^disssabte/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mn|md|(del|de la) (matí|tarda|vespre|nit))/i,\r\n  abbreviated:\r\n    /^([ap]\\.?\\s?m\\.?|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,\r\n  wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mitjanit/i,\r\n    noon: /^migdia/i,\r\n    morning: /matí/i,\r\n    afternoon: /tarda/i,\r\n    evening: /vespre/i,\r\n    night: /nit/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ca/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ca/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ca/_lib/formatRelative.js\";\r\nimport { localize } from \"./ca/_lib/localize.js\";\r\nimport { match } from \"./ca/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Catalan locale.\r\n * @language Catalan\r\n * @iso-639-2 cat\r\n * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)\r\n * @author Alex Vizcaino [@avizcaino](https://github.com/avizcaino)\r\n */\r\nexport const ca = {\r\n  code: \"ca\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ca;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"کەمتر لە یەک چرکە\",\r\n    other: \"کەمتر لە {{count}} چرکە\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 چرکە\",\r\n    other: \"{{count}} چرکە\",\r\n  },\r\n\r\n  halfAMinute: \"نیو کاتژمێر\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"کەمتر لە یەک خولەک\",\r\n    other: \"کەمتر لە {{count}} خولەک\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 خولەک\",\r\n    other: \"{{count}} خولەک\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"دەوروبەری 1 کاتژمێر\",\r\n    other: \"دەوروبەری {{count}} کاتژمێر\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 کاتژمێر\",\r\n    other: \"{{count}} کاتژمێر\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ڕۆژ\",\r\n    other: \"{{count}} ژۆژ\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"دەوروبەری 1 هەفتە\",\r\n    other: \"دوروبەری {{count}} هەفتە\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 هەفتە\",\r\n    other: \"{{count}} هەفتە\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"داوروبەری 1 مانگ\",\r\n    other: \"دەوروبەری {{count}} مانگ\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 مانگ\",\r\n    other: \"{{count}} مانگ\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"دەوروبەری  1 ساڵ\",\r\n    other: \"دەوروبەری {{count}} ساڵ\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ساڵ\",\r\n    other: \"{{count}} ساڵ\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"زیاتر لە ساڵێک\",\r\n    other: \"زیاتر لە {{count}} ساڵ\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"بەنزیکەیی ساڵێک  \",\r\n    other: \"بەنزیکەیی {{count}} ساڵ\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"لە ماوەی \" + result + \"دا\";\r\n    } else {\r\n      return result + \"پێش ئێستا\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'کاتژمێر' {{time}}\",\r\n  long: \"{{date}} 'کاتژمێر' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'هەفتەی ڕابردوو' eeee 'کاتژمێر' p\",\r\n  yesterday: \"'دوێنێ کاتژمێر' p\",\r\n  today: \"'ئەمڕۆ کاتژمێر' p\",\r\n  tomorrow: \"'بەیانی کاتژمێر' p\",\r\n  nextWeek: \"eeee 'کاتژمێر' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"پ\", \"د\"],\r\n  abbreviated: [\"پ-ز\", \"د-ز\"],\r\n  wide: [\"پێش زاین\", \"دوای زاین\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"چ1م\", \"چ2م\", \"چ3م\", \"چ4م\"],\r\n  wide: [\"چارەگی یەکەم\", \"چارەگی دووەم\", \"چارەگی سێیەم\", \"چارەگی چوارەم\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\r\n    \"ک-د\",\r\n    \"ش\",\r\n    \"ئا\",\r\n    \"ن\",\r\n    \"م\",\r\n    \"ح\",\r\n    \"ت\",\r\n    \"ئا\",\r\n    \"ئە\",\r\n    \"تش-ی\",\r\n    \"تش-د\",\r\n    \"ک-ی\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"کان-دوو\",\r\n    \"شوب\",\r\n    \"ئاد\",\r\n    \"نیس\",\r\n    \"مایس\",\r\n    \"حوز\",\r\n    \"تەم\",\r\n    \"ئاب\",\r\n    \"ئەل\",\r\n    \"تش-یەک\",\r\n    \"تش-دوو\",\r\n    \"کان-یەک\",\r\n  ],\r\n\r\n  wide: [\r\n    \"کانوونی دووەم\",\r\n    \"شوبات\",\r\n    \"ئادار\",\r\n    \"نیسان\",\r\n    \"مایس\",\r\n    \"حوزەیران\",\r\n    \"تەمموز\",\r\n    \"ئاب\",\r\n    \"ئەیلول\",\r\n    \"تشرینی یەکەم\",\r\n    \"تشرینی دووەم\",\r\n    \"کانوونی یەکەم\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ی-ش\", \"د-ش\", \"س-ش\", \"چ-ش\", \"پ-ش\", \"هە\", \"ش\"],\r\n  short: [\"یە-شە\", \"دوو-شە\", \"سێ-شە\", \"چو-شە\", \"پێ-شە\", \"هەی\", \"شە\"],\r\n  abbreviated: [\r\n    \"یەک-شەم\",\r\n    \"دوو-شەم\",\r\n    \"سێ-شەم\",\r\n    \"چوار-شەم\",\r\n    \"پێنج-شەم\",\r\n    \"هەینی\",\r\n    \"شەمە\",\r\n  ],\r\n\r\n  wide: [\r\n    \"یەک شەمە\",\r\n    \"دوو شەمە\",\r\n    \"سێ شەمە\",\r\n    \"چوار شەمە\",\r\n    \"پێنج شەمە\",\r\n    \"هەینی\",\r\n    \"شەمە\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"پ\",\r\n    pm: \"د\",\r\n    midnight: \"ن-ش\",\r\n    noon: \"ن\",\r\n    morning: \"بەیانی\",\r\n    afternoon: \"دوای نیوەڕۆ\",\r\n    evening: \"ئێوارە\",\r\n    night: \"شەو\",\r\n  },\r\n  abbreviated: {\r\n    am: \"پ-ن\",\r\n    pm: \"د-ن\",\r\n    midnight: \"نیوە شەو\",\r\n    noon: \"نیوەڕۆ\",\r\n    morning: \"بەیانی\",\r\n    afternoon: \"دوای نیوەڕۆ\",\r\n    evening: \"ئێوارە\",\r\n    night: \"شەو\",\r\n  },\r\n  wide: {\r\n    am: \"پێش نیوەڕۆ\",\r\n    pm: \"دوای نیوەڕۆ\",\r\n    midnight: \"نیوە شەو\",\r\n    noon: \"نیوەڕۆ\",\r\n    morning: \"بەیانی\",\r\n    afternoon: \"دوای نیوەڕۆ\",\r\n    evening: \"ئێوارە\",\r\n    night: \"شەو\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"پ\",\r\n    pm: \"د\",\r\n    midnight: \"ن-ش\",\r\n    noon: \"ن\",\r\n    morning: \"لە بەیانیدا\",\r\n    afternoon: \"لە دوای نیوەڕۆدا\",\r\n    evening: \"لە ئێوارەدا\",\r\n    night: \"لە شەودا\",\r\n  },\r\n  abbreviated: {\r\n    am: \"پ-ن\",\r\n    pm: \"د-ن\",\r\n    midnight: \"نیوە شەو\",\r\n    noon: \"نیوەڕۆ\",\r\n    morning: \"لە بەیانیدا\",\r\n    afternoon: \"لە دوای نیوەڕۆدا\",\r\n    evening: \"لە ئێوارەدا\",\r\n    night: \"لە شەودا\",\r\n  },\r\n  wide: {\r\n    am: \"پێش نیوەڕۆ\",\r\n    pm: \"دوای نیوەڕۆ\",\r\n    midnight: \"نیوە شەو\",\r\n    noon: \"نیوەڕۆ\",\r\n    morning: \"لە بەیانیدا\",\r\n    afternoon: \"لە دوای نیوەڕۆدا\",\r\n    evening: \"لە ئێوارەدا\",\r\n    night: \"لە شەودا\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(پ|د)/i,\r\n  abbreviated: /^(پ-ز|د.ز)/i,\r\n  wide: /^(پێش زاین| دوای زاین)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^د/g, /^پ/g],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^م[1234]چ/i,\r\n  wide: /^(یەکەم|دووەم|سێیەم| چوارەم) (چارەگی)? quarter/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  wide: [/چارەگی یەکەم/, /چارەگی دووەم/, /چارەگی سيیەم/, /چارەگی چوارەم/],\r\n\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(ک-د|ش|ئا|ن|م|ح|ت|ئە|تش-ی|تش-د|ک-ی)/i,\r\n  abbreviated:\r\n    /^(کان-دوو|شوب|ئاد|نیس|مایس|حوز|تەم|ئاب|ئەل|تش-یەک|تش-دوو|کان-یەک)/i,\r\n  wide: /^(کانوونی دووەم|شوبات|ئادار|نیسان|مایس|حوزەیران|تەمموز|ئاب|ئەیلول|تشرینی یەکەم|تشرینی دووەم|کانوونی یەکەم)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ک-د/i,\r\n    /^ش/i,\r\n    /^ئا/i,\r\n    /^ن/i,\r\n    /^م/i,\r\n    /^ح/i,\r\n    /^ت/i,\r\n    /^ئا/i,\r\n    /^ئە/i,\r\n    /^تش-ی/i,\r\n    /^تش-د/i,\r\n    /^ک-ی/i,\r\n  ],\r\n\r\n  any: [\r\n    /^کان-دوو/i,\r\n    /^شوب/i,\r\n    /^ئاد/i,\r\n    /^نیس/i,\r\n    /^مایس/i,\r\n    /^حوز/i,\r\n    /^تەم/i,\r\n    /^ئاب/i,\r\n    /^ئەل/i,\r\n    /^تش-یەک/i,\r\n    /^تش-دوو/i,\r\n    /^|کان-یەک/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ش|ی|د|س|چ|پ|هە)/i,\r\n  short: /^(یە-شە|دوو-شە|سێ-شە|چو-شە|پێ-شە|هە|شە)/i,\r\n  abbreviated: /^(یەک-شەم|دوو-شەم|سێ-شەم|چوار-شەم|پێنخ-شەم|هەینی|شەمە)/i,\r\n  wide: /^(یەک شەمە|دوو شەمە|سێ شەمە|چوار شەمە|پێنج شەمە|هەینی|شەمە)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\r\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(پ|د|ن-ش|ن| (بەیانی|دوای نیوەڕۆ|ئێوارە|شەو))/i,\r\n  abbreviated: /^(پ-ن|د-ن|نیوە شەو|نیوەڕۆ|بەیانی|دوای نیوەڕۆ|ئێوارە|شەو)/,\r\n  wide: /^(پێش نیوەڕۆ|دوای نیوەڕۆ|نیوەڕۆ|نیوە شەو|لەبەیانیدا|لەدواینیوەڕۆدا|لە ئێوارەدا|لە شەودا)/,\r\n  any: /^(پ|د|بەیانی|نیوەڕۆ|ئێوارە|شەو)/,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^د/i,\r\n    pm: /^پ/i,\r\n    midnight: /^ن-ش/i,\r\n    noon: /^ن/i,\r\n    morning: /بەیانی/i,\r\n    afternoon: /دواینیوەڕۆ/i,\r\n    evening: /ئێوارە/i,\r\n    night: /شەو/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ckb/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ckb/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ckb/_lib/formatRelative.js\";\r\nimport { localize } from \"./ckb/_lib/localize.js\";\r\nimport { match } from \"./ckb/_lib/match.js\";\r\n\r\n/**\r\n * @type {Locale}\r\n * @category Locales\r\n * @summary Central Kurdish locale.\r\n * @language Central Kurdish\r\n * @iso-639-2 kur\r\n * @author Revan Sarbast [@Revan99]{@link https://github.com/Revan99}\r\n */\r\nexport const ckb = {\r\n  code: \"ckb\",\r\n  formatDistance,\r\n  formatLong,\r\n  formatRelative,\r\n  localize,\r\n  match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ckb;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      regular: \"méně než 1 sekunda\",\r\n      past: \"před méně než 1 sekundou\",\r\n      future: \"za méně než 1 sekundu\",\r\n    },\r\n    few: {\r\n      regular: \"méně než {{count}} sekundy\",\r\n      past: \"před méně než {{count}} sekundami\",\r\n      future: \"za méně než {{count}} sekundy\",\r\n    },\r\n    many: {\r\n      regular: \"méně než {{count}} sekund\",\r\n      past: \"před méně než {{count}} sekundami\",\r\n      future: \"za méně než {{count}} sekund\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      regular: \"1 sekunda\",\r\n      past: \"před 1 sekundou\",\r\n      future: \"za 1 sekundu\",\r\n    },\r\n    few: {\r\n      regular: \"{{count}} sekundy\",\r\n      past: \"před {{count}} sekundami\",\r\n      future: \"za {{count}} sekundy\",\r\n    },\r\n    many: {\r\n      regular: \"{{count}} sekund\",\r\n      past: \"před {{count}} sekundami\",\r\n      future: \"za {{count}} sekund\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    type: \"other\",\r\n    other: {\r\n      regular: \"půl minuty\",\r\n      past: \"před půl minutou\",\r\n      future: \"za půl minuty\",\r\n    },\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      regular: \"méně než 1 minuta\",\r\n      past: \"před méně než 1 minutou\",\r\n      future: \"za méně než 1 minutu\",\r\n    },\r\n    few: {\r\n      regular: \"méně než {{count}} minuty\",\r\n      past: \"před méně než {{count}} minutami\",\r\n      future: \"za méně než {{count}} minuty\",\r\n    },\r\n    many: {\r\n      regular: \"méně než {{count}} minut\",\r\n      past: \"před méně než {{count}} minutami\",\r\n      future: \"za méně než {{count}} minut\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      regular: \"1 minuta\",\r\n      past: \"před 1 minutou\",\r\n      future: \"za 1 minutu\",\r\n    },\r\n    few: {\r\n      regular: \"{{count}} minuty\",\r\n      past: \"před {{count}} minutami\",\r\n      future: \"za {{count}} minuty\",\r\n    },\r\n    many: {\r\n      regular: \"{{count}} minut\",\r\n      past: \"před {{count}} minutami\",\r\n      future: \"za {{count}} minut\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      regular: \"přibližně 1 hodina\",\r\n      past: \"přibližně před 1 hodinou\",\r\n      future: \"přibližně za 1 hodinu\",\r\n    },\r\n    few: {\r\n      regular: \"přibližně {{count}} hodiny\",\r\n      past: \"přibližně před {{count}} hodinami\",\r\n      future: \"přibližně za {{count}} hodiny\",\r\n    },\r\n    many: {\r\n      regular: \"přibližně {{count}} hodin\",\r\n      past: \"přibližně před {{count}} hodinami\",\r\n      future: \"přibližně za {{count}} hodin\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      regular: \"1 hodina\",\r\n      past: \"před 1 hodinou\",\r\n      future: \"za 1 hodinu\",\r\n    },\r\n    few: {\r\n      regular: \"{{count}} hodiny\",\r\n      past: \"před {{count}} hodinami\",\r\n      future: \"za {{count}} hodiny\",\r\n    },\r\n    many: {\r\n      regular: \"{{count}} hodin\",\r\n      past: \"před {{count}} hodinami\",\r\n      future: \"za {{count}} hodin\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      regular: \"1 den\",\r\n      past: \"před 1 dnem\",\r\n      future: \"za 1 den\",\r\n    },\r\n    few: {\r\n      regular: \"{{count}} dny\",\r\n      past: \"před {{count}} dny\",\r\n      future: \"za {{count}} dny\",\r\n    },\r\n    many: {\r\n      regular: \"{{count}} dní\",\r\n      past: \"před {{count}} dny\",\r\n      future: \"za {{count}} dní\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      regular: \"přibližně 1 týden\",\r\n      past: \"přibližně před 1 týdnem\",\r\n      future: \"přibližně za 1 týden\",\r\n    },\r\n\r\n    few: {\r\n      regular: \"přibližně {{count}} týdny\",\r\n      past: \"přibližně před {{count}} týdny\",\r\n      future: \"přibližně za {{count}} týdny\",\r\n    },\r\n\r\n    many: {\r\n      regular: \"přibližně {{count}} týdnů\",\r\n      past: \"přibližně před {{count}} týdny\",\r\n      future: \"přibližně za {{count}} týdnů\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      regular: \"1 týden\",\r\n      past: \"před 1 týdnem\",\r\n      future: \"za 1 týden\",\r\n    },\r\n\r\n    few: {\r\n      regular: \"{{count}} týdny\",\r\n      past: \"před {{count}} týdny\",\r\n      future: \"za {{count}} týdny\",\r\n    },\r\n\r\n    many: {\r\n      regular: \"{{count}} týdnů\",\r\n      past: \"před {{count}} týdny\",\r\n      future: \"za {{count}} týdnů\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      regular: \"přibližně 1 měsíc\",\r\n      past: \"přibližně před 1 měsícem\",\r\n      future: \"přibližně za 1 měsíc\",\r\n    },\r\n\r\n    few: {\r\n      regular: \"přibližně {{count}} měsíce\",\r\n      past: \"přibližně před {{count}} měsíci\",\r\n      future: \"přibližně za {{count}} měsíce\",\r\n    },\r\n\r\n    many: {\r\n      regular: \"přibližně {{count}} měsíců\",\r\n      past: \"přibližně před {{count}} měsíci\",\r\n      future: \"přibližně za {{count}} měsíců\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      regular: \"1 měsíc\",\r\n      past: \"před 1 měsícem\",\r\n      future: \"za 1 měsíc\",\r\n    },\r\n\r\n    few: {\r\n      regular: \"{{count}} měsíce\",\r\n      past: \"před {{count}} měsíci\",\r\n      future: \"za {{count}} měsíce\",\r\n    },\r\n\r\n    many: {\r\n      regular: \"{{count}} měsíců\",\r\n      past: \"před {{count}} měsíci\",\r\n      future: \"za {{count}} měsíců\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      regular: \"přibližně 1 rok\",\r\n      past: \"přibližně před 1 rokem\",\r\n      future: \"přibližně za 1 rok\",\r\n    },\r\n    few: {\r\n      regular: \"přibližně {{count}} roky\",\r\n      past: \"přibližně před {{count}} roky\",\r\n      future: \"přibližně za {{count}} roky\",\r\n    },\r\n    many: {\r\n      regular: \"přibližně {{count}} roků\",\r\n      past: \"přibližně před {{count}} roky\",\r\n      future: \"přibližně za {{count}} roků\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      regular: \"1 rok\",\r\n      past: \"před 1 rokem\",\r\n      future: \"za 1 rok\",\r\n    },\r\n    few: {\r\n      regular: \"{{count}} roky\",\r\n      past: \"před {{count}} roky\",\r\n      future: \"za {{count}} roky\",\r\n    },\r\n    many: {\r\n      regular: \"{{count}} roků\",\r\n      past: \"před {{count}} roky\",\r\n      future: \"za {{count}} roků\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      regular: \"více než 1 rok\",\r\n      past: \"před více než 1 rokem\",\r\n      future: \"za více než 1 rok\",\r\n    },\r\n    few: {\r\n      regular: \"více než {{count}} roky\",\r\n      past: \"před více než {{count}} roky\",\r\n      future: \"za více než {{count}} roky\",\r\n    },\r\n    many: {\r\n      regular: \"více než {{count}} roků\",\r\n      past: \"před více než {{count}} roky\",\r\n      future: \"za více než {{count}} roků\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      regular: \"skoro 1 rok\",\r\n      past: \"skoro před 1 rokem\",\r\n      future: \"skoro za 1 rok\",\r\n    },\r\n    few: {\r\n      regular: \"skoro {{count}} roky\",\r\n      past: \"skoro před {{count}} roky\",\r\n      future: \"skoro za {{count}} roky\",\r\n    },\r\n    many: {\r\n      regular: \"skoro {{count}} roků\",\r\n      past: \"skoro před {{count}} roky\",\r\n      future: \"skoro za {{count}} roků\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let pluralResult;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  // cs pluralization\r\n  if (tokenValue.type === \"other\") {\r\n    pluralResult = tokenValue.other;\r\n  } else if (count === 1) {\r\n    pluralResult = tokenValue.one;\r\n  } else if (count > 1 && count < 5) {\r\n    pluralResult = tokenValue.few;\r\n  } else {\r\n    pluralResult = tokenValue.many;\r\n  }\r\n\r\n  // times\r\n  const suffixExist = options?.addSuffix === true;\r\n  const comparison = options?.comparison;\r\n\r\n  let timeResult;\r\n  if (suffixExist && comparison === -1) {\r\n    timeResult = pluralResult.past;\r\n  } else if (suffixExist && comparison === 1) {\r\n    timeResult = pluralResult.future;\r\n  } else {\r\n    timeResult = pluralResult.regular;\r\n  }\r\n\r\n  return timeResult.replace(\"{{count}}\", String(count));\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM yyyy\",\r\n  long: \"d. MMMM yyyy\",\r\n  medium: \"d. M. yyyy\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'v' {{time}}\",\r\n  long: \"{{date}} 'v' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const accusativeWeekdays = [\r\n  \"neděli\",\r\n  \"pondělí\",\r\n  \"úterý\",\r\n  \"středu\",\r\n  \"čtvrtek\",\r\n  \"pátek\",\r\n  \"sobotu\",\r\n];\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: \"'poslední' eeee 've' p\",\r\n  yesterday: \"'včera v' p\",\r\n  today: \"'dnes v' p\",\r\n  tomorrow: \"'zítra v' p\",\r\n  nextWeek: (date) => {\r\n    const day = date.getDay();\r\n    return \"'v \" + accusativeWeekdays[day] + \" o' p\";\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"př. n. l.\", \"n. l.\"],\r\n  abbreviated: [\"př. n. l.\", \"n. l.\"],\r\n  wide: [\"před naším letopočtem\", \"našeho letopočtu\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1. čtvrtletí\", \"2. čtvrtletí\", \"3. čtvrtletí\", \"4. čtvrtletí\"],\r\n\r\n  wide: [\"1. čtvrtletí\", \"2. čtvrtletí\", \"3. čtvrtletí\", \"4. čtvrtletí\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"L\", \"Ú\", \"B\", \"D\", \"K\", \"Č\", \"Č\", \"S\", \"Z\", \"Ř\", \"L\", \"P\"],\r\n  abbreviated: [\r\n    \"led\",\r\n    \"úno\",\r\n    \"bře\",\r\n    \"dub\",\r\n    \"kvě\",\r\n    \"čvn\",\r\n    \"čvc\",\r\n    \"srp\",\r\n    \"zář\",\r\n    \"říj\",\r\n    \"lis\",\r\n    \"pro\",\r\n  ],\r\n\r\n  wide: [\r\n    \"leden\",\r\n    \"únor\",\r\n    \"březen\",\r\n    \"duben\",\r\n    \"květen\",\r\n    \"červen\",\r\n    \"červenec\",\r\n    \"srpen\",\r\n    \"září\",\r\n    \"říjen\",\r\n    \"listopad\",\r\n    \"prosinec\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"L\", \"Ú\", \"B\", \"D\", \"K\", \"Č\", \"Č\", \"S\", \"Z\", \"Ř\", \"L\", \"P\"],\r\n  abbreviated: [\r\n    \"led\",\r\n    \"úno\",\r\n    \"bře\",\r\n    \"dub\",\r\n    \"kvě\",\r\n    \"čvn\",\r\n    \"čvc\",\r\n    \"srp\",\r\n    \"zář\",\r\n    \"říj\",\r\n    \"lis\",\r\n    \"pro\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ledna\",\r\n    \"února\",\r\n    \"března\",\r\n    \"dubna\",\r\n    \"května\",\r\n    \"června\",\r\n    \"července\",\r\n    \"srpna\",\r\n    \"září\",\r\n    \"října\",\r\n    \"listopadu\",\r\n    \"prosince\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ne\", \"po\", \"út\", \"st\", \"čt\", \"pá\", \"so\"],\r\n  short: [\"ne\", \"po\", \"út\", \"st\", \"čt\", \"pá\", \"so\"],\r\n  abbreviated: [\"ned\", \"pon\", \"úte\", \"stř\", \"čtv\", \"pát\", \"sob\"],\r\n  wide: [\"neděle\", \"pondělí\", \"úterý\", \"středa\", \"čtvrtek\", \"pátek\", \"sobota\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"dop.\",\r\n    pm: \"odp.\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n  abbreviated: {\r\n    am: \"dop.\",\r\n    pm: \"odp.\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n  wide: {\r\n    am: \"dopoledne\",\r\n    pm: \"odpoledne\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"dop.\",\r\n    pm: \"odp.\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n  abbreviated: {\r\n    am: \"dop.\",\r\n    pm: \"odp.\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n  wide: {\r\n    am: \"dopoledne\",\r\n    pm: \"odpoledne\",\r\n    midnight: \"půlnoc\",\r\n    noon: \"poledne\",\r\n    morning: \"ráno\",\r\n    afternoon: \"odpoledne\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(p[řr](\\.|ed) Kr\\.|p[řr](\\.|ed) n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\r\n  abbreviated: /^(p[řr](\\.|ed) Kr\\.|p[řr](\\.|ed) n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\r\n  wide: /^(p[řr](\\.|ed) Kristem|p[řr](\\.|ed) na[šs][íi]m letopo[čc]tem|po Kristu|na[šs]eho letopo[čc]tu)/i,\r\n};\r\n\r\nconst parseEraPatterns = {\r\n  any: [/^p[řr]/i, /^(po|n)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\. [čc]tvrtlet[íi]/i,\r\n  wide: /^[1234]\\. [čc]tvrtlet[íi]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[lúubdkčcszřrlp]/i,\r\n  abbreviated:\r\n    /^(led|[úu]no|b[řr]e|dub|kv[ěe]|[čc]vn|[čc]vc|srp|z[áa][řr]|[řr][íi]j|lis|pro)/i,\r\n  wide: /^(leden|ledna|[úu]nora?|b[řr]ezen|b[řr]ezna|duben|dubna|kv[ěe]ten|kv[ěe]tna|[čc]erven(ec|ce)?|[čc]ervna|srpen|srpna|z[áa][řr][íi]|[řr][íi]jen|[řr][íi]jna|listopad(a|u)?|prosinec|prosince)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^l/i,\r\n    /^[úu]/i,\r\n    /^b/i,\r\n    /^d/i,\r\n    /^k/i,\r\n    /^[čc]/i,\r\n    /^[čc]/i,\r\n    /^s/i,\r\n    /^z/i,\r\n    /^[řr]/i,\r\n    /^l/i,\r\n    /^p/i,\r\n  ],\r\n\r\n  any: [\r\n    /^led/i,\r\n    /^[úu]n/i,\r\n    /^b[řr]e/i,\r\n    /^dub/i,\r\n    /^kv[ěe]/i,\r\n    /^[čc]vn|[čc]erven(?!\\w)|[čc]ervna/i,\r\n    /^[čc]vc|[čc]erven(ec|ce)/i,\r\n    /^srp/i,\r\n    /^z[áa][řr]/i,\r\n    /^[řr][íi]j/i,\r\n    /^lis/i,\r\n    /^pro/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npuúsčps]/i,\r\n  short: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i,\r\n  abbreviated: /^(ned|pon|[úu]te|st[rř]|[čc]tv|p[áa]t|sob)/i,\r\n  wide: /^(ned[ěe]le|pond[ěe]l[íi]|[úu]ter[ýy]|st[řr]eda|[čc]tvrtek|p[áa]tek|sobota)/i,\r\n};\r\n\r\nconst parseDayPatterns = {\r\n  narrow: [/^n/i, /^p/i, /^[úu]/i, /^s/i, /^[čc]/i, /^p/i, /^s/i],\r\n  any: [/^ne/i, /^po/i, /^[úu]t/i, /^st/i, /^[čc]t/i, /^p[áa]/i, /^so/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^dopoledne|dop\\.?|odpoledne|odp\\.?|p[ůu]lnoc|poledne|r[áa]no|odpoledne|ve[čc]er|(v )?noci?/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^dop/i,\r\n    pm: /^odp/i,\r\n    midnight: /^p[ůu]lnoc/i,\r\n    noon: /^poledne/i,\r\n    morning: /r[áa]no/i,\r\n    afternoon: /odpoledne/i,\r\n    evening: /ve[čc]er/i,\r\n    night: /noc/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./cs/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./cs/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./cs/_lib/formatRelative.js\";\r\nimport { localize } from \"./cs/_lib/localize.js\";\r\nimport { match } from \"./cs/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Czech locale.\r\n * @language Czech\r\n * @iso-639-2 ces\r\n * @author David Rus [@davidrus](https://github.com/davidrus)\r\n * @author Pavel Hrách [@SilenY](https://github.com/SilenY)\r\n * @author Jozef Bíroš [@JozefBiros](https://github.com/JozefBiros)\r\n */\r\nexport const cs = {\r\n  code: \"cs\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default cs;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"llai na eiliad\",\r\n    other: \"llai na {{count}} eiliad\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 eiliad\",\r\n    other: \"{{count}} eiliad\",\r\n  },\r\n\r\n  halfAMinute: \"hanner munud\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"llai na munud\",\r\n    two: \"llai na 2 funud\",\r\n    other: \"llai na {{count}} munud\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 munud\",\r\n    two: \"2 funud\",\r\n    other: \"{{count}} munud\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"tua 1 awr\",\r\n    other: \"tua {{count}} awr\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 awr\",\r\n    other: \"{{count}} awr\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 diwrnod\",\r\n    two: \"2 ddiwrnod\",\r\n    other: \"{{count}} diwrnod\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"tua 1 wythnos\",\r\n    two: \"tua pythefnos\",\r\n    other: \"tua {{count}} wythnos\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 wythnos\",\r\n    two: \"pythefnos\",\r\n    other: \"{{count}} wythnos\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"tua 1 mis\",\r\n    two: \"tua 2 fis\",\r\n    other: \"tua {{count}} mis\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mis\",\r\n    two: \"2 fis\",\r\n    other: \"{{count}} mis\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"tua 1 flwyddyn\",\r\n    two: \"tua 2 flynedd\",\r\n    other: \"tua {{count}} mlynedd\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 flwyddyn\",\r\n    two: \"2 flynedd\",\r\n    other: \"{{count}} mlynedd\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"dros 1 flwyddyn\",\r\n    two: \"dros 2 flynedd\",\r\n    other: \"dros {{count}} mlynedd\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"bron 1 flwyddyn\",\r\n    two: \"bron 2 flynedd\",\r\n    other: \"bron {{count}} mlynedd\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2 && !!tokenValue.two) {\r\n    result = tokenValue.two;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"mewn \" + result;\r\n    } else {\r\n      return result + \" yn ôl\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'am' {{time}}\",\r\n  long: \"{{date}} 'am' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'diwethaf am' p\",\r\n  yesterday: \"'ddoe am' p\",\r\n  today: \"'heddiw am' p\",\r\n  tomorrow: \"'yfory am' p\",\r\n  nextWeek: \"eeee 'am' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"C\", \"O\"],\r\n  abbreviated: [\"CC\", \"OC\"],\r\n  wide: [\"Cyn Crist\", \"Ar ôl Crist\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Ch1\", \"Ch2\", \"Ch3\", \"Ch4\"],\r\n  wide: [\"Chwarter 1af\", \"2ail chwarter\", \"3ydd chwarter\", \"4ydd chwarter\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"I\", \"Ch\", \"Ma\", \"E\", \"Mi\", \"Me\", \"G\", \"A\", \"Md\", \"H\", \"T\", \"Rh\"],\r\n\r\n  abbreviated: [\r\n    \"Ion\",\r\n    \"Chwe\",\r\n    \"Maw\",\r\n    \"Ebr\",\r\n    \"Mai\",\r\n    \"Meh\",\r\n    \"Gor\",\r\n    \"Aws\",\r\n    \"Med\",\r\n    \"Hyd\",\r\n    \"Tach\",\r\n    \"Rhag\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Ionawr\",\r\n    \"Chwefror\",\r\n    \"Mawrth\",\r\n    \"Ebrill\",\r\n    \"Mai\",\r\n    \"Mehefin\",\r\n    \"Gorffennaf\",\r\n    \"Awst\",\r\n    \"Medi\",\r\n    \"Hydref\",\r\n    \"Tachwedd\",\r\n    \"Rhagfyr\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"Ll\", \"M\", \"M\", \"I\", \"G\", \"S\"],\r\n  short: [\"Su\", \"Ll\", \"Ma\", \"Me\", \"Ia\", \"Gw\", \"Sa\"],\r\n  abbreviated: [\"Sul\", \"Llun\", \"Maw\", \"Mer\", \"Iau\", \"Gwe\", \"Sad\"],\r\n  wide: [\r\n    \"dydd Sul\",\r\n    \"dydd Llun\",\r\n    \"dydd Mawrth\",\r\n    \"dydd Mercher\",\r\n    \"dydd Iau\",\r\n    \"dydd Gwener\",\r\n    \"dydd Sadwrn\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"b\",\r\n    pm: \"h\",\r\n    midnight: \"hn\",\r\n    noon: \"hd\",\r\n    morning: \"bore\",\r\n    afternoon: \"prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"nos\",\r\n  },\r\n  abbreviated: {\r\n    am: \"yb\",\r\n    pm: \"yh\",\r\n    midnight: \"hanner nos\",\r\n    noon: \"hanner dydd\",\r\n    morning: \"bore\",\r\n    afternoon: \"prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"nos\",\r\n  },\r\n  wide: {\r\n    am: \"y.b.\",\r\n    pm: \"y.h.\",\r\n    midnight: \"hanner nos\",\r\n    noon: \"hanner dydd\",\r\n    morning: \"bore\",\r\n    afternoon: \"prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"nos\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"b\",\r\n    pm: \"h\",\r\n    midnight: \"hn\",\r\n    noon: \"hd\",\r\n    morning: \"yn y bore\",\r\n    afternoon: \"yn y prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"yn y nos\",\r\n  },\r\n  abbreviated: {\r\n    am: \"yb\",\r\n    pm: \"yh\",\r\n    midnight: \"hanner nos\",\r\n    noon: \"hanner dydd\",\r\n    morning: \"yn y bore\",\r\n    afternoon: \"yn y prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"yn y nos\",\r\n  },\r\n  wide: {\r\n    am: \"y.b.\",\r\n    pm: \"y.h.\",\r\n    midnight: \"hanner nos\",\r\n    noon: \"hanner dydd\",\r\n    morning: \"yn y bore\",\r\n    afternoon: \"yn y prynhawn\",\r\n    evening: \"gyda'r nos\",\r\n    night: \"yn y nos\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  if (number < 20) {\r\n    switch (number) {\r\n      case 0:\r\n        return number + \"fed\";\r\n      case 1:\r\n        return number + \"af\";\r\n      case 2:\r\n        return number + \"ail\";\r\n      case 3:\r\n      case 4:\r\n        return number + \"ydd\";\r\n      case 5:\r\n      case 6:\r\n        return number + \"ed\";\r\n      case 7:\r\n      case 8:\r\n      case 9:\r\n      case 10:\r\n      case 12:\r\n      case 15:\r\n      case 18:\r\n        return number + \"fed\";\r\n      case 11:\r\n      case 13:\r\n      case 14:\r\n      case 16:\r\n      case 17:\r\n      case 19:\r\n        return number + \"eg\";\r\n    }\r\n  } else if ((number >= 50 && number <= 60) || number === 80 || number >= 100) {\r\n    return number + \"fed\";\r\n  }\r\n  return number + \"ain\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(af|ail|ydd|ed|fed|eg|ain)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(c|o)/i,\r\n  abbreviated: /^(c\\.?\\s?c\\.?|o\\.?\\s?c\\.?)/i,\r\n  wide: /^(cyn christ|ar ôl crist|ar ol crist)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  wide: [/^c/i, /^(ar ôl crist|ar ol crist)/i],\r\n  any: [/^c/i, /^o/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ch[1234]/i,\r\n  wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,\r\n  abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,\r\n  wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^i/i,\r\n    /^ch/i,\r\n    /^m/i,\r\n    /^e/i,\r\n    /^m/i,\r\n    /^m/i,\r\n    /^g/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^h/i,\r\n    /^t/i,\r\n    /^rh/i,\r\n  ],\r\n\r\n  any: [\r\n    /^io/i,\r\n    /^ch/i,\r\n    /^maw/i,\r\n    /^e/i,\r\n    /^mai/i,\r\n    /^meh/i,\r\n    /^g/i,\r\n    /^a/i,\r\n    /^med/i,\r\n    /^h/i,\r\n    /^t/i,\r\n    /^rh/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(s|ll|m|i|g)/i,\r\n  short: /^(su|ll|ma|me|ia|gw|sa)/i,\r\n  abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,\r\n  wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i],\r\n  wide: [\r\n    /^dydd su/i,\r\n    /^dydd ll/i,\r\n    /^dydd ma/i,\r\n    /^dydd me/i,\r\n    /^dydd i/i,\r\n    /^dydd g/i,\r\n    /^dydd sa/i,\r\n  ],\r\n\r\n  any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,\r\n  any: /^(y\\.?\\s?[bh]\\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^b|(y\\.?\\s?b\\.?)/i,\r\n    pm: /^h|(y\\.?\\s?h\\.?)|(yr hwyr)/i,\r\n    midnight: /^hn|hanner nos/i,\r\n    noon: /^hd|hanner dydd/i,\r\n    morning: /bore/i,\r\n    afternoon: /prynhawn/i,\r\n    evening: /^gyda'r nos$/i,\r\n    night: /blah/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./cy/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./cy/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./cy/_lib/formatRelative.js\";\r\nimport { localize } from \"./cy/_lib/localize.js\";\r\nimport { match } from \"./cy/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Welsh locale.\r\n * @language Welsh\r\n * @iso-639-2 cym\r\n * @author Elwyn Malethan [@elmomalmo](https://github.com/elmomalmo)\r\n */\r\nexport const cy = {\r\n  code: \"cy\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default cy;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mindre end ét sekund\",\r\n    other: \"mindre end {{count}} sekunder\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekund\",\r\n    other: \"{{count}} sekunder\",\r\n  },\r\n\r\n  halfAMinute: \"ét halvt minut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mindre end ét minut\",\r\n    other: \"mindre end {{count}} minutter\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minut\",\r\n    other: \"{{count}} minutter\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"cirka 1 time\",\r\n    other: \"cirka {{count}} timer\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 time\",\r\n    other: \"{{count}} timer\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dag\",\r\n    other: \"{{count}} dage\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"cirka 1 uge\",\r\n    other: \"cirka {{count}} uger\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 uge\",\r\n    other: \"{{count}} uger\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"cirka 1 måned\",\r\n    other: \"cirka {{count}} måneder\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 måned\",\r\n    other: \"{{count}} måneder\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"cirka 1 år\",\r\n    other: \"cirka {{count}} år\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 år\",\r\n    other: \"{{count}} år\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"over 1 år\",\r\n    other: \"over {{count}} år\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"næsten 1 år\",\r\n    other: \"næsten {{count}} år\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"om \" + result;\r\n    } else {\r\n      return result + \" siden\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE 'den' d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kl'. {{time}}\",\r\n  long: \"{{date}} 'kl'. {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'sidste' eeee 'kl.' p\",\r\n  yesterday: \"'i går kl.' p\",\r\n  today: \"'i dag kl.' p\",\r\n  tomorrow: \"'i morgen kl.' p\",\r\n  nextWeek: \"'på' eeee 'kl.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"fvt\", \"vt\"],\r\n  abbreviated: [\"f.v.t.\", \"v.t.\"],\r\n  wide: [\"før vesterlandsk tidsregning\", \"vesterlandsk tidsregning\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1. kvt.\", \"2. kvt.\", \"3. kvt.\", \"4. kvt.\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mar.\",\r\n    \"apr.\",\r\n    \"maj\",\r\n    \"jun.\",\r\n    \"jul.\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"marts\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"august\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\n// Note that 'Days - abbreviated - Formatting' has periods at the end.\r\n// https://www.unicode.org/cldr/charts/32/summary/da.html#1760\r\n// This makes grammatical sense in danish, as most abbreviations have periods.\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\r\n  short: [\"sø\", \"ma\", \"ti\", \"on\", \"to\", \"fr\", \"lø\"],\r\n  abbreviated: [\"søn.\", \"man.\", \"tir.\", \"ons.\", \"tor.\", \"fre.\", \"lør.\"],\r\n\r\n  wide: [\r\n    \"søndag\",\r\n    \"mandag\",\r\n    \"tirsdag\",\r\n    \"onsdag\",\r\n    \"torsdag\",\r\n    \"fredag\",\r\n    \"lørdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"morgen\",\r\n    afternoon: \"eftermiddag\",\r\n    evening: \"aften\",\r\n    night: \"nat\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"morgen\",\r\n    afternoon: \"eftermiddag\",\r\n    evening: \"aften\",\r\n    night: \"nat\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"morgen\",\r\n    afternoon: \"eftermiddag\",\r\n    evening: \"aften\",\r\n    night: \"nat\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"om morgenen\",\r\n    afternoon: \"om eftermiddagen\",\r\n    evening: \"om aftenen\",\r\n    night: \"om natten\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"om morgenen\",\r\n    afternoon: \"om eftermiddagen\",\r\n    evening: \"om aftenen\",\r\n    night: \"om natten\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnat\",\r\n    noon: \"middag\",\r\n    morning: \"om morgenen\",\r\n    afternoon: \"om eftermiddagen\",\r\n    evening: \"om aftenen\",\r\n    night: \"om natten\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(fKr|fvt|eKr|vt)/i,\r\n  abbreviated: /^(f\\.Kr\\.?|f\\.v\\.t\\.?|e\\.Kr\\.?|v\\.t\\.)/i,\r\n  wide: /^(f.Kr.|før vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^f/i, /^(v|e)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]. kvt\\./i,\r\n  wide: /^[1234]\\.? kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\r\n  wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtofl]/i,\r\n  short: /^(søn.|man.|tir.|ons.|tor.|fre.|lør.)/i,\r\n  abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,\r\n  wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i],\r\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /midnat/i,\r\n    noon: /middag/i,\r\n    morning: /morgen/i,\r\n    afternoon: /eftermiddag/i,\r\n    evening: /aften/i,\r\n    night: /nat/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./da/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./da/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./da/_lib/formatRelative.js\";\r\nimport { localize } from \"./da/_lib/localize.js\";\r\nimport { match } from \"./da/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Danish locale.\r\n * @language Danish\r\n * @iso-639-2 dan\r\n * @author Mathias Wøbbe [@MathiasKandelborg](https://github.com/MathiasKandelborg)\r\n * @author Anders B. Hansen [@Andersbiha](https://github.com/Andersbiha)\r\n * @author [@kgram](https://github.com/kgram)\r\n * @author [@stefanbugge](https://github.com/stefanbugge)\r\n */\r\nexport const da = {\r\n  code: \"da\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default da;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    standalone: {\r\n      one: \"weniger als 1 Sekunde\",\r\n      other: \"weniger als {{count}} Sekunden\",\r\n    },\r\n    withPreposition: {\r\n      one: \"weniger als 1 Sekunde\",\r\n      other: \"weniger als {{count}} Sekunden\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    standalone: {\r\n      one: \"1 Sekunde\",\r\n      other: \"{{count}} Sekunden\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Sekunde\",\r\n      other: \"{{count}} Sekunden\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    standalone: \"eine halbe Minute\",\r\n    withPreposition: \"einer halben Minute\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    standalone: {\r\n      one: \"weniger als 1 Minute\",\r\n      other: \"weniger als {{count}} Minuten\",\r\n    },\r\n    withPreposition: {\r\n      one: \"weniger als 1 Minute\",\r\n      other: \"weniger als {{count}} Minuten\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    standalone: {\r\n      one: \"1 Minute\",\r\n      other: \"{{count}} Minuten\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Minute\",\r\n      other: \"{{count}} Minuten\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    standalone: {\r\n      one: \"etwa 1 Stunde\",\r\n      other: \"etwa {{count}} Stunden\",\r\n    },\r\n    withPreposition: {\r\n      one: \"etwa 1 Stunde\",\r\n      other: \"etwa {{count}} Stunden\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    standalone: {\r\n      one: \"1 Stunde\",\r\n      other: \"{{count}} Stunden\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Stunde\",\r\n      other: \"{{count}} Stunden\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    standalone: {\r\n      one: \"1 Tag\",\r\n      other: \"{{count}} Tage\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Tag\",\r\n      other: \"{{count}} Tagen\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    standalone: {\r\n      one: \"etwa 1 Woche\",\r\n      other: \"etwa {{count}} Wochen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"etwa 1 Woche\",\r\n      other: \"etwa {{count}} Wochen\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    standalone: {\r\n      one: \"1 Woche\",\r\n      other: \"{{count}} Wochen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Woche\",\r\n      other: \"{{count}} Wochen\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    standalone: {\r\n      one: \"etwa 1 Monat\",\r\n      other: \"etwa {{count}} Monate\",\r\n    },\r\n    withPreposition: {\r\n      one: \"etwa 1 Monat\",\r\n      other: \"etwa {{count}} Monaten\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    standalone: {\r\n      one: \"1 Monat\",\r\n      other: \"{{count}} Monate\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Monat\",\r\n      other: \"{{count}} Monaten\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    standalone: {\r\n      one: \"etwa 1 Jahr\",\r\n      other: \"etwa {{count}} Jahre\",\r\n    },\r\n    withPreposition: {\r\n      one: \"etwa 1 Jahr\",\r\n      other: \"etwa {{count}} Jahren\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    standalone: {\r\n      one: \"1 Jahr\",\r\n      other: \"{{count}} Jahre\",\r\n    },\r\n    withPreposition: {\r\n      one: \"1 Jahr\",\r\n      other: \"{{count}} Jahren\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    standalone: {\r\n      one: \"mehr als 1 Jahr\",\r\n      other: \"mehr als {{count}} Jahre\",\r\n    },\r\n    withPreposition: {\r\n      one: \"mehr als 1 Jahr\",\r\n      other: \"mehr als {{count}} Jahren\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    standalone: {\r\n      one: \"fast 1 Jahr\",\r\n      other: \"fast {{count}} Jahre\",\r\n    },\r\n    withPreposition: {\r\n      one: \"fast 1 Jahr\",\r\n      other: \"fast {{count}} Jahren\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = options?.addSuffix\r\n    ? formatDistanceLocale[token].withPreposition\r\n    : formatDistanceLocale[token].standalone;\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"in \" + result;\r\n    } else {\r\n      return \"vor \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y\", // Montag, 7. Januar 2018\r\n  long: \"do MMMM y\", // 7. Januar 2018\r\n  medium: \"do MMM y\", // 7. Jan. 2018\r\n  short: \"dd.MM.y\", // 07.01.2018\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'um' {{time}}\",\r\n  long: \"{{date}} 'um' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'letzten' eeee 'um' p\",\r\n  yesterday: \"'gestern um' p\",\r\n  today: \"'heute um' p\",\r\n  tomorrow: \"'morgen um' p\",\r\n  nextWeek: \"eeee 'um' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\r\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\r\n  wide: [\"vor Christus\", \"nach Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\r\n};\r\n\r\n// Note: in German, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mär\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Dez\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Januar\",\r\n    \"Februar\",\r\n    \"März\",\r\n    \"April\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"August\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Dezember\",\r\n  ],\r\n};\r\n\r\n// https://st.unicode.org/cldr-apps/v#/de/Gregorian/\r\nconst formattingMonthValues = {\r\n  narrow: monthValues.narrow,\r\n  abbreviated: [\r\n    \"Jan.\",\r\n    \"Feb.\",\r\n    \"März\",\r\n    \"Apr.\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Aug.\",\r\n    \"Sep.\",\r\n    \"Okt.\",\r\n    \"Nov.\",\r\n    \"Dez.\",\r\n  ],\r\n\r\n  wide: monthValues.wide,\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\r\n  short: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\r\n  abbreviated: [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"],\r\n  wide: [\r\n    \"Sonntag\",\r\n    \"Montag\",\r\n    \"Dienstag\",\r\n    \"Mittwoch\",\r\n    \"Donnerstag\",\r\n    \"Freitag\",\r\n    \"Samstag\",\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/de.html#1881\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm.\",\r\n    pm: \"nm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachm.\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vorm.\",\r\n    pm: \"nachm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachmittag\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n  wide: {\r\n    am: \"vormittags\",\r\n    pm: \"nachmittags\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachmittag\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm.\",\r\n    pm: \"nm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachm.\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vorm.\",\r\n    pm: \"nachm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachmittags\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n  wide: {\r\n    am: \"vormittags\",\r\n    pm: \"nachmittags\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachmittags\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    formattingValues: formattingMonthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\r\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\r\n  wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^v/i, /^n/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](\\.)? Quartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\\.?/i,\r\n  wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^j[aä]/i,\r\n    /^f/i,\r\n    /^mär/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smdmf]/i,\r\n  short: /^(so|mo|di|mi|do|fr|sa)/i,\r\n  abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\\.?/i,\r\n  wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(vm\\.?|nm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\r\n  abbreviated:\r\n    /^(vorm\\.?|nachm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\r\n  wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^v/i,\r\n    pm: /^n/i,\r\n    midnight: /^Mitte/i,\r\n    noon: /^Mitta/i,\r\n    morning: /morgens/i,\r\n    afternoon: /nachmittags/i, // will never be matched. Afternoon is matched by `pm`\r\n    evening: /abends/i,\r\n    night: /nachts/i, // will never be matched. Night is matched by `pm`\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./de/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./de/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./de/_lib/formatRelative.js\";\r\nimport { localize } from \"./de/_lib/localize.js\";\r\nimport { match } from \"./de/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary German locale.\r\n * @language German\r\n * @iso-639-2 deu\r\n * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)\r\n * @author Asia [@asia-t](https://github.com/asia-t)\r\n * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)\r\n * @author RomanErnst [@pex](https://github.com/pex)\r\n * @author Philipp Keck [@Philipp91](https://github.com/Philipp91)\r\n */\r\nexport const de = {\r\n  code: \"de\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default de;\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\r\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\r\n  wide: [\"vor Christus\", \"nach Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\r\n};\r\n\r\n// Note: in German, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jän\",\r\n    \"Feb\",\r\n    \"Mär\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Dez\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Jänner\",\r\n    \"Februar\",\r\n    \"März\",\r\n    \"April\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"August\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Dezember\",\r\n  ],\r\n};\r\n\r\n// https://st.unicode.org/cldr-apps/v#/de_AT/Gregorian/\r\nconst formattingMonthValues = {\r\n  narrow: monthValues.narrow,\r\n  abbreviated: [\r\n    \"Jän.\",\r\n    \"Feb.\",\r\n    \"März\",\r\n    \"Apr.\",\r\n    \"Mai\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Aug.\",\r\n    \"Sep.\",\r\n    \"Okt.\",\r\n    \"Nov.\",\r\n    \"Dez.\",\r\n  ],\r\n\r\n  wide: monthValues.wide,\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\r\n  short: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\r\n  abbreviated: [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"],\r\n  wide: [\r\n    \"Sonntag\",\r\n    \"Montag\",\r\n    \"Dienstag\",\r\n    \"Mittwoch\",\r\n    \"Donnerstag\",\r\n    \"Freitag\",\r\n    \"Samstag\",\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/de.html#1881\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm.\",\r\n    pm: \"nm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachm.\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vorm.\",\r\n    pm: \"nachm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachmittag\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n  wide: {\r\n    am: \"vormittags\",\r\n    pm: \"nachmittags\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"Morgen\",\r\n    afternoon: \"Nachmittag\",\r\n    evening: \"Abend\",\r\n    night: \"Nacht\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"vm.\",\r\n    pm: \"nm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachm.\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"vorm.\",\r\n    pm: \"nachm.\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachmittags\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n  wide: {\r\n    am: \"vormittags\",\r\n    pm: \"nachmittags\",\r\n    midnight: \"Mitternacht\",\r\n    noon: \"Mittag\",\r\n    morning: \"morgens\",\r\n    afternoon: \"nachmittags\",\r\n    evening: \"abends\",\r\n    night: \"nachts\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    formattingValues: formattingMonthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./de/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./de/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./de/_lib/formatRelative.js\";\r\nimport { match } from \"./de/_lib/match.js\";\r\n\r\n// difference to 'de' locale\r\nimport { localize } from \"./de-AT/_lib/localize.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary German locale (Austria).\r\n * @language German\r\n * @iso-639-2 deu\r\n * @author Christoph Tobias Stenglein [@cstenglein](https://github.com/cstenglein)\r\n */\r\nexport const deAT = {\r\n  code: \"de-AT\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default deAT;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"λιγότερο από ένα δευτερόλεπτο\",\r\n    other: \"λιγότερο από {{count}} δευτερόλεπτα\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 δευτερόλεπτο\",\r\n    other: \"{{count}} δευτερόλεπτα\",\r\n  },\r\n\r\n  halfAMinute: \"μισό λεπτό\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"λιγότερο από ένα λεπτό\",\r\n    other: \"λιγότερο από {{count}} λεπτά\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 λεπτό\",\r\n    other: \"{{count}} λεπτά\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"περίπου 1 ώρα\",\r\n    other: \"περίπου {{count}} ώρες\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ώρα\",\r\n    other: \"{{count}} ώρες\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ημέρα\",\r\n    other: \"{{count}} ημέρες\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"περίπου 1 εβδομάδα\",\r\n    other: \"περίπου {{count}} εβδομάδες\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 εβδομάδα\",\r\n    other: \"{{count}} εβδομάδες\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"περίπου 1 μήνας\",\r\n    other: \"περίπου {{count}} μήνες\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 μήνας\",\r\n    other: \"{{count}} μήνες\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"περίπου 1 χρόνο\",\r\n    other: \"περίπου {{count}} χρόνια\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 χρόνο\",\r\n    other: \"{{count}} χρόνια\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"πάνω από 1 χρόνο\",\r\n    other: \"πάνω από {{count}} χρόνια\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"περίπου 1 χρόνο\",\r\n    other: \"περίπου {{count}} χρόνια\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"σε \" + result;\r\n    } else {\r\n      return result + \" πριν\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"d/M/yy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} - {{time}}\",\r\n  long: \"{{date}} - {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 6: //Σάββατο\r\n        return \"'το προηγούμενο' eeee 'στις' p\";\r\n      default:\r\n        return \"'την προηγούμενη' eeee 'στις' p\";\r\n    }\r\n  },\r\n  yesterday: \"'χθες στις' p\",\r\n  today: \"'σήμερα στις' p\",\r\n  tomorrow: \"'αύριο στις' p\",\r\n  nextWeek: \"eeee 'στις' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") return format(date);\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"πΧ\", \"μΧ\"],\r\n  abbreviated: [\"π.Χ.\", \"μ.Χ.\"],\r\n  wide: [\"προ Χριστού\", \"μετά Χριστόν\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Τ1\", \"Τ2\", \"Τ3\", \"Τ4\"],\r\n  wide: [\"1ο τρίμηνο\", \"2ο τρίμηνο\", \"3ο τρίμηνο\", \"4ο τρίμηνο\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"Ι\", \"Φ\", \"Μ\", \"Α\", \"Μ\", \"Ι\", \"Ι\", \"Α\", \"Σ\", \"Ο\", \"Ν\", \"Δ\"],\r\n  abbreviated: [\r\n    \"Ιαν\",\r\n    \"Φεβ\",\r\n    \"Μάρ\",\r\n    \"Απρ\",\r\n    \"Μάι\",\r\n    \"Ιούν\",\r\n    \"Ιούλ\",\r\n    \"Αύγ\",\r\n    \"Σεπ\",\r\n    \"Οκτ\",\r\n    \"Νοέ\",\r\n    \"Δεκ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Ιανουάριος\",\r\n    \"Φεβρουάριος\",\r\n    \"Μάρτιος\",\r\n    \"Απρίλιος\",\r\n    \"Μάιος\",\r\n    \"Ιούνιος\",\r\n    \"Ιούλιος\",\r\n    \"Αύγουστος\",\r\n    \"Σεπτέμβριος\",\r\n    \"Οκτώβριος\",\r\n    \"Νοέμβριος\",\r\n    \"Δεκέμβριος\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"Ι\", \"Φ\", \"Μ\", \"Α\", \"Μ\", \"Ι\", \"Ι\", \"Α\", \"Σ\", \"Ο\", \"Ν\", \"Δ\"],\r\n  abbreviated: [\r\n    \"Ιαν\",\r\n    \"Φεβ\",\r\n    \"Μαρ\",\r\n    \"Απρ\",\r\n    \"Μαΐ\",\r\n    \"Ιουν\",\r\n    \"Ιουλ\",\r\n    \"Αυγ\",\r\n    \"Σεπ\",\r\n    \"Οκτ\",\r\n    \"Νοε\",\r\n    \"Δεκ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Ιανουαρίου\",\r\n    \"Φεβρουαρίου\",\r\n    \"Μαρτίου\",\r\n    \"Απριλίου\",\r\n    \"Μαΐου\",\r\n    \"Ιουνίου\",\r\n    \"Ιουλίου\",\r\n    \"Αυγούστου\",\r\n    \"Σεπτεμβρίου\",\r\n    \"Οκτωβρίου\",\r\n    \"Νοεμβρίου\",\r\n    \"Δεκεμβρίου\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Κ\", \"Δ\", \"T\", \"Τ\", \"Π\", \"Π\", \"Σ\"],\r\n  short: [\"Κυ\", \"Δε\", \"Τρ\", \"Τε\", \"Πέ\", \"Πα\", \"Σά\"],\r\n  abbreviated: [\"Κυρ\", \"Δευ\", \"Τρί\", \"Τετ\", \"Πέμ\", \"Παρ\", \"Σάβ\"],\r\n  wide: [\r\n    \"Κυριακή\",\r\n    \"Δευτέρα\",\r\n    \"Τρίτη\",\r\n    \"Τετάρτη\",\r\n    \"Πέμπτη\",\r\n    \"Παρασκευή\",\r\n    \"Σάββατο\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"πμ\",\r\n    pm: \"μμ\",\r\n    midnight: \"μεσάνυχτα\",\r\n    noon: \"μεσημέρι\",\r\n    morning: \"πρωί\",\r\n    afternoon: \"απόγευμα\",\r\n    evening: \"βράδυ\",\r\n    night: \"νύχτα\",\r\n  },\r\n  abbreviated: {\r\n    am: \"π.μ.\",\r\n    pm: \"μ.μ.\",\r\n    midnight: \"μεσάνυχτα\",\r\n    noon: \"μεσημέρι\",\r\n    morning: \"πρωί\",\r\n    afternoon: \"απόγευμα\",\r\n    evening: \"βράδυ\",\r\n    night: \"νύχτα\",\r\n  },\r\n  wide: {\r\n    am: \"π.μ.\",\r\n    pm: \"μ.μ.\",\r\n    midnight: \"μεσάνυχτα\",\r\n    noon: \"μεσημέρι\",\r\n    morning: \"πρωί\",\r\n    afternoon: \"απόγευμα\",\r\n    evening: \"βράδυ\",\r\n    night: \"νύχτα\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n  let suffix;\r\n\r\n  if (unit === \"year\" || unit === \"month\") {\r\n    suffix = \"ος\";\r\n  } else if (\r\n    unit === \"week\" ||\r\n    unit === \"dayOfYear\" ||\r\n    unit === \"day\" ||\r\n    unit === \"hour\" ||\r\n    unit === \"date\"\r\n  ) {\r\n    suffix = \"η\";\r\n  } else {\r\n    suffix = \"ο\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ος|η|ο)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(πΧ|μΧ)/i,\r\n  abbreviated: /^(π\\.?\\s?χ\\.?|π\\.?\\s?κ\\.?\\s?χ\\.?|μ\\.?\\s?χ\\.?|κ\\.?\\s?χ\\.?)/i,\r\n  wide: /^(προ Χριστο(ύ|υ)|πριν απ(ό|ο) την Κοιν(ή|η) Χρονολογ(ί|ι)α|μετ(ά|α) Χριστ(ό|ο)ν|Κοιν(ή|η) Χρονολογ(ί|ι)α)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^π/i, /^(μ|κ)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^τ[1234]/i,\r\n  wide: /^[1234]ο? τρ(ί|ι)μηνο/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[ιφμαμιιασονδ]/i,\r\n  abbreviated:\r\n    /^(ιαν|φεβ|μ[άα]ρ|απρ|μ[άα][ιΐ]|ιο[ύυ]ν|ιο[ύυ]λ|α[ύυ]γ|σεπ|οκτ|νο[έε]|δεκ)/i,\r\n  wide: /^(μ[άα][ιΐ]|α[ύυ]γο[υύ]στ)(ος|ου)|(ιανου[άα]ρ|φεβρου[άα]ρ|μ[άα]ρτ|απρ[ίι]λ|ιο[ύυ]ν|ιο[ύυ]λ|σεπτ[έε]μβρ|οκτ[ώω]βρ|νο[έε]μβρ|δεκ[έε]μβρ)(ιος|ίου)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ι/i,\r\n    /^φ/i,\r\n    /^μ/i,\r\n    /^α/i,\r\n    /^μ/i,\r\n    /^ι/i,\r\n    /^ι/i,\r\n    /^α/i,\r\n    /^σ/i,\r\n    /^ο/i,\r\n    /^ν/i,\r\n    /^δ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ια/i,\r\n    /^φ/i,\r\n    /^μ[άα]ρ/i,\r\n    /^απ/i,\r\n    /^μ[άα][ιΐ]/i,\r\n    /^ιο[ύυ]ν/i,\r\n    /^ιο[ύυ]λ/i,\r\n    /^α[ύυ]/i,\r\n    /^σ/i,\r\n    /^ο/i,\r\n    /^ν/i,\r\n    /^δ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[κδτπσ]/i,\r\n  short: /^(κυ|δε|τρ|τε|π[εέ]|π[αά]|σ[αά])/i,\r\n  abbreviated: /^(κυρ|δευ|τρι|τετ|πεμ|παρ|σαβ)/i,\r\n  wide: /^(κυριακ(ή|η)|δευτ(έ|ε)ρα|τρ(ί|ι)τη|τετ(ά|α)ρτη|π(έ|ε)μπτη|παρασκευ(ή|η)|σ(ά|α)ββατο)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^κ/i, /^δ/i, /^τ/i, /^τ/i, /^π/i, /^π/i, /^σ/i],\r\n  any: [/^κ/i, /^δ/i, /^τρ/i, /^τε/i, /^π[εέ]/i, /^π[αά]/i, /^σ/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(πμ|μμ|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i,\r\n  any: /^([πμ]\\.?\\s?μ\\.?|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^πμ|π\\.\\s?μ\\./i,\r\n    pm: /^μμ|μ\\.\\s?μ\\./i,\r\n    midnight: /^μεσάν/i,\r\n    noon: /^μεσημ(έ|ε)/i,\r\n    morning: /πρω(ί|ι)/i,\r\n    afternoon: /απ(ό|ο)γευμα/i,\r\n    evening: /βρ(ά|α)δυ/i,\r\n    night: /ν(ύ|υ)χτα/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./el/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./el/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./el/_lib/formatRelative.js\";\r\nimport { localize } from \"./el/_lib/localize.js\";\r\nimport { match } from \"./el/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Greek locale.\r\n * @language Greek\r\n * @iso-639-2 ell\r\n * @author Fanis Katsimpas [@fanixk](https://github.com/fanixk)\r\n * @author Theodoros Orfanidis [@teoulas](https://github.com/teoulas)\r\n */\r\nexport const el = {\r\n  code: \"el\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default el;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./en-AU/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (Australia).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Julien Malige [@JulienMalige](https://github.com/JulienMalige)\r\n */\r\nexport const enAU = {\r\n  code: \"en-AU\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enAU;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"less than a second\",\r\n    other: \"less than {{count}} seconds\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"a second\",\r\n    other: \"{{count}} seconds\",\r\n  },\r\n\r\n  halfAMinute: \"half a minute\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"less than a minute\",\r\n    other: \"less than {{count}} minutes\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"a minute\",\r\n    other: \"{{count}} minutes\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"about an hour\",\r\n    other: \"about {{count}} hours\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"an hour\",\r\n    other: \"{{count}} hours\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"a day\",\r\n    other: \"{{count}} days\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"about a week\",\r\n    other: \"about {{count}} weeks\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"a week\",\r\n    other: \"{{count}} weeks\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"about a month\",\r\n    other: \"about {{count}} months\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"a month\",\r\n    other: \"{{count}} months\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"about a year\",\r\n    other: \"about {{count}} years\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"a year\",\r\n    other: \"{{count}} years\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"over a year\",\r\n    other: \"over {{count}} years\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"almost a year\",\r\n    other: \"almost {{count}} years\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"in \" + result;\r\n    } else {\r\n      return result + \" ago\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, yyyy\",\r\n  long: \"MMMM do, yyyy\",\r\n  medium: \"MMM d, yyyy\",\r\n  short: \"yyyy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatDistance } from \"./en-CA/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./en-CA/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (Canada).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Mark Owsiak [@markowsiak](https://github.com/markowsiak)\r\n * @author Marco Imperatore [@mimperatore](https://github.com/mimperatore)\r\n */\r\nexport const enCA = {\r\n  code: \"en-CA\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enCA;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatLong } from \"./en-GB/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (United Kingdom).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Alex [@glintik](https://github.com/glintik)\r\n */\r\nexport const enGB = {\r\n  code: \"en-GB\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enGB;\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatLong } from \"./en-GB/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (Ireland).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Tetiana [@tan75](https://github.com/tan75)\r\n */\r\nexport const enIE = {\r\n  code: \"en-IE\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enIE;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM, yyyy\",\r\n  medium: \"d MMM, yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatLong } from \"./en-IN/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (India).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Galeel Bhasha Satthar [@gbhasha](https://github.com/gbhasha)\r\n */\r\nexport const enIN = {\r\n  code: \"en-IN\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1, // Monday is the first day of the week.\r\n    firstWeekContainsDate: 4, // The week that contains Jan 4th is the first week of the year.\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enIN;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatLong } from \"./en-NZ/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (New Zealand).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Murray Lucas [@muntact](https://github.com/muntact)\r\n */\r\nexport const enNZ = {\r\n  code: \"en-NZ\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enNZ;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, dd MMMM yyyy\",\r\n  long: \"dd MMMM yyyy\",\r\n  medium: \"dd MMM yyyy\",\r\n  short: \"yyyy/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'at' {{time}}\",\r\n  long: \"{{date}} 'at' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\r\nimport { localize } from \"./en-US/_lib/localize.js\";\r\nimport { match } from \"./en-US/_lib/match.js\";\r\n\r\nimport { formatLong } from \"./en-ZA/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary English locale (South Africa).\r\n * @language English\r\n * @iso-639-2 eng\r\n * @author Shaila Kavrakova [@shaykav](https://github.com/shaykav)\r\n */\r\nexport const enZA = {\r\n  code: \"en-ZA\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0, // Sunday is the first day of the week.\r\n    firstWeekContainsDate: 1, // The week that contains Jan 1st is the first week of the year.\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default enZA;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"malpli ol sekundo\",\r\n    other: \"malpli ol {{count}} sekundoj\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekundo\",\r\n    other: \"{{count}} sekundoj\",\r\n  },\r\n\r\n  halfAMinute: \"duonminuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"malpli ol minuto\",\r\n    other: \"malpli ol {{count}} minutoj\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutoj\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"proksimume 1 horo\",\r\n    other: \"proksimume {{count}} horoj\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 horo\",\r\n    other: \"{{count}} horoj\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 tago\",\r\n    other: \"{{count}} tagoj\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"proksimume 1 monato\",\r\n    other: \"proksimume {{count}} monatoj\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semajno\",\r\n    other: \"{{count}} semajnoj\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"proksimume 1 semajno\",\r\n    other: \"proksimume {{count}} semajnoj\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 monato\",\r\n    other: \"{{count}} monatoj\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"proksimume 1 jaro\",\r\n    other: \"proksimume {{count}} jaroj\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 jaro\",\r\n    other: \"{{count}} jaroj\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"pli ol 1 jaro\",\r\n    other: \"pli ol {{count}} jaroj\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"preskaŭ 1 jaro\",\r\n    other: \"preskaŭ {{count}} jaroj\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options?.comparison && options.comparison > 0) {\r\n      return \"post \" + result;\r\n    } else {\r\n      return \"antaŭ \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do 'de' MMMM y\",\r\n  long: \"y-MMMM-dd\",\r\n  medium: \"y-MMM-dd\",\r\n  short: \"yyyy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"Ho 'horo kaj' m:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'pasinta' eeee 'je' p\",\r\n  yesterday: \"'hieraŭ je' p\",\r\n  today: \"'hodiaŭ je' p\",\r\n  tomorrow: \"'morgaŭ je' p\",\r\n  nextWeek: \"eeee 'je' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"aK\", \"pK\"],\r\n  abbreviated: [\"a.K.E.\", \"p.K.E.\"],\r\n  wide: [\"antaŭ Komuna Erao\", \"Komuna Erao\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\r\n    \"1-a kvaronjaro\",\r\n    \"2-a kvaronjaro\",\r\n    \"3-a kvaronjaro\",\r\n    \"4-a kvaronjaro\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"aŭg\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januaro\",\r\n    \"februaro\",\r\n    \"marto\",\r\n    \"aprilo\",\r\n    \"majo\",\r\n    \"junio\",\r\n    \"julio\",\r\n    \"aŭgusto\",\r\n    \"septembro\",\r\n    \"oktobro\",\r\n    \"novembro\",\r\n    \"decembro\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"Ĵ\", \"V\", \"S\"],\r\n  short: [\"di\", \"lu\", \"ma\", \"me\", \"ĵa\", \"ve\", \"sa\"],\r\n  abbreviated: [\"dim\", \"lun\", \"mar\", \"mer\", \"ĵaŭ\", \"ven\", \"sab\"],\r\n  wide: [\r\n    \"dimanĉo\",\r\n    \"lundo\",\r\n    \"mardo\",\r\n    \"merkredo\",\r\n    \"ĵaŭdo\",\r\n    \"vendredo\",\r\n    \"sabato\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"noktomezo\",\r\n    noon: \"tagmezo\",\r\n    morning: \"matene\",\r\n    afternoon: \"posttagmeze\",\r\n    evening: \"vespere\",\r\n    night: \"nokte\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.t.m.\",\r\n    pm: \"p.t.m.\",\r\n    midnight: \"noktomezo\",\r\n    noon: \"tagmezo\",\r\n    morning: \"matene\",\r\n    afternoon: \"posttagmeze\",\r\n    evening: \"vespere\",\r\n    night: \"nokte\",\r\n  },\r\n  wide: {\r\n    am: \"antaŭtagmeze\",\r\n    pm: \"posttagmeze\",\r\n    midnight: \"noktomezo\",\r\n    noon: \"tagmezo\",\r\n    morning: \"matene\",\r\n    afternoon: \"posttagmeze\",\r\n    evening: \"vespere\",\r\n    night: \"nokte\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"-a\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: function (quarter) {\r\n      return Number(quarter) - 1;\r\n    },\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?a)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([ap]k)/i,\r\n  abbreviated: /^([ap]\\.?\\s?k\\.?\\s?e\\.?)/i,\r\n  wide: /^((antaǔ |post )?komuna erao)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^a/i, /^[kp]/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^k[1234]/i,\r\n  wide: /^[1234](-?a)? kvaronjaro/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(ŭ|ux|uh|u)g|sep|okt|nov|dec)/i,\r\n  wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(ŭ|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^a(u|ŭ)/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmĵjvs]/i,\r\n  short: /^(di|lu|ma|me|(ĵ|jx|jh|j)a|ve|sa)/i,\r\n  abbreviated: /^(dim|lun|mar|mer|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)|ven|sab)/i,\r\n  wide: /^(diman(ĉ|cx|ch|c)o|lundo|mardo|merkredo|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)do|vendredo|sabato)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|ĵ)/i, /^v/i, /^s/i],\r\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|ĵ)/i, /^v/i, /^s/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,\r\n  abbreviated:\r\n    /^([ap][.\\s]?t[.\\s]?m[.\\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,\r\n  wide: /^(anta(ŭ|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^noktom/i,\r\n    noon: /^t/i,\r\n    morning: /^m/i,\r\n    afternoon: /^posttagmeze/i,\r\n    evening: /^v/i,\r\n    night: /^n/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: function (index) {\r\n      return index + 1;\r\n    },\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./eo/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./eo/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./eo/_lib/formatRelative.js\";\r\nimport { localize } from \"./eo/_lib/localize.js\";\r\nimport { match } from \"./eo/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Esperanto locale.\r\n * @language Esperanto\r\n * @iso-639-2 epo\r\n * @author date-fns\r\n */\r\nexport const eo = {\r\n  code: \"eo\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default eo;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menos de un segundo\",\r\n    other: \"menos de {{count}} segundos\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundos\",\r\n  },\r\n\r\n  halfAMinute: \"medio minuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menos de un minuto\",\r\n    other: \"menos de {{count}} minutos\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutos\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"alrededor de 1 hora\",\r\n    other: \"alrededor de {{count}} horas\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} horas\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 día\",\r\n    other: \"{{count}} días\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"alrededor de 1 semana\",\r\n    other: \"alrededor de {{count}} semanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semana\",\r\n    other: \"{{count}} semanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"alrededor de 1 mes\",\r\n    other: \"alrededor de {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mes\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"alrededor de 1 año\",\r\n    other: \"alrededor de {{count}} años\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 año\",\r\n    other: \"{{count}} años\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"más de 1 año\",\r\n    other: \"más de {{count}} años\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"casi 1 año\",\r\n    other: \"casi {{count}} años\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"en \" + result;\r\n    } else {\r\n      return \"hace \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d 'de' MMMM 'de' y\",\r\n  long: \"d 'de' MMMM 'de' y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'a las' {{time}}\",\r\n  long: \"{{date}} 'a las' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'el' eeee 'pasado a la' p\",\r\n  yesterday: \"'ayer a la' p\",\r\n  today: \"'hoy a la' p\",\r\n  tomorrow: \"'mañana a la' p\",\r\n  nextWeek: \"eeee 'a la' p\",\r\n  other: \"P\",\r\n};\r\n\r\nconst formatRelativeLocalePlural = {\r\n  lastWeek: \"'el' eeee 'pasado a las' p\",\r\n  yesterday: \"'ayer a las' p\",\r\n  today: \"'hoy a las' p\",\r\n  tomorrow: \"'mañana a las' p\",\r\n  nextWeek: \"eeee 'a las' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  if (date.getHours() !== 1) {\r\n    return formatRelativeLocalePlural[token];\r\n  } else {\r\n    return formatRelativeLocale[token];\r\n  }\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"AC\", \"DC\"],\r\n  abbreviated: [\"AC\", \"DC\"],\r\n  wide: [\"antes de cristo\", \"después de cristo\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"e\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"ene\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"may\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"ago\",\r\n    \"sep\",\r\n    \"oct\",\r\n    \"nov\",\r\n    \"dic\",\r\n  ],\r\n\r\n  wide: [\r\n    \"enero\",\r\n    \"febrero\",\r\n    \"marzo\",\r\n    \"abril\",\r\n    \"mayo\",\r\n    \"junio\",\r\n    \"julio\",\r\n    \"agosto\",\r\n    \"septiembre\",\r\n    \"octubre\",\r\n    \"noviembre\",\r\n    \"diciembre\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\r\n  short: [\"do\", \"lu\", \"ma\", \"mi\", \"ju\", \"vi\", \"sá\"],\r\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\r\n  wide: [\r\n    \"domingo\",\r\n    \"lunes\",\r\n    \"martes\",\r\n    \"miércoles\",\r\n    \"jueves\",\r\n    \"viernes\",\r\n    \"sábado\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"mañana\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noche\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"medianoche\",\r\n    noon: \"mediodia\",\r\n    morning: \"mañana\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noche\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"medianoche\",\r\n    noon: \"mediodia\",\r\n    morning: \"mañana\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noche\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"de la mañana\",\r\n    afternoon: \"de la tarde\",\r\n    evening: \"de la tarde\",\r\n    night: \"de la noche\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"medianoche\",\r\n    noon: \"mediodia\",\r\n    morning: \"de la mañana\",\r\n    afternoon: \"de la tarde\",\r\n    evening: \"de la tarde\",\r\n    night: \"de la noche\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"medianoche\",\r\n    noon: \"mediodia\",\r\n    morning: \"de la mañana\",\r\n    afternoon: \"de la tarde\",\r\n    evening: \"de la tarde\",\r\n    night: \"de la noche\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"º\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ac|dc|a|d)/i,\r\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\r\n  wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ac/i, /^dc/i],\r\n  wide: [\r\n    /^(antes de cristo|antes de la era com[uú]n)/i,\r\n    /^(despu[eé]s de cristo|era com[uú]n)/i,\r\n  ],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^[1234](º)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[efmajsond]/i,\r\n  abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,\r\n  wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^e/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^en/i,\r\n    /^feb/i,\r\n    /^mar/i,\r\n    /^abr/i,\r\n    /^may/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^ago/i,\r\n    /^sep/i,\r\n    /^oct/i,\r\n    /^nov/i,\r\n    /^dic/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmjvs]/i,\r\n  short: /^(do|lu|ma|mi|ju|vi|s[áa])/i,\r\n  abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,\r\n  wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\r\n  any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mn/i,\r\n    noon: /^md/i,\r\n    morning: /mañana/i,\r\n    afternoon: /tarde/i,\r\n    evening: /tarde/i,\r\n    night: /noche/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./es/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./es/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./es/_lib/formatRelative.js\";\r\nimport { localize } from \"./es/_lib/localize.js\";\r\nimport { match } from \"./es/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Spanish locale.\r\n * @language Spanish\r\n * @iso-639-2 spa\r\n * @author Juan Angosto [@juanangosto](https://github.com/juanangosto)\r\n * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)\r\n * @author Fernando Agüero [@fjaguero](https://github.com/fjaguero)\r\n * @author Gastón Haro [@harogaston](https://github.com/harogaston)\r\n * @author Yago Carballo [@YagoCarballo](https://github.com/YagoCarballo)\r\n */\r\nexport const es = {\r\n  code: \"es\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default es;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    standalone: {\r\n      one: \"vähem kui üks sekund\",\r\n      other: \"vähem kui {{count}} sekundit\",\r\n    },\r\n    withPreposition: {\r\n      one: \"vähem kui ühe sekundi\",\r\n      other: \"vähem kui {{count}} sekundi\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    standalone: {\r\n      one: \"üks sekund\",\r\n      other: \"{{count}} sekundit\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe sekundi\",\r\n      other: \"{{count}} sekundi\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    standalone: \"pool minutit\",\r\n    withPreposition: \"poole minuti\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    standalone: {\r\n      one: \"vähem kui üks minut\",\r\n      other: \"vähem kui {{count}} minutit\",\r\n    },\r\n    withPreposition: {\r\n      one: \"vähem kui ühe minuti\",\r\n      other: \"vähem kui {{count}} minuti\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    standalone: {\r\n      one: \"üks minut\",\r\n      other: \"{{count}} minutit\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe minuti\",\r\n      other: \"{{count}} minuti\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    standalone: {\r\n      one: \"umbes üks tund\",\r\n      other: \"umbes {{count}} tundi\",\r\n    },\r\n    withPreposition: {\r\n      one: \"umbes ühe tunni\",\r\n      other: \"umbes {{count}} tunni\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    standalone: {\r\n      one: \"üks tund\",\r\n      other: \"{{count}} tundi\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe tunni\",\r\n      other: \"{{count}} tunni\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    standalone: {\r\n      one: \"üks päev\",\r\n      other: \"{{count}} päeva\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe päeva\",\r\n      other: \"{{count}} päeva\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    standalone: {\r\n      one: \"umbes üks nädal\",\r\n      other: \"umbes {{count}} nädalat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"umbes ühe nädala\",\r\n      other: \"umbes {{count}} nädala\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    standalone: {\r\n      one: \"üks nädal\",\r\n      other: \"{{count}} nädalat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe nädala\",\r\n      other: \"{{count}} nädala\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    standalone: {\r\n      one: \"umbes üks kuu\",\r\n      other: \"umbes {{count}} kuud\",\r\n    },\r\n    withPreposition: {\r\n      one: \"umbes ühe kuu\",\r\n      other: \"umbes {{count}} kuu\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    standalone: {\r\n      one: \"üks kuu\",\r\n      other: \"{{count}} kuud\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe kuu\",\r\n      other: \"{{count}} kuu\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    standalone: {\r\n      one: \"umbes üks aasta\",\r\n      other: \"umbes {{count}} aastat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"umbes ühe aasta\",\r\n      other: \"umbes {{count}} aasta\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    standalone: {\r\n      one: \"üks aasta\",\r\n      other: \"{{count}} aastat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ühe aasta\",\r\n      other: \"{{count}} aasta\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    standalone: {\r\n      one: \"rohkem kui üks aasta\",\r\n      other: \"rohkem kui {{count}} aastat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"rohkem kui ühe aasta\",\r\n      other: \"rohkem kui {{count}} aasta\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    standalone: {\r\n      one: \"peaaegu üks aasta\",\r\n      other: \"peaaegu {{count}} aastat\",\r\n    },\r\n    withPreposition: {\r\n      one: \"peaaegu ühe aasta\",\r\n      other: \"peaaegu {{count}} aasta\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const usageGroup = options?.addSuffix\r\n    ? formatDistanceLocale[token].withPreposition\r\n    : formatDistanceLocale[token].standalone;\r\n\r\n  let result;\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" pärast\";\r\n    } else {\r\n      return result + \" eest\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kell' {{time}}\",\r\n  long: \"{{date}} 'kell' {{time}}\",\r\n  medium: \"{{date}}. {{time}}\",\r\n  short: \"{{date}}. {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'eelmine' eeee 'kell' p\",\r\n  yesterday: \"'eile kell' p\",\r\n  today: \"'täna kell' p\",\r\n  tomorrow: \"'homme kell' p\",\r\n  nextWeek: \"'järgmine' eeee 'kell' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"e.m.a\", \"m.a.j\"],\r\n  abbreviated: [\"e.m.a\", \"m.a.j\"],\r\n  wide: [\"enne meie ajaarvamist\", \"meie ajaarvamise järgi\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"V\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jaan\",\r\n    \"veebr\",\r\n    \"märts\",\r\n    \"apr\",\r\n    \"mai\",\r\n    \"juuni\",\r\n    \"juuli\",\r\n    \"aug\",\r\n    \"sept\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dets\",\r\n  ],\r\n\r\n  wide: [\r\n    \"jaanuar\",\r\n    \"veebruar\",\r\n    \"märts\",\r\n    \"aprill\",\r\n    \"mai\",\r\n    \"juuni\",\r\n    \"juuli\",\r\n    \"august\",\r\n    \"september\",\r\n    \"oktoober\",\r\n    \"november\",\r\n    \"detsember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"P\", \"E\", \"T\", \"K\", \"N\", \"R\", \"L\"],\r\n  short: [\"P\", \"E\", \"T\", \"K\", \"N\", \"R\", \"L\"],\r\n  abbreviated: [\r\n    \"pühap.\",\r\n    \"esmasp.\",\r\n    \"teisip.\",\r\n    \"kolmap.\",\r\n    \"neljap.\",\r\n    \"reede.\",\r\n    \"laup.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"pühapäev\",\r\n    \"esmaspäev\",\r\n    \"teisipäev\",\r\n    \"kolmapäev\",\r\n    \"neljapäev\",\r\n    \"reede\",\r\n    \"laupäev\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"kesköö\",\r\n    noon: \"keskpäev\",\r\n    morning: \"hommik\",\r\n    afternoon: \"pärastlõuna\",\r\n    evening: \"õhtu\",\r\n    night: \"öö\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"kesköö\",\r\n    noon: \"keskpäev\",\r\n    morning: \"hommik\",\r\n    afternoon: \"pärastlõuna\",\r\n    evening: \"õhtu\",\r\n    night: \"öö\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"kesköö\",\r\n    noon: \"keskpäev\",\r\n    morning: \"hommik\",\r\n    afternoon: \"pärastlõuna\",\r\n    evening: \"õhtu\",\r\n    night: \"öö\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"keskööl\",\r\n    noon: \"keskpäeval\",\r\n    morning: \"hommikul\",\r\n    afternoon: \"pärastlõunal\",\r\n    evening: \"õhtul\",\r\n    night: \"öösel\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"keskööl\",\r\n    noon: \"keskpäeval\",\r\n    morning: \"hommikul\",\r\n    afternoon: \"pärastlõunal\",\r\n    evening: \"õhtul\",\r\n    night: \"öösel\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"keskööl\",\r\n    noon: \"keskpäeval\",\r\n    morning: \"hommikul\",\r\n    afternoon: \"pärastlõunal\",\r\n    evening: \"õhtul\",\r\n    night: \"öösel\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: monthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: dayValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^\\d+\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(e\\.m\\.a|m\\.a\\.j|eKr|pKr)/i,\r\n  abbreviated: /^(e\\.m\\.a|m\\.a\\.j|eKr|pKr)/i,\r\n  wide: /^(enne meie ajaarvamist|meie ajaarvamise järgi|enne Kristust|pärast Kristust)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^e/i, /^(m|p)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K[1234]/i,\r\n  wide: /^[1234](\\.)? kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jvmasond]/i,\r\n  abbreviated: /^(jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,\r\n  wide: /^(jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^v/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^v/i,\r\n    /^mär/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^juun/i,\r\n    /^juul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[petknrl]/i,\r\n  short: /^[petknrl]/i,\r\n  abbreviated: /^(püh?|esm?|tei?|kolm?|nel?|ree?|laup?)\\.?/i,\r\n  wide: /^(pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|keskööl?|keskpäev(al)?|hommik(ul)?|pärastlõunal?|õhtul?|öö(sel)?)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^keskö/i,\r\n    noon: /^keskp/i,\r\n    morning: /hommik/i,\r\n    afternoon: /pärastlõuna/i,\r\n    evening: /õhtu/i,\r\n    night: /öö/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./et/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./et/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./et/_lib/formatRelative.js\";\r\nimport { localize } from \"./et/_lib/localize.js\";\r\nimport { match } from \"./et/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Estonian locale.\r\n * @language Estonian\r\n * @iso-639-2 est\r\n * @author Priit Hansen [@HansenPriit](https://github.com/priithansen)\r\n */\r\nexport const et = {\r\n  code: \"et\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default et;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"segundo bat baino gutxiago\",\r\n    other: \"{{count}} segundo baino gutxiago\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundo\",\r\n  },\r\n\r\n  halfAMinute: \"minutu erdi\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minutu bat baino gutxiago\",\r\n    other: \"{{count}} minutu baino gutxiago\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minutu\",\r\n    other: \"{{count}} minutu\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"1 ordu gutxi gorabehera\",\r\n    other: \"{{count}} ordu gutxi gorabehera\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ordu\",\r\n    other: \"{{count}} ordu\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 egun\",\r\n    other: \"{{count}} egun\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"aste 1 inguru\",\r\n    other: \"{{count}} aste inguru\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 aste\",\r\n    other: \"{{count}} astean\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"1 hilabete gutxi gorabehera\",\r\n    other: \"{{count}} hilabete gutxi gorabehera\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 hilabete\",\r\n    other: \"{{count}} hilabete\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"1 urte gutxi gorabehera\",\r\n    other: \"{{count}} urte gutxi gorabehera\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 urte\",\r\n    other: \"{{count}} urte\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 urte baino gehiago\",\r\n    other: \"{{count}} urte baino gehiago\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"ia 1 urte\",\r\n    other: \"ia {{count}} urte\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"en \" + result;\r\n    } else {\r\n      return \"duela \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, y'ko' MMMM'ren' d'a' y'ren'\",\r\n  long: \"y'ko' MMMM'ren' d'a'\",\r\n  medium: \"y MMM d\",\r\n  short: \"yy/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'tan' {{time}}\",\r\n  long: \"{{date}} 'tan' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'joan den' eeee, LT\",\r\n  yesterday: \"'atzo,' p\",\r\n  today: \"'gaur,' p\",\r\n  tomorrow: \"'bihar,' p\",\r\n  nextWeek: \"eeee, p\",\r\n  other: \"P\",\r\n};\r\n\r\nconst formatRelativeLocalePlural = {\r\n  lastWeek: \"'joan den' eeee, p\",\r\n  yesterday: \"'atzo,' p\",\r\n  today: \"'gaur,' p\",\r\n  tomorrow: \"'bihar,' p\",\r\n  nextWeek: \"eeee, p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date) => {\r\n  if (date.getHours() !== 1) {\r\n    return formatRelativeLocalePlural[token];\r\n  }\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"k.a.\", \"k.o.\"],\r\n  abbreviated: [\"k.a.\", \"k.o.\"],\r\n  wide: [\"kristo aurretik\", \"kristo ondoren\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1H\", \"2H\", \"3H\", \"4H\"],\r\n  wide: [\r\n    \"1. hiruhilekoa\",\r\n    \"2. hiruhilekoa\",\r\n    \"3. hiruhilekoa\",\r\n    \"4. hiruhilekoa\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"u\", \"o\", \"m\", \"a\", \"m\", \"e\", \"u\", \"a\", \"i\", \"u\", \"a\", \"a\"],\r\n  abbreviated: [\r\n    \"urt\",\r\n    \"ots\",\r\n    \"mar\",\r\n    \"api\",\r\n    \"mai\",\r\n    \"eka\",\r\n    \"uzt\",\r\n    \"abu\",\r\n    \"ira\",\r\n    \"urr\",\r\n    \"aza\",\r\n    \"abe\",\r\n  ],\r\n\r\n  wide: [\r\n    \"urtarrila\",\r\n    \"otsaila\",\r\n    \"martxoa\",\r\n    \"apirila\",\r\n    \"maiatza\",\r\n    \"ekaina\",\r\n    \"uztaila\",\r\n    \"abuztua\",\r\n    \"iraila\",\r\n    \"urria\",\r\n    \"azaroa\",\r\n    \"abendua\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"i\", \"a\", \"a\", \"a\", \"o\", \"o\", \"l\"],\r\n  short: [\"ig\", \"al\", \"as\", \"az\", \"og\", \"or\", \"lr\"],\r\n  abbreviated: [\"iga\", \"ast\", \"ast\", \"ast\", \"ost\", \"ost\", \"lar\"],\r\n  wide: [\r\n    \"igandea\",\r\n    \"astelehena\",\r\n    \"asteartea\",\r\n    \"asteazkena\",\r\n    \"osteguna\",\r\n    \"ostirala\",\r\n    \"larunbata\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"ge\",\r\n    noon: \"eg\",\r\n    morning: \"goiza\",\r\n    afternoon: \"arratsaldea\",\r\n    evening: \"arratsaldea\",\r\n    night: \"gaua\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"gauerdia\",\r\n    noon: \"eguerdia\",\r\n    morning: \"goiza\",\r\n    afternoon: \"arratsaldea\",\r\n    evening: \"arratsaldea\",\r\n    night: \"gaua\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gauerdia\",\r\n    noon: \"eguerdia\",\r\n    morning: \"goiza\",\r\n    afternoon: \"arratsaldea\",\r\n    evening: \"arratsaldea\",\r\n    night: \"gaua\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"ge\",\r\n    noon: \"eg\",\r\n    morning: \"goizean\",\r\n    afternoon: \"arratsaldean\",\r\n    evening: \"arratsaldean\",\r\n    night: \"gauean\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"gauerdia\",\r\n    noon: \"eguerdia\",\r\n    morning: \"goizean\",\r\n    afternoon: \"arratsaldean\",\r\n    evening: \"arratsaldean\",\r\n    night: \"gauean\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gauerdia\",\r\n    noon: \"eguerdia\",\r\n    morning: \"goizean\",\r\n    afternoon: \"arratsaldean\",\r\n    evening: \"arratsaldean\",\r\n    night: \"gauean\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(k.a.|k.o.)/i,\r\n  abbreviated: /^(k.a.|k.o.)/i,\r\n  wide: /^(kristo aurretik|kristo ondoren)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/^k.a./i, /^k.o./i],\r\n  abbreviated: [/^(k.a.)/i, /^(k.o.)/i],\r\n  wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]H/i,\r\n  wide: /^[1234](.)? hiruhilekoa/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[uomaei]/i,\r\n  abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,\r\n  wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^u/i,\r\n    /^o/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^e/i,\r\n    /^u/i,\r\n    /^a/i,\r\n    /^i/i,\r\n    /^u/i,\r\n    /^a/i,\r\n    /^a/i,\r\n  ],\r\n\r\n  any: [\r\n    /^urt/i,\r\n    /^ots/i,\r\n    /^mar/i,\r\n    /^api/i,\r\n    /^mai/i,\r\n    /^eka/i,\r\n    /^uzt/i,\r\n    /^abu/i,\r\n    /^ira/i,\r\n    /^urr/i,\r\n    /^aza/i,\r\n    /^abe/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[iaol]/i,\r\n  short: /^(ig|al|as|az|og|or|lr)/i,\r\n  abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,\r\n  wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i],\r\n  short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i],\r\n  abbreviated: [/^iga/i, /^ast/i, /^ast/i, /^ast/i, /^ost/i, /^ost/i, /^lar/i],\r\n\r\n  wide: [\r\n    /^igandea/i,\r\n    /^astelehena/i,\r\n    /^asteartea/i,\r\n    /^asteazkena/i,\r\n    /^osteguna/i,\r\n    /^ostirala/i,\r\n    /^larunbata/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  narrow: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^ge/i,\r\n    noon: /^eg/i,\r\n    morning: /goiz/i,\r\n    afternoon: /arratsaldea/i,\r\n    evening: /arratsaldea/i,\r\n    night: /gau/i,\r\n  },\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^gauerdia/i,\r\n    noon: /^eguerdia/i,\r\n    morning: /goiz/i,\r\n    afternoon: /arratsaldea/i,\r\n    evening: /arratsaldea/i,\r\n    night: /gau/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./eu/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./eu/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./eu/_lib/formatRelative.js\";\r\nimport { localize } from \"./eu/_lib/localize.js\";\r\nimport { match } from \"./eu/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Basque locale.\r\n * @language Basque\r\n * @iso-639-2 eus\r\n * @author Jacob Söderblom [@JacobSoderblom](https://github.com/JacobSoderblom)\r\n */\r\nexport const eu = {\r\n  code: \"eu\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default eu;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"کمتر از یک ثانیه\",\r\n    other: \"کمتر از {{count}} ثانیه\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 ثانیه\",\r\n    other: \"{{count}} ثانیه\",\r\n  },\r\n\r\n  halfAMinute: \"نیم دقیقه\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"کمتر از یک دقیقه\",\r\n    other: \"کمتر از {{count}} دقیقه\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 دقیقه\",\r\n    other: \"{{count}} دقیقه\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"حدود 1 ساعت\",\r\n    other: \"حدود {{count}} ساعت\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ساعت\",\r\n    other: \"{{count}} ساعت\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 روز\",\r\n    other: \"{{count}} روز\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"حدود 1 هفته\",\r\n    other: \"حدود {{count}} هفته\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 هفته\",\r\n    other: \"{{count}} هفته\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"حدود 1 ماه\",\r\n    other: \"حدود {{count}} ماه\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 ماه\",\r\n    other: \"{{count}} ماه\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"حدود 1 سال\",\r\n    other: \"حدود {{count}} سال\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 سال\",\r\n    other: \"{{count}} سال\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"بیشتر از 1 سال\",\r\n    other: \"بیشتر از {{count}} سال\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"نزدیک 1 سال\",\r\n    other: \"نزدیک {{count}} سال\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"در \" + result;\r\n    } else {\r\n      return result + \" قبل\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"yyyy/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'در' {{time}}\",\r\n  long: \"{{date}} 'در' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'گذشته در' p\",\r\n  yesterday: \"'دیروز در' p\",\r\n  today: \"'امروز در' p\",\r\n  tomorrow: \"'فردا در' p\",\r\n  nextWeek: \"eeee 'در' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ق\", \"ب\"],\r\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\r\n  wide: [\"قبل از میلاد\", \"بعد از میلاد\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"س‌م1\", \"س‌م2\", \"س‌م3\", \"س‌م4\"],\r\n  wide: [\"سه‌ماهه 1\", \"سه‌ماهه 2\", \"سه‌ماهه 3\", \"سه‌ماهه 4\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"ژ\", \"ف\", \"م\", \"آ\", \"م\", \"ج\", \"ج\", \"آ\", \"س\", \"ا\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"ژانـ\",\r\n    \"فور\",\r\n    \"مارس\",\r\n    \"آپر\",\r\n    \"می\",\r\n    \"جون\",\r\n    \"جولـ\",\r\n    \"آگو\",\r\n    \"سپتـ\",\r\n    \"اکتـ\",\r\n    \"نوامـ\",\r\n    \"دسامـ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ژانویه\",\r\n    \"فوریه\",\r\n    \"مارس\",\r\n    \"آپریل\",\r\n    \"می\",\r\n    \"جون\",\r\n    \"جولای\",\r\n    \"آگوست\",\r\n    \"سپتامبر\",\r\n    \"اکتبر\",\r\n    \"نوامبر\",\r\n    \"دسامبر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ی\", \"د\", \"س\", \"چ\", \"پ\", \"ج\", \"ش\"],\r\n  short: [\"1ش\", \"2ش\", \"3ش\", \"4ش\", \"5ش\", \"ج\", \"ش\"],\r\n  abbreviated: [\r\n    \"یکشنبه\",\r\n    \"دوشنبه\",\r\n    \"سه‌شنبه\",\r\n    \"چهارشنبه\",\r\n    \"پنجشنبه\",\r\n    \"جمعه\",\r\n    \"شنبه\",\r\n  ],\r\n\r\n  wide: [\"یکشنبه\", \"دوشنبه\", \"سه‌شنبه\", \"چهارشنبه\", \"پنجشنبه\", \"جمعه\", \"شنبه\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ق\",\r\n    pm: \"ب\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"ص\",\r\n    afternoon: \"ب.ظ.\",\r\n    evening: \"ع\",\r\n    night: \"ش\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ق.ظ.\",\r\n    pm: \"ب.ظ.\",\r\n    midnight: \"نیمه‌شب\",\r\n    noon: \"ظهر\",\r\n    morning: \"صبح\",\r\n    afternoon: \"بعدازظهر\",\r\n    evening: \"عصر\",\r\n    night: \"شب\",\r\n  },\r\n  wide: {\r\n    am: \"قبل‌ازظهر\",\r\n    pm: \"بعدازظهر\",\r\n    midnight: \"نیمه‌شب\",\r\n    noon: \"ظهر\",\r\n    morning: \"صبح\",\r\n    afternoon: \"بعدازظهر\",\r\n    evening: \"عصر\",\r\n    night: \"شب\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ق\",\r\n    pm: \"ب\",\r\n    midnight: \"ن\",\r\n    noon: \"ظ\",\r\n    morning: \"ص\",\r\n    afternoon: \"ب.ظ.\",\r\n    evening: \"ع\",\r\n    night: \"ش\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ق.ظ.\",\r\n    pm: \"ب.ظ.\",\r\n    midnight: \"نیمه‌شب\",\r\n    noon: \"ظهر\",\r\n    morning: \"صبح\",\r\n    afternoon: \"بعدازظهر\",\r\n    evening: \"عصر\",\r\n    night: \"شب\",\r\n  },\r\n  wide: {\r\n    am: \"قبل‌ازظهر\",\r\n    pm: \"بعدازظهر\",\r\n    midnight: \"نیمه‌شب\",\r\n    noon: \"ظهر\",\r\n    morning: \"صبح\",\r\n    afternoon: \"بعدازظهر\",\r\n    evening: \"عصر\",\r\n    night: \"شب\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ق|ب)/i,\r\n  abbreviated: /^(ق\\.?\\s?م\\.?|ق\\.?\\s?د\\.?\\s?م\\.?|م\\.?\\s?|د\\.?\\s?م\\.?)/i,\r\n  wide: /^(قبل از میلاد|قبل از دوران مشترک|میلادی|دوران مشترک|بعد از میلاد)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^قبل/i, /^بعد/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^س‌م[1234]/i,\r\n  wide: /^سه‌ماهه [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[جژفمآاماسند]/i,\r\n  abbreviated:\r\n    /^(جنو|ژانـ|ژانویه|فوریه|فور|مارس|آوریل|آپر|مه|می|ژوئن|جون|جول|جولـ|ژوئیه|اوت|آگو|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نوامـ|دسامبر|دسامـ|دسم)/i,\r\n  wide: /^(ژانویه|جنوری|فبروری|فوریه|مارچ|مارس|آپریل|اپریل|ایپریل|آوریل|مه|می|ژوئن|جون|جولای|ژوئیه|آگست|اگست|آگوست|اوت|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نومبر|دسامبر|دسمبر)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^(ژ|ج)/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^(آ|ا)/i,\r\n    /^م/i,\r\n    /^(ژ|ج)/i,\r\n    /^(ج|ژ)/i,\r\n    /^(آ|ا)/i,\r\n    /^س/i,\r\n    /^ا/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ژا/i,\r\n    /^ف/i,\r\n    /^ما/i,\r\n    /^آپ/i,\r\n    /^(می|مه)/i,\r\n    /^(ژوئن|جون)/i,\r\n    /^(ژوئی|جول)/i,\r\n    /^(اوت|آگ)/i,\r\n    /^س/i,\r\n    /^(اوک|اک)/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[شیدسچپج]/i,\r\n  short: /^(ش|ج|1ش|2ش|3ش|4ش|5ش)/i,\r\n  abbreviated: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i,\r\n  wide: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ی/i, /^دو/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],\r\n  any: [\r\n    /^(ی|1ش|یکشنبه)/i,\r\n    /^(د|2ش|دوشنبه)/i,\r\n    /^(س|3ش|سه‌شنبه)/i,\r\n    /^(چ|4ش|چهارشنبه)/i,\r\n    /^(پ|5ش|پنجشنبه)/i,\r\n    /^(ج|جمعه)/i,\r\n    /^(ش|شنبه)/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ب|ق|ن|ظ|ص|ب.ظ.|ع|ش)/i,\r\n  abbreviated: /^(ق.ظ.|ب.ظ.|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i,\r\n  wide: /^(قبل‌ازظهر|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^(ق|ق.ظ.|قبل‌ازظهر)/i,\r\n    pm: /^(ب|ب.ظ.|بعدازظهر)/i,\r\n    midnight: /^(‌نیمه‌شب|ن)/i,\r\n    noon: /^(ظ|ظهر)/i,\r\n    morning: /(ص|صبح)/i,\r\n    afternoon: /(ب|ب.ظ.|بعدازظهر)/i,\r\n    evening: /(ع|عصر)/i,\r\n    night: /(ش|شب)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./fa-IR/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./fa-IR/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./fa-IR/_lib/formatRelative.js\";\r\nimport { localize } from \"./fa-IR/_lib/localize.js\";\r\nimport { match } from \"./fa-IR/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Persian/Farsi locale (Iran).\r\n * @language Persian\r\n * @iso-639-2 ira\r\n * @author Morteza Ziyae [@mort3za](https://github.com/mort3za)\r\n */\r\nexport const faIR = {\r\n  code: \"fa-IR\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 6 /* Saturday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default faIR;\r\n", "function futureSeconds(text) {\r\n  return text.replace(/sekuntia?/, \"sekunnin\");\r\n}\r\n\r\nfunction futureMinutes(text) {\r\n  return text.replace(/minuuttia?/, \"minuutin\");\r\n}\r\n\r\nfunction futureHours(text) {\r\n  return text.replace(/tuntia?/, \"tunnin\");\r\n}\r\n\r\nfunction futureDays(text) {\r\n  return text.replace(/päivää?/, \"päivän\");\r\n}\r\n\r\nfunction futureWeeks(text) {\r\n  return text.replace(/(viikko|viikkoa)/, \"viikon\");\r\n}\r\n\r\nfunction futureMonths(text) {\r\n  return text.replace(/(kuukausi|kuukautta)/, \"kuukauden\");\r\n}\r\n\r\nfunction futureYears(text) {\r\n  return text.replace(/(vuosi|vuotta)/, \"vuoden\");\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"alle sekunti\",\r\n    other: \"alle {{count}} sekuntia\",\r\n    futureTense: futureSeconds,\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"sekunti\",\r\n    other: \"{{count}} sekuntia\",\r\n    futureTense: futureSeconds,\r\n  },\r\n\r\n  halfAMinute: {\r\n    one: \"puoli minuuttia\",\r\n    other: \"puoli minuuttia\",\r\n    futureTense: (_text) => \"puolen minuutin\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    one: \"alle minuutti\",\r\n    other: \"alle {{count}} minuuttia\",\r\n    futureTense: futureMinutes,\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"minuutti\",\r\n    other: \"{{count}} minuuttia\",\r\n    futureTense: futureMinutes,\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"noin tunti\",\r\n    other: \"noin {{count}} tuntia\",\r\n    futureTense: futureHours,\r\n  },\r\n\r\n  xHours: {\r\n    one: \"tunti\",\r\n    other: \"{{count}} tuntia\",\r\n    futureTense: futureHours,\r\n  },\r\n\r\n  xDays: {\r\n    one: \"päivä\",\r\n    other: \"{{count}} päivää\",\r\n    futureTense: futureDays,\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"noin viikko\",\r\n    other: \"noin {{count}} viikkoa\",\r\n    futureTense: futureWeeks,\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"viikko\",\r\n    other: \"{{count}} viikkoa\",\r\n    futureTense: futureWeeks,\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"noin kuukausi\",\r\n    other: \"noin {{count}} kuukautta\",\r\n    futureTense: futureMonths,\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"kuukausi\",\r\n    other: \"{{count}} kuukautta\",\r\n    futureTense: futureMonths,\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"noin vuosi\",\r\n    other: \"noin {{count}} vuotta\",\r\n    futureTense: futureYears,\r\n  },\r\n\r\n  xYears: {\r\n    one: \"vuosi\",\r\n    other: \"{{count}} vuotta\",\r\n    futureTense: futureYears,\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"yli vuosi\",\r\n    other: \"yli {{count}} vuotta\",\r\n    futureTense: futureYears,\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"lähes vuosi\",\r\n    other: \"lähes {{count}} vuotta\",\r\n    futureTense: futureYears,\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const tokenValue = formatDistanceLocale[token];\r\n  const result =\r\n    count === 1\r\n      ? tokenValue.one\r\n      : tokenValue.other.replace(\"{{count}}\", String(count));\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return tokenValue.futureTense(result) + \" kuluttua\";\r\n    } else {\r\n      return result + \" sitten\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"eeee d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"d.M.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH.mm.ss zzzz\",\r\n  long: \"HH.mm.ss z\",\r\n  medium: \"HH.mm.ss\",\r\n  short: \"HH.mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'klo' {{time}}\",\r\n  long: \"{{date}} 'klo' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'viime' eeee 'klo' p\",\r\n  yesterday: \"'eilen klo' p\",\r\n  today: \"'tänään klo' p\",\r\n  tomorrow: \"'huomenna klo' p\",\r\n  nextWeek: \"'ensi' eeee 'klo' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"eaa.\", \"jaa.\"],\r\n  abbreviated: [\"eaa.\", \"jaa.\"],\r\n  wide: [\"ennen ajanlaskun alkua\", \"jälkeen ajanlaskun alun\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. kvartaali\", \"2. kvartaali\", \"3. kvartaali\", \"4. kvartaali\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"T\", \"H\", \"M\", \"H\", \"T\", \"K\", \"H\", \"E\", \"S\", \"L\", \"M\", \"J\"],\r\n  abbreviated: [\r\n    \"tammi\",\r\n    \"helmi\",\r\n    \"maalis\",\r\n    \"huhti\",\r\n    \"touko\",\r\n    \"kesä\",\r\n    \"heinä\",\r\n    \"elo\",\r\n    \"syys\",\r\n    \"loka\",\r\n    \"marras\",\r\n    \"joulu\",\r\n  ],\r\n\r\n  wide: [\r\n    \"tammikuu\",\r\n    \"helmikuu\",\r\n    \"maaliskuu\",\r\n    \"huhtikuu\",\r\n    \"toukokuu\",\r\n    \"kesäkuu\",\r\n    \"heinäkuu\",\r\n    \"elokuu\",\r\n    \"syyskuu\",\r\n    \"lokakuu\",\r\n    \"marraskuu\",\r\n    \"joulukuu\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: monthValues.narrow,\r\n  abbreviated: monthValues.abbreviated,\r\n  wide: [\r\n    \"tammikuuta\",\r\n    \"helmikuuta\",\r\n    \"maaliskuuta\",\r\n    \"huhtikuuta\",\r\n    \"toukokuuta\",\r\n    \"kesäkuuta\",\r\n    \"heinäkuuta\",\r\n    \"elokuuta\",\r\n    \"syyskuuta\",\r\n    \"lokakuuta\",\r\n    \"marraskuuta\",\r\n    \"joulukuuta\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"T\", \"K\", \"T\", \"P\", \"L\"],\r\n  short: [\"su\", \"ma\", \"ti\", \"ke\", \"to\", \"pe\", \"la\"],\r\n  abbreviated: [\"sunn.\", \"maan.\", \"tiis.\", \"kesk.\", \"torst.\", \"perj.\", \"la\"],\r\n\r\n  wide: [\r\n    \"sunnuntai\",\r\n    \"maanantai\",\r\n    \"tiistai\",\r\n    \"keskiviikko\",\r\n    \"torstai\",\r\n    \"perjantai\",\r\n    \"lauantai\",\r\n  ],\r\n};\r\n\r\nconst formattingDayValues = {\r\n  narrow: dayValues.narrow,\r\n  short: dayValues.short,\r\n  abbreviated: dayValues.abbreviated,\r\n  wide: [\r\n    \"sunnuntaina\",\r\n    \"maanantaina\",\r\n    \"tiistaina\",\r\n    \"keskiviikkona\",\r\n    \"torstaina\",\r\n    \"perjantaina\",\r\n    \"lauantaina\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ap\",\r\n    pm: \"ip\",\r\n    midnight: \"keskiyö\",\r\n    noon: \"keskipäivä\",\r\n    morning: \"ap\",\r\n    afternoon: \"ip\",\r\n    evening: \"illalla\",\r\n    night: \"yöllä\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ap\",\r\n    pm: \"ip\",\r\n    midnight: \"keskiyö\",\r\n    noon: \"keskipäivä\",\r\n    morning: \"ap\",\r\n    afternoon: \"ip\",\r\n    evening: \"illalla\",\r\n    night: \"yöllä\",\r\n  },\r\n  wide: {\r\n    am: \"ap\",\r\n    pm: \"ip\",\r\n    midnight: \"keskiyöllä\",\r\n    noon: \"keskipäivällä\",\r\n    morning: \"aamupäivällä\",\r\n    afternoon: \"iltapäivällä\",\r\n    evening: \"illalla\",\r\n    night: \"yöllä\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(e|j)/i,\r\n  abbreviated: /^(eaa.|jaa.)/i,\r\n  wide: /^(ennen ajanlaskun alkua|jälkeen ajanlaskun alun)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^e/i, /^j/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234]\\.? kvartaali/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[thmkeslj]/i,\r\n  abbreviated:\r\n    /^(tammi|helmi|maalis|huhti|touko|kesä|heinä|elo|syys|loka|marras|joulu)/i,\r\n  wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesäkuu|heinäkuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^t/i,\r\n    /^h/i,\r\n    /^m/i,\r\n    /^h/i,\r\n    /^t/i,\r\n    /^k/i,\r\n    /^h/i,\r\n    /^e/i,\r\n    /^s/i,\r\n    /^l/i,\r\n    /^m/i,\r\n    /^j/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ta/i,\r\n    /^hel/i,\r\n    /^maa/i,\r\n    /^hu/i,\r\n    /^to/i,\r\n    /^k/i,\r\n    /^hei/i,\r\n    /^e/i,\r\n    /^s/i,\r\n    /^l/i,\r\n    /^mar/i,\r\n    /^j/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtkpl]/i,\r\n  short: /^(su|ma|ti|ke|to|pe|la)/i,\r\n  abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,\r\n  wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i],\r\n  any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(ap|ip|keskiyö|keskipäivä|aamupäivällä|iltapäivällä|illalla|yöllä)/i,\r\n  any: /^(ap|ip|keskiyöllä|keskipäivällä|aamupäivällä|iltapäivällä|illalla|yöllä)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ap/i,\r\n    pm: /^ip/i,\r\n    midnight: /^keskiyö/i,\r\n    noon: /^keskipäivä/i,\r\n    morning: /aamupäivällä/i,\r\n    afternoon: /iltapäivällä/i,\r\n    evening: /illalla/i,\r\n    night: /yöllä/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./fi/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./fi/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./fi/_lib/formatRelative.js\";\r\nimport { localize } from \"./fi/_lib/localize.js\";\r\nimport { match } from \"./fi/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Finnish locale.\r\n * @language Finnish\r\n * @iso-639-2 fin\r\n * @author Pyry-Samuli Lahti [@Pyppe](https://github.com/Pyppe)\r\n * @author Edo Rivai [@mikolajgrzyb](https://github.com/mikolajgrzyb)\r\n * @author Samu Juvonen [@sjuvonen](https://github.com/sjuvonen)\r\n */\r\nexport const fi = {\r\n  code: \"fi\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default fi;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"moins d’une seconde\",\r\n    other: \"moins de {{count}} secondes\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 seconde\",\r\n    other: \"{{count}} secondes\",\r\n  },\r\n\r\n  halfAMinute: \"30 secondes\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"moins d’une minute\",\r\n    other: \"moins de {{count}} minutes\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minute\",\r\n    other: \"{{count}} minutes\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"environ 1 heure\",\r\n    other: \"environ {{count}} heures\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 heure\",\r\n    other: \"{{count}} heures\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 jour\",\r\n    other: \"{{count}} jours\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"environ 1 semaine\",\r\n    other: \"environ {{count}} semaines\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semaine\",\r\n    other: \"{{count}} semaines\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"environ 1 mois\",\r\n    other: \"environ {{count}} mois\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mois\",\r\n    other: \"{{count}} mois\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"environ 1 an\",\r\n    other: \"environ {{count}} ans\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 an\",\r\n    other: \"{{count}} ans\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"plus d’un an\",\r\n    other: \"plus de {{count}} ans\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"presqu’un an\",\r\n    other: \"presque {{count}} ans\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n  const form = formatDistanceLocale[token];\r\n  if (typeof form === \"string\") {\r\n    result = form;\r\n  } else if (count === 1) {\r\n    result = form.one;\r\n  } else {\r\n    result = form.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"dans \" + result;\r\n    } else {\r\n      return \"il y a \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'à' {{time}}\",\r\n  long: \"{{date}} 'à' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'dernier à' p\",\r\n  yesterday: \"'hier à' p\",\r\n  today: \"'aujourd’hui à' p\",\r\n  tomorrow: \"'demain à' p'\",\r\n  nextWeek: \"eeee 'prochain à' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"av. J.-C\", \"ap. J.-C\"],\r\n  abbreviated: [\"av. J.-C\", \"ap. J.-C\"],\r\n  wide: [\"avant Jésus-Christ\", \"après Jésus-Christ\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  abbreviated: [\"1er trim.\", \"2ème trim.\", \"3ème trim.\", \"4ème trim.\"],\r\n  wide: [\"1er trimestre\", \"2ème trimestre\", \"3ème trimestre\", \"4ème trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"janv.\",\r\n    \"févr.\",\r\n    \"mars\",\r\n    \"avr.\",\r\n    \"mai\",\r\n    \"juin\",\r\n    \"juil.\",\r\n    \"août\",\r\n    \"sept.\",\r\n    \"oct.\",\r\n    \"nov.\",\r\n    \"déc.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janvier\",\r\n    \"février\",\r\n    \"mars\",\r\n    \"avril\",\r\n    \"mai\",\r\n    \"juin\",\r\n    \"juillet\",\r\n    \"août\",\r\n    \"septembre\",\r\n    \"octobre\",\r\n    \"novembre\",\r\n    \"décembre\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\r\n  short: [\"di\", \"lu\", \"ma\", \"me\", \"je\", \"ve\", \"sa\"],\r\n  abbreviated: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\r\n\r\n  wide: [\r\n    \"dimanche\",\r\n    \"lundi\",\r\n    \"mardi\",\r\n    \"mercredi\",\r\n    \"jeudi\",\r\n    \"vendredi\",\r\n    \"samedi\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minuit\",\r\n    noon: \"midi\",\r\n    morning: \"mat.\",\r\n    afternoon: \"ap.m.\",\r\n    evening: \"soir\",\r\n    night: \"mat.\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minuit\",\r\n    noon: \"midi\",\r\n    morning: \"matin\",\r\n    afternoon: \"après-midi\",\r\n    evening: \"soir\",\r\n    night: \"matin\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minuit\",\r\n    noon: \"midi\",\r\n    morning: \"du matin\",\r\n    afternoon: \"de l’après-midi\",\r\n    evening: \"du soir\",\r\n    night: \"du matin\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n\r\n  if (number === 0) return \"0\";\r\n\r\n  const feminineUnits = [\"year\", \"week\", \"hour\", \"minute\", \"second\"];\r\n  let suffix;\r\n\r\n  if (number === 1) {\r\n    suffix = unit && feminineUnits.includes(unit) ? \"ère\" : \"er\";\r\n  } else {\r\n    suffix = \"ème\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nconst LONG_MONTHS_TOKENS = [\"MMM\", \"MMMM\"];\r\n\r\nexport const localize = {\r\n  preprocessor: (date, parts) => {\r\n    // Replaces the `do` tokens with `d` when used with long month tokens and the day of the month is greater than one.\r\n    // Use case \"do MMMM\" => 1er août, 29 août\r\n    // see https://github.com/date-fns/date-fns/issues/1391\r\n\r\n    if (date.getDate() === 1) return parts;\r\n\r\n    const hasLongMonthToken = parts.some(\r\n      (part) => part.isToken && LONG_MONTHS_TOKENS.includes(part.value),\r\n    );\r\n\r\n    if (!hasLongMonthToken) return parts;\r\n\r\n    return parts.map((part) =>\r\n      part.isToken && part.value === \"do\"\r\n        ? { isToken: true, value: \"d\" }\r\n        : part,\r\n    );\r\n  },\r\n\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ième|ère|ème|er|e)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,\r\n  abbreviated: /^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\r\n  wide: /^(avant Jésus-Christ|après Jésus-Christ)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^av/i, /^ap/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^T?[1234]/i,\r\n  abbreviated: /^[1234](er|ème|e)? trim\\.?/i,\r\n  wide: /^[1234](er|ème|e)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\\.?/i,\r\n  wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^av/i,\r\n    /^ma/i,\r\n    /^juin/i,\r\n    /^juil/i,\r\n    /^ao/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[lmjvsd]/i,\r\n  short: /^(di|lu|ma|me|je|ve|sa)/i,\r\n  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,\r\n  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\r\n  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|du matin|de l'après[-\\s]midi|du soir|de la nuit)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^min/i,\r\n    noon: /^mid/i,\r\n    morning: /mat/i,\r\n    afternoon: /ap/i,\r\n    evening: /soir/i,\r\n    night: /nuit/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./fr/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./fr/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./fr/_lib/formatRelative.js\";\r\nimport { localize } from \"./fr/_lib/localize.js\";\r\nimport { match } from \"./fr/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary French locale.\r\n * @language French\r\n * @iso-639-2 fra\r\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\r\n * @author François B [@fbonzon](https://github.com/fbonzon)\r\n */\r\nexport const fr = {\r\n  code: \"fr\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default fr;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"yy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'à' {{time}}\",\r\n  long: \"{{date}} 'à' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "// Same as fr\r\nimport { formatDistance } from \"./fr/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./fr/_lib/formatRelative.js\";\r\nimport { localize } from \"./fr/_lib/localize.js\";\r\nimport { match } from \"./fr/_lib/match.js\";\r\n\r\n// Unique for fr-CA\r\nimport { formatLong } from \"./fr-CA/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary French locale (Canada).\r\n * @language French\r\n * @iso-639-2 fra\r\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\r\n * @author François B [@fbonzon](https://github.com/fbonzon)\r\n * @author Gabriele Petrioli [@gpetrioli](https://github.com/gpetrioli)\r\n */\r\nexport const frCA = {\r\n  code: \"fr-CA\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n\r\n  // Unique for fr-CA\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default frCA;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'à' {{time}}\",\r\n  long: \"{{date}} 'à' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'la semaine dernière à' p\",\r\n  yesterday: \"'hier à' p\",\r\n  today: \"'aujourd’hui à' p\",\r\n  tomorrow: \"'demain à' p'\",\r\n  nextWeek: \"eeee 'la semaine prochaine à' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "// Same as fr\r\nimport { formatDistance } from \"./fr/_lib/formatDistance.js\";\r\nimport { localize } from \"./fr/_lib/localize.js\";\r\nimport { match } from \"./fr/_lib/match.js\";\r\n\r\n// Unique for fr-CH\r\nimport { formatLong } from \"./fr-CH/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./fr-CH/_lib/formatRelative.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary French locale (Switzerland).\r\n * @language French\r\n * @iso-639-2 fra\r\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\r\n * @author François B [@fbonzon](https://github.com/fbonzon)\r\n * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)\r\n * @author Alex Hoeing [@dcbn](https://github.com/dcbn)\r\n */\r\nexport const frCH = {\r\n  code: \"fr-CH\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default frCH;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"minder as 1 sekonde\",\r\n    other: \"minder as {{count}} sekonden\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekonde\",\r\n    other: \"{{count}} sekonden\",\r\n  },\r\n\r\n  halfAMinute: \"oardel minút\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minder as 1 minút\",\r\n    other: \"minder as {{count}} minuten\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minút\",\r\n    other: \"{{count}} minuten\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"sawat 1 oere\",\r\n    other: \"sawat {{count}} oere\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 oere\",\r\n    other: \"{{count}} oere\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dei\",\r\n    other: \"{{count}} dagen\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"sawat 1 wike\",\r\n    other: \"sawat {{count}} wiken\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 wike\",\r\n    other: \"{{count}} wiken\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"sawat 1 moanne\",\r\n    other: \"sawat {{count}} moannen\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 moanne\",\r\n    other: \"{{count}} moannen\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"sawat 1 jier\",\r\n    other: \"sawat {{count}} jier\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 jier\",\r\n    other: \"{{count}} jier\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"mear as 1 jier\",\r\n    other: \"mear as {{count}}s jier\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"hast 1 jier\",\r\n    other: \"hast {{count}} jier\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"oer \" + result;\r\n    } else {\r\n      return result + \" lyn\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd-MM-y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'om' {{time}}\",\r\n  long: \"{{date}} 'om' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ôfrûne' eeee 'om' p\",\r\n  yesterday: \"'juster om' p\",\r\n  today: \"'hjoed om' p\",\r\n  tomorrow: \"'moarn om' p\",\r\n  nextWeek: \"eeee 'om' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"f.K.\", \"n.K.\"],\r\n  abbreviated: [\"f.Kr.\", \"n.Kr.\"],\r\n  wide: [\"foar Kristus\", \"nei Kristus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1e fearnsjier\", \"2e fearnsjier\", \"3e fearnsjier\", \"4e fearnsjier\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mrt.\",\r\n    \"apr.\",\r\n    \"mai.\",\r\n    \"jun.\",\r\n    \"jul.\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"jannewaris\",\r\n    \"febrewaris\",\r\n    \"maart\",\r\n    \"april\",\r\n    \"maaie\",\r\n    \"juny\",\r\n    \"july\",\r\n    \"augustus\",\r\n    \"septimber\",\r\n    \"oktober\",\r\n    \"novimber\",\r\n    \"desimber\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"s\", \"m\", \"t\", \"w\", \"t\", \"f\", \"s\"],\r\n  short: [\"si\", \"mo\", \"ti\", \"wo\", \"to\", \"fr\", \"so\"],\r\n  abbreviated: [\"snein\", \"moa\", \"tii\", \"woa\", \"ton\", \"fre\", \"sneon\"],\r\n  wide: [\r\n    \"snein\",\r\n    \"moandei\",\r\n    \"tiisdei\",\r\n    \"woansdei\",\r\n    \"tongersdei\",\r\n    \"freed\",\r\n    \"sneon\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"middei\",\r\n    morning: \"moarns\",\r\n    afternoon: \"middeis\",\r\n    evening: \"jûns\",\r\n    night: \"nachts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"middei\",\r\n    morning: \"moarns\",\r\n    afternoon: \"middeis\",\r\n    evening: \"jûns\",\r\n    night: \"nachts\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"middei\",\r\n    morning: \"moarns\",\r\n    afternoon: \"middeis\",\r\n    evening: \"jûns\",\r\n    night: \"nachts\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"e\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([fn]\\.? ?K\\.?)/,\r\n  abbreviated: /^([fn]\\. ?Kr\\.?)/,\r\n  wide: /^((foar|nei) Kristus)/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^f/, /^n/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K[1234]/i,\r\n  wide: /^[1234]e fearnsjier/i,\r\n};\r\n\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i,\r\n  wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^jan/i,\r\n    /^feb/i,\r\n    /^m(r|a)/i,\r\n    /^apr/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^aug/i,\r\n    /^sep/i,\r\n    /^okt/i,\r\n    /^nov/i,\r\n    /^des/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtwf]/i,\r\n  short: /^(si|mo|ti|wo|to|fr|so)/i,\r\n  abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i,\r\n  wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\r\n  any: [/^sn/i, /^mo/i, /^ti/i, /^wo/i, /^to/i, /^fr/i, /^sn/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|middernacht|middeis|moarns|middei|jûns|nachts)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /^middernacht/i,\r\n    noon: /^middei/i,\r\n    morning: /moarns/i,\r\n    afternoon: /^middeis/i,\r\n    evening: /jûns/i,\r\n    night: /nachts/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./fy/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./fy/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./fy/_lib/formatRelative.js\";\r\nimport { localize } from \"./fy/_lib/localize.js\";\r\nimport { match } from \"./fy/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Western Frisian locale (Netherlands).\r\n * @language West Frisian\r\n * @iso-639-2 fry\r\n * @author Damon Asberg [@damon02](https://github.com/damon02)\r\n */\r\nexport const fy = {\r\n  code: \"fy\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default fy;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"nas lugha na diog\",\r\n    other: \"nas lugha na {{count}} diogan\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 diog\",\r\n    two: \"2 dhiog\",\r\n    twenty: \"20 diog\",\r\n    other: \"{{count}} diogan\",\r\n  },\r\n\r\n  halfAMinute: \"leth mhionaid\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"nas lugha na mionaid\",\r\n    other: \"nas lugha na {{count}} mionaidean\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 mionaid\",\r\n    two: \"2 mhionaid\",\r\n    twenty: \"20 mionaid\",\r\n    other: \"{{count}} mionaidean\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"mu uair de thìde\",\r\n    other: \"mu {{count}} uairean de thìde\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 uair de thìde\",\r\n    two: \"2 uair de thìde\",\r\n    twenty: \"20 uair de thìde\",\r\n    other: \"{{count}} uairean de thìde\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 là\",\r\n    other: \"{{count}} là\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"mu 1 seachdain\",\r\n    other: \"mu {{count}} seachdainean\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 seachdain\",\r\n    other: \"{{count}} seachdainean\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"mu mhìos\",\r\n    other: \"mu {{count}} mìosan\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mìos\",\r\n    other: \"{{count}} mìosan\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"mu bhliadhna\",\r\n    other: \"mu {{count}} bliadhnaichean\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 bhliadhna\",\r\n    other: \"{{count}} bliadhna\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"còrr is bliadhna\",\r\n    other: \"còrr is {{count}} bliadhnaichean\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"cha mhòr bliadhna\",\r\n    other: \"cha mhòr {{count}} bliadhnaichean\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2 && !!tokenValue.two) {\r\n    result = tokenValue.two;\r\n  } else if (count === 20 && !!tokenValue.twenty) {\r\n    result = tokenValue.twenty;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"ann an \" + result;\r\n    } else {\r\n      return \"o chionn \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'aig' {{time}}\",\r\n  long: \"{{date}} 'aig' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'mu dheireadh' eeee 'aig' p\", //FIX\r\n  yesterday: \"'an-dè aig' p\",\r\n  today: \"'an-diugh aig' p\",\r\n  tomorrow: \"'a-màireach aig' p\",\r\n  nextWeek: \"eeee 'aig' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"R\", \"A\"],\r\n  abbreviated: [\"RC\", \"AD\"],\r\n  wide: [\"ro Chrìosta\", \"anno domini\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"C1\", \"C2\", \"C3\", \"C4\"],\r\n  wide: [\r\n    \"a' chiad chairteal\",\r\n    \"an dàrna cairteal\",\r\n    \"an treas cairteal\",\r\n    \"an ceathramh cairteal\",\r\n  ],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"F\", \"G\", \"M\", \"G\", \"C\", \"Ò\", \"I\", \"L\", \"S\", \"D\", \"S\", \"D\"],\r\n  abbreviated: [\r\n    \"Faoi\",\r\n    \"Gear\",\r\n    \"Màrt\",\r\n    \"Gibl\",\r\n    \"Cèit\",\r\n    \"Ògmh\",\r\n    \"Iuch\",\r\n    \"Lùn\",\r\n    \"Sult\",\r\n    \"Dàmh\",\r\n    \"Samh\",\r\n    \"Dùbh\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Am Faoilleach\",\r\n    \"An Gearran\",\r\n    \"Am Màrt\",\r\n    \"An Giblean\",\r\n    \"An Cèitean\",\r\n    \"An t-Ògmhios\",\r\n    \"An t-Iuchar\",\r\n    \"An Lùnastal\",\r\n    \"An t-Sultain\",\r\n    \"An Dàmhair\",\r\n    \"An t-Samhain\",\r\n    \"An Dùbhlachd\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"L\", \"M\", \"C\", \"A\", \"H\", \"S\"],\r\n  short: [\"Dò\", \"Lu\", \"Mà\", \"Ci\", \"Ar\", \"Ha\", \"Sa\"],\r\n  abbreviated: [\"Did\", \"Dil\", \"Dim\", \"Dic\", \"Dia\", \"Dih\", \"Dis\"],\r\n  wide: [\r\n    \"Didòmhnaich\",\r\n    \"Diluain\",\r\n    \"Dimàirt\",\r\n    \"Diciadain\",\r\n    \"Diardaoin\",\r\n    \"Dihaoine\",\r\n    \"Disathairne\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"m\",\r\n    pm: \"f\",\r\n    midnight: \"m.o.\",\r\n    noon: \"m.l.\",\r\n    morning: \"madainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"oidhche\",\r\n  },\r\n  abbreviated: {\r\n    am: \"M.\",\r\n    pm: \"F.\",\r\n    midnight: \"meadhan oidhche\",\r\n    noon: \"meadhan là\",\r\n    morning: \"madainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"oidhche\",\r\n  },\r\n  wide: {\r\n    am: \"m.\",\r\n    pm: \"f.\",\r\n    midnight: \"meadhan oidhche\",\r\n    noon: \"meadhan là\",\r\n    morning: \"madainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"oidhche\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"m\",\r\n    pm: \"f\",\r\n    midnight: \"m.o.\",\r\n    noon: \"m.l.\",\r\n    morning: \"sa mhadainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"air an oidhche\",\r\n  },\r\n  abbreviated: {\r\n    am: \"M.\",\r\n    pm: \"F.\",\r\n    midnight: \"meadhan oidhche\",\r\n    noon: \"meadhan là\",\r\n    morning: \"sa mhadainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"air an oidhche\",\r\n  },\r\n  wide: {\r\n    am: \"m.\",\r\n    pm: \"f.\",\r\n    midnight: \"meadhan oidhche\",\r\n    noon: \"meadhan là\",\r\n    morning: \"sa mhadainn\",\r\n    afternoon: \"feasgar\",\r\n    evening: \"feasgar\",\r\n    night: \"air an oidhche\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n  const rem100 = number % 100;\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return number + \"d\";\r\n      case 2:\r\n        return number + \"na\";\r\n    }\r\n  }\r\n\r\n  if (rem100 === 12) {\r\n    return number + \"na\";\r\n  }\r\n\r\n  return number + \"mh\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(d|na|tr|mh)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(r|a)/i,\r\n  abbreviated: /^(r\\.?\\s?c\\.?|r\\.?\\s?a\\.?\\s?c\\.?|a\\.?\\s?d\\.?|a\\.?\\s?c\\.?)/i,\r\n  wide: /^(ro Chrìosta|ron aois choitchinn|anno domini|aois choitcheann)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^b/i, /^(a|c)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^c[1234]/i,\r\n  wide: /^[1234](cd|na|tr|mh)? cairteal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[fgmcòilsd]/i,\r\n  abbreviated: /^(faoi|gear|màrt|gibl|cèit|ògmh|iuch|lùn|sult|dàmh|samh|dùbh)/i,\r\n  wide: /^(am faoilleach|an gearran|am màrt|an giblean|an cèitean|an t-Ògmhios|an t-Iuchar|an lùnastal|an t-Sultain|an dàmhair|an t-Samhain|an dùbhlachd)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^f/i,\r\n    /^g/i,\r\n    /^m/i,\r\n    /^g/i,\r\n    /^c/i,\r\n    /^ò/i,\r\n    /^i/i,\r\n    /^l/i,\r\n    /^s/i,\r\n    /^d/i,\r\n    /^s/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^fa/i,\r\n    /^ge/i,\r\n    /^mà/i,\r\n    /^gi/i,\r\n    /^c/i,\r\n    /^ò/i,\r\n    /^i/i,\r\n    /^l/i,\r\n    /^su/i,\r\n    /^d/i,\r\n    /^sa/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmcahs]/i,\r\n  short: /^(dò|lu|mà|ci|ar|ha|sa)/i,\r\n  abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,\r\n  wide: /^(didòmhnaich|diluain|dimàirt|diciadain|diardaoin|dihaoine|disathairne)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],\r\n  any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|meadhan oidhche|meadhan là|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^m/i,\r\n    pm: /^f/i,\r\n    midnight: /^meadhan oidhche/i,\r\n    noon: /^meadhan là/i,\r\n    morning: /sa mhadainn/i,\r\n    afternoon: /feasgar/i,\r\n    evening: /feasgar/i,\r\n    night: /air an oidhche/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./gd/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./gd/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./gd/_lib/formatRelative.js\";\r\nimport { localize } from \"./gd/_lib/localize.js\";\r\nimport { match } from \"./gd/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Scottish Gaelic.\r\n * @language Scottish Gaelic\r\n * @iso-639-2 gla\r\n * @author Lee Driscoll [@leedriscoll](https://github.com/leedriscoll)\r\n */\r\nexport const gd = {\r\n  code: \"gd\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default gd;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menos dun segundo\",\r\n    other: \"menos de {{count}} segundos\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundos\",\r\n  },\r\n\r\n  halfAMinute: \"medio minuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menos dun minuto\",\r\n    other: \"menos de {{count}} minutos\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutos\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"arredor dunha hora\",\r\n    other: \"arredor de {{count}} horas\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} horas\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 día\",\r\n    other: \"{{count}} días\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"arredor dunha semana\",\r\n    other: \"arredor de {{count}} semanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semana\",\r\n    other: \"{{count}} semanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"arredor de 1 mes\",\r\n    other: \"arredor de {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mes\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"arredor dun ano\",\r\n    other: \"arredor de {{count}} anos\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ano\",\r\n    other: \"{{count}} anos\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"máis dun ano\",\r\n    other: \"máis de {{count}} anos\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"case un ano\",\r\n    other: \"case {{count}} anos\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"en \" + result;\r\n    } else {\r\n      return \"hai \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d 'de' MMMM y\",\r\n  long: \"d 'de' MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'ás' {{time}}\",\r\n  long: \"{{date}} 'ás' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'o' eeee 'pasado á' LT\",\r\n  yesterday: \"'onte á' p\",\r\n  today: \"'hoxe á' p\",\r\n  tomorrow: \"'mañá á' p\",\r\n  nextWeek: \"eeee 'á' p\",\r\n  other: \"P\",\r\n};\r\n\r\nconst formatRelativeLocalePlural = {\r\n  lastWeek: \"'o' eeee 'pasado ás' p\",\r\n  yesterday: \"'onte ás' p\",\r\n  today: \"'hoxe ás' p\",\r\n  tomorrow: \"'mañá ás' p\",\r\n  nextWeek: \"eeee 'ás' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  if (date.getHours() !== 1) {\r\n    return formatRelativeLocalePlural[token];\r\n  }\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"AC\", \"DC\"],\r\n  abbreviated: [\"AC\", \"DC\"],\r\n  wide: [\"antes de cristo\", \"despois de cristo\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"e\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"xan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"mai\",\r\n    \"xun\",\r\n    \"xul\",\r\n    \"ago\",\r\n    \"set\",\r\n    \"out\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"xaneiro\",\r\n    \"febreiro\",\r\n    \"marzo\",\r\n    \"abril\",\r\n    \"maio\",\r\n    \"xuño\",\r\n    \"xullo\",\r\n    \"agosto\",\r\n    \"setembro\",\r\n    \"outubro\",\r\n    \"novembro\",\r\n    \"decembro\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\r\n  short: [\"do\", \"lu\", \"ma\", \"me\", \"xo\", \"ve\", \"sa\"],\r\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mer\", \"xov\", \"ven\", \"sab\"],\r\n  wide: [\"domingo\", \"luns\", \"martes\", \"mércores\", \"xoves\", \"venres\", \"sábado\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"mañá\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noite\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"medianoite\",\r\n    noon: \"mediodía\",\r\n    morning: \"mañá\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tardiña\",\r\n    night: \"noite\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"medianoite\",\r\n    noon: \"mediodía\",\r\n    morning: \"mañá\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tardiña\",\r\n    night: \"noite\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"da mañá\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tardiña\",\r\n    night: \"da noite\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"medianoite\",\r\n    noon: \"mediodía\",\r\n    morning: \"da mañá\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tardiña\",\r\n    night: \"da noite\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"medianoite\",\r\n    noon: \"mediodía\",\r\n    morning: \"da mañá\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tardiña\",\r\n    night: \"da noite\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"º\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ac|dc|a|d)/i,\r\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\r\n  wide: /^(antes de cristo|antes da era com[uú]n|despois de cristo|era com[uú]n)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ac/i, /^dc/i],\r\n  wide: [\r\n    /^(antes de cristo|antes da era com[uú]n)/i,\r\n    /^(despois de cristo|era com[uú]n)/i,\r\n  ],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^[1234](º)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[xfmasond]/i,\r\n  abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,\r\n  wide: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^x/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^x/i,\r\n    /^x/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^xan/i,\r\n    /^feb/i,\r\n    /^mar/i,\r\n    /^abr/i,\r\n    /^mai/i,\r\n    /^xun/i,\r\n    /^xul/i,\r\n    /^ago/i,\r\n    /^set/i,\r\n    /^out/i,\r\n    /^nov/i,\r\n    /^dec/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmxvs]/i,\r\n  short: /^(do|lu|ma|me|xo|ve|sa)/i,\r\n  abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,\r\n  wide: /^(domingo|luns|martes|m[eé]rcores|xoves|venres|s[áa]bado)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i],\r\n  any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mn|md|(da|[aá]s) (mañ[aá]|tarde|noite))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|medianoite|mediod[ií]a|(da|[aá]s) (mañ[aá]|tarde|noite))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mn/i,\r\n    noon: /^md/i,\r\n    morning: /mañ[aá]/i,\r\n    afternoon: /tarde/i,\r\n    evening: /tardiña/i,\r\n    night: /noite/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./gl/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./gl/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./gl/_lib/formatRelative.js\";\r\nimport { localize } from \"./gl/_lib/localize.js\";\r\nimport { match } from \"./gl/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Galician locale.\r\n * @language Galician\r\n * @iso-639-2 glg\r\n * @author Alberto Doval - Cocodin Technology[@cocodinTech](https://github.com/cocodinTech)\r\n * @author Fidel Pita [@fidelpita](https://github.com/fidelpita)\r\n */\r\nexport const gl = {\r\n  code: \"gl\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default gl;\r\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"હમણાં\", // CLDR #1461\r\n    other: \"​આશરે {{count}} સેકંડ\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 સેકંડ\",\r\n    other: \"{{count}} સેકંડ\",\r\n  },\r\n\r\n  halfAMinute: \"અડધી મિનિટ\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"આ મિનિટ\", // CLDR #1448\r\n    other: \"​આશરે {{count}} મિનિટ\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 મિનિટ\",\r\n    other: \"{{count}} મિનિટ\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"​આશરે 1 કલાક\",\r\n    other: \"​આશરે {{count}} કલાક\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 કલાક\",\r\n    other: \"{{count}} કલાક\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 દિવસ\",\r\n    other: \"{{count}} દિવસ\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"આશરે 1 અઠવાડિયું\",\r\n    other: \"આશરે {{count}} અઠવાડિયા\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 અઠવાડિયું\",\r\n    other: \"{{count}} અઠવાડિયા\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"આશરે 1 મહિનો\",\r\n    other: \"આશરે {{count}} મહિના\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 મહિનો\",\r\n    other: \"{{count}} મહિના\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"આશરે 1 વર્ષ\",\r\n    other: \"આશરે {{count}} વર્ષ\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 વર્ષ\",\r\n    other: \"{{count}} વર્ષ\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 વર્ષથી વધુ\",\r\n    other: \"{{count}} વર્ષથી વધુ\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"લગભગ 1 વર્ષ\",\r\n    other: \"લગભગ {{count}} વર્ષ\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"માં\";\r\n    } else {\r\n      return result + \" પહેલાં\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n//Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM, y\", // CLDR #1825\r\n  long: \"d MMMM, y\", // CLDR #1826\r\n  medium: \"d MMM, y\", // CLDR #1827\r\n  short: \"d/M/yy\", // CLDR #1828\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"hh:mm:ss a zzzz\", // CLDR #1829\r\n  long: \"hh:mm:ss a z\", // CLDR #1830\r\n  medium: \"hh:mm:ss a\", // CLDR #1831\r\n  short: \"hh:mm a\", // CLDR #1832\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\", // CLDR #1833\r\n  long: \"{{date}} {{time}}\", // CLDR #1834\r\n  medium: \"{{date}} {{time}}\", // CLDR #1835\r\n  short: \"{{date}} {{time}}\", // CLDR #1836\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: \"'પાછલા' eeee p\", // CLDR #1384\r\n  yesterday: \"'ગઈકાલે' p\", // CLDR #1409\r\n  today: \"'આજે' p\", // CLDR #1410\r\n  tomorrow: \"'આવતીકાલે' p\", // CLDR #1411\r\n  nextWeek: \"eeee p\", // CLDR #1386\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n// #1621 - #1630\r\nconst eraValues = {\r\n  narrow: [\"ઈસપૂ\", \"ઈસ\"],\r\n  abbreviated: [\"ઈ.સ.પૂર્વે\", \"ઈ.સ.\"],\r\n  wide: [\"ઈસવીસન પૂર્વે\", \"ઈસવીસન\"],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n// #1631 - #1654\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1લો ત્રિમાસ\", \"2જો ત્રિમાસ\", \"3જો ત્રિમાસ\", \"4થો ત્રિમાસ\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n// #1655 - #1726\r\nconst monthValues = {\r\n  narrow: [\"જા\", \"ફે\", \"મા\", \"એ\", \"મે\", \"જૂ\", \"જુ\", \"ઓ\", \"સ\", \"ઓ\", \"ન\", \"ડિ\"],\r\n\r\n  abbreviated: [\r\n    \"જાન્યુ\",\r\n    \"ફેબ્રુ\",\r\n    \"માર્ચ\",\r\n    \"એપ્રિલ\",\r\n    \"મે\",\r\n    \"જૂન\",\r\n    \"જુલાઈ\",\r\n    \"ઑગસ્ટ\",\r\n    \"સપ્ટે\",\r\n    \"ઓક્ટો\",\r\n    \"નવે\",\r\n    \"ડિસે\",\r\n  ],\r\n\r\n  wide: [\r\n    \"જાન્યુઆરી\",\r\n    \"ફેબ્રુઆરી\",\r\n    \"માર્ચ\",\r\n    \"એપ્રિલ\",\r\n    \"મે\",\r\n    \"જૂન\",\r\n    \"જુલાઇ\",\r\n    \"ઓગસ્ટ\",\r\n    \"સપ્ટેમ્બર\",\r\n    \"ઓક્ટોબર\",\r\n    \"નવેમ્બર\",\r\n    \"ડિસેમ્બર\",\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n// #1727 - #1768\r\nconst dayValues = {\r\n  narrow: [\"ર\", \"સો\", \"મં\", \"બુ\", \"ગુ\", \"શુ\", \"શ\"],\r\n  short: [\"ર\", \"સો\", \"મં\", \"બુ\", \"ગુ\", \"શુ\", \"શ\"],\r\n  abbreviated: [\"રવિ\", \"સોમ\", \"મંગળ\", \"બુધ\", \"ગુરુ\", \"શુક્ર\", \"શનિ\"],\r\n  wide: [\r\n    \"રવિવાર\" /* Sunday */,\r\n    \"સોમવાર\" /* Monday */,\r\n    \"મંગળવાર\" /* Tuesday */,\r\n    \"બુધવાર\" /* Wednesday */,\r\n    \"ગુરુવાર\" /* Thursday */,\r\n    \"શુક્રવાર\" /* Friday */,\r\n    \"શનિવાર\" /* Saturday */,\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/gu.html\r\n// #1783 - #1824\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"મ.રાત્રિ\",\r\n    noon: \"બ.\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"​મધ્યરાત્રિ\",\r\n    noon: \"બપોરે\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"​મધ્યરાત્રિ\",\r\n    noon: \"બપોરે\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"મ.રાત્રિ\",\r\n    noon: \"બપોરે\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"મધ્યરાત્રિ\",\r\n    noon: \"બપોરે\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"​મધ્યરાત્રિ\",\r\n    noon: \"બપોરે\",\r\n    morning: \"સવારે\",\r\n    afternoon: \"બપોરે\",\r\n    evening: \"સાંજે\",\r\n    night: \"રાત્રે\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(લ|જ|થ|ઠ્ઠ|મ)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ઈસપૂ|ઈસ)/i,\r\n  abbreviated: /^(ઈ\\.સ\\.પૂર્વે|ઈ\\.સ\\.)/i,\r\n  wide: /^(ઈસવીસન\\sપૂર્વે|ઈસવીસન)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ઈસપૂ/i, /^ઈસ/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](લો|જો|થો)? ત્રિમાસ/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  // eslint-disable-next-line no-misleading-character-class\r\n  narrow: /^[જાફેમાએમેજૂજુઓસઓનડિ]/i,\r\n  abbreviated:\r\n    /^(જાન્યુ|ફેબ્રુ|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટે|ઓક્ટો|નવે|ડિસે)/i,\r\n  wide: /^(જાન્યુઆરી|ફેબ્રુઆરી|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઇ|ઓગસ્ટ|સપ્ટેમ્બર|ઓક્ટોબર|નવેમ્બર|ડિસેમ્બર)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^જા/i,\r\n    /^ફે/i,\r\n    /^મા/i,\r\n    /^એ/i,\r\n    /^મે/i,\r\n    /^જૂ/i,\r\n    /^જુ/i,\r\n    /^ઑગ/i,\r\n    /^સ/i,\r\n    /^ઓક્ટો/i,\r\n    /^ન/i,\r\n    /^ડિ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^જા/i,\r\n    /^ફે/i,\r\n    /^મા/i,\r\n    /^એ/i,\r\n    /^મે/i,\r\n    /^જૂ/i,\r\n    /^જુ/i,\r\n    /^ઑગ/i,\r\n    /^સ/i,\r\n    /^ઓક્ટો/i,\r\n    /^ન/i,\r\n    /^ડિ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,\r\n  short: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i,\r\n  abbreviated: /^(રવિ|સોમ|મંગળ|બુધ|ગુરુ|શુક્ર|શનિ)/i,\r\n  wide: /^(રવિવાર|સોમવાર|મંગળવાર|બુધવાર|ગુરુવાર|શુક્રવાર|શનિવાર)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i],\r\n  any: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|મ\\.?|સ|બ|સાં|રા)/i,\r\n  any: /^(a|p|મ\\.?|સ|બ|સાં|રા)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^મ\\.?/i,\r\n    noon: /^બ/i,\r\n    morning: /સ/i,\r\n    afternoon: /બ/i,\r\n    evening: /સાં/i,\r\n    night: /રા/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./gu/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./gu/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./gu/_lib/formatRelative.js\";\r\nimport { localize } from \"./gu/_lib/localize.js\";\r\nimport { match } from \"./gu/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Gujarati locale (India).\r\n * @language Gujarati\r\n * @iso-639-2 guj\r\n * @author Manaday Mavani [@ManadayM](https://github.com/manadaym)\r\n */\r\nexport const gu = {\r\n  code: \"gu\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default gu;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"פחות משנייה\",\r\n    two: \"פחות משתי שניות\",\r\n    other: \"פחות מ־{{count}} שניות\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"שנייה\",\r\n    two: \"שתי שניות\",\r\n    other: \"{{count}} שניות\",\r\n  },\r\n\r\n  halfAMinute: \"חצי דקה\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"פחות מדקה\",\r\n    two: \"פחות משתי דקות\",\r\n    other: \"פחות מ־{{count}} דקות\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"דקה\",\r\n    two: \"שתי דקות\",\r\n    other: \"{{count}} דקות\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"כשעה\",\r\n    two: \"כשעתיים\",\r\n    other: \"כ־{{count}} שעות\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"שעה\",\r\n    two: \"שעתיים\",\r\n    other: \"{{count}} שעות\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"יום\",\r\n    two: \"יומיים\",\r\n    other: \"{{count}} ימים\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"כשבוע\",\r\n    two: \"כשבועיים\",\r\n    other: \"כ־{{count}} שבועות\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"שבוע\",\r\n    two: \"שבועיים\",\r\n    other: \"{{count}} שבועות\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"כחודש\",\r\n    two: \"כחודשיים\",\r\n    other: \"כ־{{count}} חודשים\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"חודש\",\r\n    two: \"חודשיים\",\r\n    other: \"{{count}} חודשים\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"כשנה\",\r\n    two: \"כשנתיים\",\r\n    other: \"כ־{{count}} שנים\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"שנה\",\r\n    two: \"שנתיים\",\r\n    other: \"{{count}} שנים\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"יותר משנה\",\r\n    two: \"יותר משנתיים\",\r\n    other: \"יותר מ־{{count}} שנים\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"כמעט שנה\",\r\n    two: \"כמעט שנתיים\",\r\n    other: \"כמעט {{count}} שנים\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  // Return word instead of `in one day` or `one day ago`\r\n  if (token === \"xDays\" && options?.addSuffix && count <= 2) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return count === 1 ? \"מחר\" : \"מחרתיים\";\r\n    }\r\n\r\n    return count === 1 ? \"אתמול\" : \"שלשום\";\r\n  }\r\n\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2) {\r\n    result = tokenValue.two;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"בעוד \" + result;\r\n    } else {\r\n      return \"לפני \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d בMMMM y\",\r\n  long: \"d בMMMM y\",\r\n  medium: \"d בMMM y\",\r\n  short: \"d.M.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'בשעה' {{time}}\",\r\n  long: \"{{date}} 'בשעה' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'שעבר בשעה' p\",\r\n  yesterday: \"'אתמול בשעה' p\",\r\n  today: \"'היום בשעה' p\",\r\n  tomorrow: \"'מחר בשעה' p\",\r\n  nextWeek: \"eeee 'בשעה' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"לפנה״ס\", \"לספירה\"],\r\n  abbreviated: [\"לפנה״ס\", \"לספירה\"],\r\n  wide: [\"לפני הספירה\", \"לספירה\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"רבעון 1\", \"רבעון 2\", \"רבעון 3\", \"רבעון 4\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\r\n\r\n  abbreviated: [\r\n    \"ינו׳\",\r\n    \"פבר׳\",\r\n    \"מרץ\",\r\n    \"אפר׳\",\r\n    \"מאי\",\r\n    \"יוני\",\r\n    \"יולי\",\r\n    \"אוג׳\",\r\n    \"ספט׳\",\r\n    \"אוק׳\",\r\n    \"נוב׳\",\r\n    \"דצמ׳\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ינואר\",\r\n    \"פברואר\",\r\n    \"מרץ\",\r\n    \"אפריל\",\r\n    \"מאי\",\r\n    \"יוני\",\r\n    \"יולי\",\r\n    \"אוגוסט\",\r\n    \"ספטמבר\",\r\n    \"אוקטובר\",\r\n    \"נובמבר\",\r\n    \"דצמבר\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\r\n  short: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\r\n  abbreviated: [\r\n    \"יום א׳\",\r\n    \"יום ב׳\",\r\n    \"יום ג׳\",\r\n    \"יום ד׳\",\r\n    \"יום ה׳\",\r\n    \"יום ו׳\",\r\n    \"שבת\",\r\n  ],\r\n\r\n  wide: [\r\n    \"יום ראשון\",\r\n    \"יום שני\",\r\n    \"יום שלישי\",\r\n    \"יום רביעי\",\r\n    \"יום חמישי\",\r\n    \"יום שישי\",\r\n    \"יום שבת\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בוקר\",\r\n    afternoon: \"אחר הצהריים\",\r\n    evening: \"ערב\",\r\n    night: \"לילה\",\r\n  },\r\n  abbreviated: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בוקר\",\r\n    afternoon: \"אחר הצהריים\",\r\n    evening: \"ערב\",\r\n    night: \"לילה\",\r\n  },\r\n  wide: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בוקר\",\r\n    afternoon: \"אחר הצהריים\",\r\n    evening: \"ערב\",\r\n    night: \"לילה\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בבוקר\",\r\n    afternoon: \"בצהריים\",\r\n    evening: \"בערב\",\r\n    night: \"בלילה\",\r\n  },\r\n  abbreviated: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בבוקר\",\r\n    afternoon: \"אחר הצהריים\",\r\n    evening: \"בערב\",\r\n    night: \"בלילה\",\r\n  },\r\n  wide: {\r\n    am: \"לפנה״צ\",\r\n    pm: \"אחה״צ\",\r\n    midnight: \"חצות\",\r\n    noon: \"צהריים\",\r\n    morning: \"בבוקר\",\r\n    afternoon: \"אחר הצהריים\",\r\n    evening: \"בערב\",\r\n    night: \"בלילה\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  // We only show words till 10\r\n  if (number <= 0 || number > 10) return String(number);\r\n\r\n  const unit = String(options?.unit);\r\n\r\n  const isFemale = [\"year\", \"hour\", \"minute\", \"second\"].indexOf(unit) >= 0;\r\n\r\n  const male = [\r\n    \"ראשון\",\r\n    \"שני\",\r\n    \"שלישי\",\r\n    \"רביעי\",\r\n    \"חמישי\",\r\n    \"שישי\",\r\n    \"שביעי\",\r\n    \"שמיני\",\r\n    \"תשיעי\",\r\n    \"עשירי\",\r\n  ];\r\n\r\n  const female = [\r\n    \"ראשונה\",\r\n    \"שנייה\",\r\n    \"שלישית\",\r\n    \"רביעית\",\r\n    \"חמישית\",\r\n    \"שישית\",\r\n    \"שביעית\",\r\n    \"שמינית\",\r\n    \"תשיעית\",\r\n    \"עשירית\",\r\n  ];\r\n\r\n  const index = number - 1;\r\n  return isFemale ? female[index] : male[index];\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern =\r\n  /^(\\d+|(ראשון|שני|שלישי|רביעי|חמישי|שישי|שביעי|שמיני|תשיעי|עשירי|ראשונה|שנייה|שלישית|רביעית|חמישית|שישית|שביעית|שמינית|תשיעית|עשירית))/i;\r\nconst parseOrdinalNumberPattern = /^(\\d+|רא|שנ|של|רב|ח|שי|שב|שמ|ת|ע)/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^ל(ספירה|פנה״ס)/i,\r\n  abbreviated: /^ל(ספירה|פנה״ס)/i,\r\n  wide: /^ל(פני ה)?ספירה/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^לפ/i, /^לס/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^רבעון [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^\\d+/i,\r\n  abbreviated: /^(ינו|פבר|מרץ|אפר|מאי|יוני|יולי|אוג|ספט|אוק|נוב|דצמ)׳?/i,\r\n  wide: /^(ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^1$/i,\r\n    /^2/i,\r\n    /^3/i,\r\n    /^4/i,\r\n    /^5/i,\r\n    /^6/i,\r\n    /^7/i,\r\n    /^8/i,\r\n    /^9/i,\r\n    /^10/i,\r\n    /^11/i,\r\n    /^12/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ינ/i,\r\n    /^פ/i,\r\n    /^מר/i,\r\n    /^אפ/i,\r\n    /^מא/i,\r\n    /^יונ/i,\r\n    /^יול/i,\r\n    /^אוג/i,\r\n    /^ס/i,\r\n    /^אוק/i,\r\n    /^נ/i,\r\n    /^ד/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[אבגדהוש]׳/i,\r\n  short: /^[אבגדהוש]׳/i,\r\n  abbreviated: /^(שבת|יום (א|ב|ג|ד|ה|ו)׳)/i,\r\n  wide: /^יום (ראשון|שני|שלישי|רביעי|חמישי|שישי|שבת)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  abbreviated: [/א׳$/i, /ב׳$/i, /ג׳$/i, /ד׳$/i, /ה׳$/i, /ו׳$/i, /^ש/i],\r\n  wide: [/ן$/i, /ני$/i, /לישי$/i, /עי$/i, /מישי$/i, /שישי$/i, /ת$/i],\r\n  any: [/^א/i, /^ב/i, /^ג/i, /^ד/i, /^ה/i, /^ו/i, /^ש/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(אחר ה|ב)?(חצות|צהריים|בוקר|ערב|לילה|אחה״צ|לפנה״צ)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^לפ/i,\r\n    pm: /^אחה/i,\r\n    midnight: /^ח/i,\r\n    noon: /^צ/i,\r\n    morning: /בוקר/i,\r\n    afternoon: /בצ|אחר/i,\r\n    evening: /ערב/i,\r\n    night: /לילה/i,\r\n  },\r\n};\r\n\r\nconst ordinalName = [\"רא\", \"שנ\", \"של\", \"רב\", \"ח\", \"שי\", \"שב\", \"שמ\", \"ת\", \"ע\"];\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => {\r\n      const number = parseInt(value, 10);\r\n      return isNaN(number) ? ordinalName.indexOf(value) + 1 : number;\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./he/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./he/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./he/_lib/formatRelative.js\";\r\nimport { localize } from \"./he/_lib/localize.js\";\r\nimport { match } from \"./he/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Hebrew locale.\r\n * @language Hebrew\r\n * @iso-639-2 heb\r\n * @author Nir Lahad [@nirlah](https://github.com/nirlah)\r\n */\r\nexport const he = {\r\n  code: \"he\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default he;\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst numberValues = {\r\n  locale: {\r\n    1: \"१\",\r\n    2: \"२\",\r\n    3: \"३\",\r\n    4: \"४\",\r\n    5: \"५\",\r\n    6: \"६\",\r\n    7: \"७\",\r\n    8: \"८\",\r\n    9: \"९\",\r\n    0: \"०\",\r\n  },\r\n  number: {\r\n    \"१\": \"1\",\r\n    \"२\": \"2\",\r\n    \"३\": \"3\",\r\n    \"४\": \"4\",\r\n    \"५\": \"5\",\r\n    \"६\": \"6\",\r\n    \"७\": \"7\",\r\n    \"८\": \"8\",\r\n    \"९\": \"9\",\r\n    \"०\": \"0\",\r\n  },\r\n};\r\n\r\n// CLDR #1585 - #1592\r\nconst eraValues = {\r\n  narrow: [\"ईसा-पूर्व\", \"ईस्वी\"],\r\n  abbreviated: [\"ईसा-पूर्व\", \"ईस्वी\"],\r\n  wide: [\"ईसा-पूर्व\", \"ईसवी सन\"],\r\n};\r\n\r\n// CLDR #1593 - #1616\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ति1\", \"ति2\", \"ति3\", \"ति4\"],\r\n  wide: [\"पहली तिमाही\", \"दूसरी तिमाही\", \"तीसरी तिमाही\", \"चौथी तिमाही\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\n// https://www.unicode.org/cldr/charts/32/summary/hi.html\r\n// CLDR #1617 - #1688\r\nconst monthValues = {\r\n  narrow: [\r\n    \"ज\",\r\n    \"फ़\",\r\n    \"मा\",\r\n    \"अ\",\r\n    \"मई\",\r\n    \"जू\",\r\n    \"जु\",\r\n    \"अग\",\r\n    \"सि\",\r\n    \"अक्टू\",\r\n    \"न\",\r\n    \"दि\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"जन\",\r\n    \"फ़र\",\r\n    \"मार्च\",\r\n    \"अप्रैल\",\r\n    \"मई\",\r\n    \"जून\",\r\n    \"जुल\",\r\n    \"अग\",\r\n    \"सित\",\r\n    \"अक्टू\",\r\n    \"नव\",\r\n    \"दिस\",\r\n  ],\r\n\r\n  wide: [\r\n    \"जनवरी\",\r\n    \"फ़रवरी\",\r\n    \"मार्च\",\r\n    \"अप्रैल\",\r\n    \"मई\",\r\n    \"जून\",\r\n    \"जुलाई\",\r\n    \"अगस्त\",\r\n    \"सितंबर\",\r\n    \"अक्टूबर\",\r\n    \"नवंबर\",\r\n    \"दिसंबर\",\r\n  ],\r\n};\r\n\r\n// CLDR #1689 - #1744\r\nconst dayValues = {\r\n  narrow: [\"र\", \"सो\", \"मं\", \"बु\", \"गु\", \"शु\", \"श\"],\r\n  short: [\"र\", \"सो\", \"मं\", \"बु\", \"गु\", \"शु\", \"श\"],\r\n  abbreviated: [\"रवि\", \"सोम\", \"मंगल\", \"बुध\", \"गुरु\", \"शुक्र\", \"शनि\"],\r\n  wide: [\r\n    \"रविवार\",\r\n    \"सोमवार\",\r\n    \"मंगलवार\",\r\n    \"बुधवार\",\r\n    \"गुरुवार\",\r\n    \"शुक्रवार\",\r\n    \"शनिवार\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n  abbreviated: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n  wide: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n  abbreviated: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n  wide: {\r\n    am: \"पूर्वाह्न\",\r\n    pm: \"अपराह्न\",\r\n    midnight: \"मध्यरात्रि\",\r\n    noon: \"दोपहर\",\r\n    morning: \"सुबह\",\r\n    afternoon: \"दोपहर\",\r\n    evening: \"शाम\",\r\n    night: \"रात\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return numberToLocale(number);\r\n};\r\n\r\nexport function localeToNumber(locale) {\r\n  const enNumber = locale.toString().replace(/[१२३४५६७८९०]/g, function (match) {\r\n    return numberValues.number[match];\r\n  });\r\n  return Number(enNumber);\r\n}\r\n\r\nexport function numberToLocale(enNumber) {\r\n  return enNumber.toString().replace(/\\d/g, function (match) {\r\n    return numberValues.locale[match];\r\n  });\r\n}\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { numberToLocale } from \"./localize.js\";\r\n\r\n// Source: https://www.unicode.org/cldr/charts/32/summary/hi.html\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"१ सेकंड से कम\", // CLDR #1310\r\n    other: \"{{count}} सेकंड से कम\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"१ सेकंड\",\r\n    other: \"{{count}} सेकंड\",\r\n  },\r\n\r\n  halfAMinute: \"आधा मिनट\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"१ मिनट से कम\",\r\n    other: \"{{count}} मिनट से कम\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"१ मिनट\", // CLDR #1307\r\n    other: \"{{count}} मिनट\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"लगभग १ घंटा\",\r\n    other: \"लगभग {{count}} घंटे\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"१ घंटा\", // CLDR #1304\r\n    other: \"{{count}} घंटे\", // CLDR #4467\r\n  },\r\n\r\n  xDays: {\r\n    one: \"१ दिन\", // CLDR #1286\r\n    other: \"{{count}} दिन\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"लगभग १ सप्ताह\",\r\n    other: \"लगभग {{count}} सप्ताह\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"१ सप्ताह\",\r\n    other: \"{{count}} सप्ताह\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"लगभग १ महीना\",\r\n    other: \"लगभग {{count}} महीने\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"१ महीना\",\r\n    other: \"{{count}} महीने\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"लगभग १ वर्ष\",\r\n    other: \"लगभग {{count}} वर्ष\", // CLDR #4823\r\n  },\r\n\r\n  xYears: {\r\n    one: \"१ वर्ष\",\r\n    other: \"{{count}} वर्ष\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"१ वर्ष से अधिक\",\r\n    other: \"{{count}} वर्ष से अधिक\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"लगभग १ वर्ष\",\r\n    other: \"लगभग {{count}} वर्ष\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", numberToLocale(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"मे \";\r\n    } else {\r\n      return result + \" पहले\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM, y\", // CLDR #1787\r\n  long: \"do MMMM, y\", // CLDR #1788\r\n  medium: \"d MMM, y\", // CLDR #1789\r\n  short: \"dd/MM/yyyy\", // CLDR #1790\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\", // CLDR #1791\r\n  long: \"h:mm:ss a z\", // CLDR #1792\r\n  medium: \"h:mm:ss a\", // CLDR #1793\r\n  short: \"h:mm a\", // CLDR #1794\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'को' {{time}}\", // CLDR #1795\r\n  long: \"{{date}} 'को' {{time}}\", // CLDR #1796\r\n  medium: \"{{date}}, {{time}}\", // CLDR #1797\r\n  short: \"{{date}}, {{time}}\", // CLDR #1798\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'पिछले' eeee p\",\r\n  yesterday: \"'कल' p\",\r\n  today: \"'आज' p\",\r\n  tomorrow: \"'कल' p\",\r\n  nextWeek: \"eeee 'को' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { localeToNumber } from \"./localize.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^[०१२३४५६७८९]+/i;\r\nconst parseOrdinalNumberPattern = /^[०१२३४५६७८९]+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ईसा-पूर्व|ईस्वी)/i,\r\n  abbreviated: /^(ईसा\\.?\\s?पूर्व\\.?|ईसा\\.?)/i,\r\n  wide: /^(ईसा-पूर्व|ईसवी पूर्व|ईसवी सन|ईसवी)/i,\r\n};\r\n\r\nconst parseEraPatterns = {\r\n  any: [/^b/i, /^(a|c)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ति[1234]/i,\r\n  wide: /^[1234](पहली|दूसरी|तीसरी|चौथी)? तिमाही/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  // eslint-disable-next-line no-misleading-character-class\r\n  narrow: /^[जफ़माअप्मईजूनजुअगसिअक्तनदि]/i,\r\n  abbreviated: /^(जन|फ़र|मार्च|अप्|मई|जून|जुल|अग|सित|अक्तू|नव|दिस)/i,\r\n  wide: /^(जनवरी|फ़रवरी|मार्च|अप्रैल|मई|जून|जुलाई|अगस्त|सितंबर|अक्तूबर|नवंबर|दिसंबर)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ज/i,\r\n    /^फ़/i,\r\n    /^मा/i,\r\n    /^अप्/i,\r\n    /^मई/i,\r\n    /^जू/i,\r\n    /^जु/i,\r\n    /^अग/i,\r\n    /^सि/i,\r\n    /^अक्तू/i,\r\n    /^न/i,\r\n    /^दि/i,\r\n  ],\r\n\r\n  any: [\r\n    /^जन/i,\r\n    /^फ़/i,\r\n    /^मा/i,\r\n    /^अप्/i,\r\n    /^मई/i,\r\n    /^जू/i,\r\n    /^जु/i,\r\n    /^अग/i,\r\n    /^सि/i,\r\n    /^अक्तू/i,\r\n    /^नव/i,\r\n    /^दिस/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  // eslint-disable-next-line no-misleading-character-class\r\n  narrow: /^[रविसोममंगलबुधगुरुशुक्रशनि]/i,\r\n  short: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,\r\n  abbreviated: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i,\r\n  wide: /^(रविवार|सोमवार|मंगलवार|बुधवार|गुरुवार|शुक्रवार|शनिवार)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i],\r\n\r\n  any: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(पू|अ|म|द.\\?|सु|दो|शा|रा)/i,\r\n  any: /^(पूर्वाह्न|अपराह्न|म|द.\\?|सु|दो|शा|रा)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^पूर्वाह्न/i,\r\n    pm: /^अपराह्न/i,\r\n    midnight: /^मध्य/i,\r\n    noon: /^दो/i,\r\n    morning: /सु/i,\r\n    afternoon: /दो/i,\r\n    evening: /शा/i,\r\n    night: /रा/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: localeToNumber,\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./hi/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./hi/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./hi/_lib/formatRelative.js\";\r\nimport { localize } from \"./hi/_lib/localize.js\";\r\nimport { match } from \"./hi/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Hindi locale (India).\r\n * @language Hindi\r\n * @iso-639-2 hin\r\n * @author Mukesh Mandiwal [@mukeshmandiwal](https://github.com/mukeshmandiwal)\r\n */\r\nexport const hi = {\r\n  code: \"hi\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default hi;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      standalone: \"manje od 1 sekunde\",\r\n      withPrepositionAgo: \"manje od 1 sekunde\",\r\n      withPrepositionIn: \"manje od 1 sekundu\",\r\n    },\r\n    dual: \"manje od {{count}} sekunde\",\r\n    other: \"manje od {{count}} sekundi\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      standalone: \"1 sekunda\",\r\n      withPrepositionAgo: \"1 sekunde\",\r\n      withPrepositionIn: \"1 sekundu\",\r\n    },\r\n    dual: \"{{count}} sekunde\",\r\n    other: \"{{count}} sekundi\",\r\n  },\r\n\r\n  halfAMinute: \"pola minute\",\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      standalone: \"manje od 1 minute\",\r\n      withPrepositionAgo: \"manje od 1 minute\",\r\n      withPrepositionIn: \"manje od 1 minutu\",\r\n    },\r\n    dual: \"manje od {{count}} minute\",\r\n    other: \"manje od {{count}} minuta\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      standalone: \"1 minuta\",\r\n      withPrepositionAgo: \"1 minute\",\r\n      withPrepositionIn: \"1 minutu\",\r\n    },\r\n    dual: \"{{count}} minute\",\r\n    other: \"{{count}} minuta\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      standalone: \"oko 1 sat\",\r\n      withPrepositionAgo: \"oko 1 sat\",\r\n      withPrepositionIn: \"oko 1 sat\",\r\n    },\r\n    dual: \"oko {{count}} sata\",\r\n    other: \"oko {{count}} sati\",\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      standalone: \"1 sat\",\r\n      withPrepositionAgo: \"1 sat\",\r\n      withPrepositionIn: \"1 sat\",\r\n    },\r\n    dual: \"{{count}} sata\",\r\n    other: \"{{count}} sati\",\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      standalone: \"1 dan\",\r\n      withPrepositionAgo: \"1 dan\",\r\n      withPrepositionIn: \"1 dan\",\r\n    },\r\n    dual: \"{{count}} dana\",\r\n    other: \"{{count}} dana\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      standalone: \"oko 1 tjedan\",\r\n      withPrepositionAgo: \"oko 1 tjedan\",\r\n      withPrepositionIn: \"oko 1 tjedan\",\r\n    },\r\n    dual: \"oko {{count}} tjedna\",\r\n    other: \"oko {{count}} tjedana\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      standalone: \"1 tjedan\",\r\n      withPrepositionAgo: \"1 tjedan\",\r\n      withPrepositionIn: \"1 tjedan\",\r\n    },\r\n    dual: \"{{count}} tjedna\",\r\n    other: \"{{count}} tjedana\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      standalone: \"oko 1 mjesec\",\r\n      withPrepositionAgo: \"oko 1 mjesec\",\r\n      withPrepositionIn: \"oko 1 mjesec\",\r\n    },\r\n    dual: \"oko {{count}} mjeseca\",\r\n    other: \"oko {{count}} mjeseci\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      standalone: \"1 mjesec\",\r\n      withPrepositionAgo: \"1 mjesec\",\r\n      withPrepositionIn: \"1 mjesec\",\r\n    },\r\n    dual: \"{{count}} mjeseca\",\r\n    other: \"{{count}} mjeseci\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      standalone: \"oko 1 godinu\",\r\n      withPrepositionAgo: \"oko 1 godinu\",\r\n      withPrepositionIn: \"oko 1 godinu\",\r\n    },\r\n    dual: \"oko {{count}} godine\",\r\n    other: \"oko {{count}} godina\",\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      standalone: \"1 godina\",\r\n      withPrepositionAgo: \"1 godine\",\r\n      withPrepositionIn: \"1 godinu\",\r\n    },\r\n    dual: \"{{count}} godine\",\r\n    other: \"{{count}} godina\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      standalone: \"preko 1 godinu\",\r\n      withPrepositionAgo: \"preko 1 godinu\",\r\n      withPrepositionIn: \"preko 1 godinu\",\r\n    },\r\n    dual: \"preko {{count}} godine\",\r\n    other: \"preko {{count}} godina\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      standalone: \"gotovo 1 godinu\",\r\n      withPrepositionAgo: \"gotovo 1 godinu\",\r\n      withPrepositionIn: \"gotovo 1 godinu\",\r\n    },\r\n    dual: \"gotovo {{count}} godine\",\r\n    other: \"gotovo {{count}} godina\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        result = tokenValue.one.withPrepositionIn;\r\n      } else {\r\n        result = tokenValue.one.withPrepositionAgo;\r\n      }\r\n    } else {\r\n      result = tokenValue.one.standalone;\r\n    }\r\n  } else if (\r\n    count % 10 > 1 &&\r\n    count % 10 < 5 && // if last digit is between 2 and 4\r\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\r\n  ) {\r\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"za \" + result;\r\n    } else {\r\n      return \"prije \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM y.\",\r\n  long: \"d. MMMM y.\",\r\n  medium: \"d. MMM y.\",\r\n  short: \"dd. MM. y.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss (zzzz)\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'u' {{time}}\",\r\n  long: \"{{date}} 'u' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'prošlu nedjelju u' p\";\r\n      case 3:\r\n        return \"'prošlu srijedu u' p\";\r\n      case 6:\r\n        return \"'prošlu subotu u' p\";\r\n      default:\r\n        return \"'prošli' EEEE 'u' p\";\r\n    }\r\n  },\r\n  yesterday: \"'jučer u' p\",\r\n  today: \"'danas u' p\",\r\n  tomorrow: \"'sutra u' p\",\r\n  nextWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'iduću nedjelju u' p\";\r\n      case 3:\r\n        return \"'iduću srijedu u' p\";\r\n      case 6:\r\n        return \"'iduću subotu u' p\";\r\n      default:\r\n        return \"'prošli' EEEE 'u' p\";\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"pr.n.e.\", \"AD\"],\r\n  abbreviated: [\"pr. Kr.\", \"po. Kr.\"],\r\n  wide: [\"Prije Krista\", \"Poslije Krista\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\r\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"sij\",\r\n    \"velj\",\r\n    \"ožu\",\r\n    \"tra\",\r\n    \"svi\",\r\n    \"lip\",\r\n    \"srp\",\r\n    \"kol\",\r\n    \"ruj\",\r\n    \"lis\",\r\n    \"stu\",\r\n    \"pro\",\r\n  ],\r\n\r\n  wide: [\r\n    \"siječanj\",\r\n    \"veljača\",\r\n    \"ožujak\",\r\n    \"travanj\",\r\n    \"svibanj\",\r\n    \"lipanj\",\r\n    \"srpanj\",\r\n    \"kolovoz\",\r\n    \"rujan\",\r\n    \"listopad\",\r\n    \"studeni\",\r\n    \"prosinac\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"sij\",\r\n    \"velj\",\r\n    \"ožu\",\r\n    \"tra\",\r\n    \"svi\",\r\n    \"lip\",\r\n    \"srp\",\r\n    \"kol\",\r\n    \"ruj\",\r\n    \"lis\",\r\n    \"stu\",\r\n    \"pro\",\r\n  ],\r\n\r\n  wide: [\r\n    \"siječnja\",\r\n    \"veljače\",\r\n    \"ožujka\",\r\n    \"travnja\",\r\n    \"svibnja\",\r\n    \"lipnja\",\r\n    \"srpnja\",\r\n    \"kolovoza\",\r\n    \"rujna\",\r\n    \"listopada\",\r\n    \"studenog\",\r\n    \"prosinca\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"Č\", \"P\", \"S\"],\r\n  short: [\"ned\", \"pon\", \"uto\", \"sri\", \"čet\", \"pet\", \"sub\"],\r\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sri\", \"čet\", \"pet\", \"sub\"],\r\n  wide: [\r\n    \"nedjelja\",\r\n    \"ponedjeljak\",\r\n    \"utorak\",\r\n    \"srijeda\",\r\n    \"četvrtak\",\r\n    \"petak\",\r\n    \"subota\",\r\n  ],\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"popodne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"popodne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"poslije podne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"popodne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"popodne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutro\",\r\n    afternoon: \"poslije podne\",\r\n    evening: \"navečer\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\r\n  abbreviated: /^(pr\\.\\s?Kr\\.|po\\.\\s?Kr\\.)/i,\r\n  wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^pr/i, /^(po|nova)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\r\n  wide: /^[1234]\\. kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(10|11|12|[123456789])\\./i,\r\n  abbreviated: /^(sij|velj|(ožu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,\r\n  wide: /^((siječanj|siječnja|sijecanj|sijecnja)|(veljača|veljače|veljaca|veljace)|(ožujak|ožujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /1/i,\r\n    /2/i,\r\n    /3/i,\r\n    /4/i,\r\n    /5/i,\r\n    /6/i,\r\n    /7/i,\r\n    /8/i,\r\n    /9/i,\r\n    /10/i,\r\n    /11/i,\r\n    /12/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^sij/i,\r\n    /^velj/i,\r\n    /^(ožu|ozu)/i,\r\n    /^tra/i,\r\n    /^svi/i,\r\n    /^lip/i,\r\n    /^srp/i,\r\n    /^kol/i,\r\n    /^ruj/i,\r\n    /^lis/i,\r\n    /^stu/i,\r\n    /^pro/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^sij/i,\r\n    /^velj/i,\r\n    /^(ožu|ozu)/i,\r\n    /^tra/i,\r\n    /^svi/i,\r\n    /^lip/i,\r\n    /^srp/i,\r\n    /^kol/i,\r\n    /^ruj/i,\r\n    /^lis/i,\r\n    /^stu/i,\r\n    /^pro/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npusčc]/i,\r\n  short: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,\r\n  abbreviated: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i,\r\n  wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\r\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|ponoc|ponoć|(po)?podne|navecer|navečer|noću|poslije podne|ujutro)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^pono/i,\r\n    noon: /^pod/i,\r\n    morning: /jutro/i,\r\n    afternoon: /(poslije\\s|po)+podne/i,\r\n    evening: /(navece|naveče)/i,\r\n    night: /(nocu|noću)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./hr/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./hr/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./hr/_lib/formatRelative.js\";\r\nimport { localize } from \"./hr/_lib/localize.js\";\r\nimport { match } from \"./hr/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Croatian locale.\r\n * @language Croatian\r\n * @iso-639-2 hrv\r\n * @author Matija Marohnić [@silvenon](https://github.com/silvenon)\r\n * @author Manico [@manico](https://github.com/manico)\r\n * @author Ivan Jeržabek [@jerzabek](https://github.com/jerzabek)\r\n */\r\nexport const hr = {\r\n  code: \"hr\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default hr;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mwens pase yon segond\",\r\n    other: \"mwens pase {{count}} segond\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segond\",\r\n    other: \"{{count}} segond\",\r\n  },\r\n\r\n  halfAMinute: \"30 segond\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mwens pase yon minit\",\r\n    other: \"mwens pase {{count}} minit\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minit\",\r\n    other: \"{{count}} minit\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"anviwon inè\",\r\n    other: \"anviwon {{count}} è\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 lè\",\r\n    other: \"{{count}} lè\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 jou\",\r\n    other: \"{{count}} jou\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"anviwon 1 semèn\",\r\n    other: \"anviwon {{count}} semèn\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semèn\",\r\n    other: \"{{count}} semèn\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"anviwon 1 mwa\",\r\n    other: \"anviwon {{count}} mwa\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mwa\",\r\n    other: \"{{count}} mwa\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"anviwon 1 an\",\r\n    other: \"anviwon {{count}} an\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 an\",\r\n    other: \"{{count}} an\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"plis pase 1 an\",\r\n    other: \"plis pase {{count}} an\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"prèske 1 an\",\r\n    other: \"prèske {{count}} an\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"nan \" + result;\r\n    } else {\r\n      return \"sa fè \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'nan lè' {{time}}\",\r\n  long: \"{{date}} 'nan lè' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'pase nan lè' p\",\r\n  yesterday: \"'yè nan lè' p\",\r\n  today: \"'jodi a' p\",\r\n  tomorrow: \"'demen nan lè' p'\",\r\n  nextWeek: \"eeee 'pwochen nan lè' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"av. J.-K\", \"ap. J.-K\"],\r\n  abbreviated: [\"av. J.-K\", \"ap. J.-K\"],\r\n  wide: [\"anvan Jezi Kris\", \"apre Jezi Kris\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  abbreviated: [\"1ye trim.\", \"2yèm trim.\", \"3yèm trim.\", \"4yèm trim.\"],\r\n  wide: [\"1ye trimès\", \"2yèm trimès\", \"3yèm trimès\", \"4yèm trimès\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"O\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"janv.\",\r\n    \"fevr.\",\r\n    \"mas\",\r\n    \"avr.\",\r\n    \"me\",\r\n    \"jen\",\r\n    \"jiyè\",\r\n    \"out\",\r\n    \"sept.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janvye\",\r\n    \"fevrye\",\r\n    \"mas\",\r\n    \"avril\",\r\n    \"me\",\r\n    \"jen\",\r\n    \"jiyè\",\r\n    \"out\",\r\n    \"septanm\",\r\n    \"oktòb\",\r\n    \"novanm\",\r\n    \"desanm\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\r\n  short: [\"di\", \"le\", \"ma\", \"mè\", \"je\", \"va\", \"sa\"],\r\n  abbreviated: [\"dim.\", \"len.\", \"mad.\", \"mèk.\", \"jed.\", \"van.\", \"sam.\"],\r\n\r\n  wide: [\"dimanch\", \"lendi\", \"madi\", \"mèkredi\", \"jedi\", \"vandredi\", \"samdi\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minwit\",\r\n    noon: \"midi\",\r\n    morning: \"mat.\",\r\n    afternoon: \"ap.m.\",\r\n    evening: \"swa\",\r\n    night: \"mat.\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minwit\",\r\n    noon: \"midi\",\r\n    morning: \"maten\",\r\n    afternoon: \"aprèmidi\",\r\n    evening: \"swa\",\r\n    night: \"maten\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"minwit\",\r\n    noon: \"midi\",\r\n    morning: \"nan maten\",\r\n    afternoon: \"nan aprèmidi\",\r\n    evening: \"nan aswè\",\r\n    night: \"nan maten\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  if (number === 0) return String(number);\r\n\r\n  const suffix = number === 1 ? \"ye\" : \"yèm\";\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ye|yèm)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(av\\.J\\.K|ap\\.J\\.K|ap\\.J\\.-K)/i,\r\n  abbreviated: /^(av\\.J\\.-K|av\\.J-K|apr\\.J\\.-K|apr\\.J-K|ap\\.J-K)/i,\r\n  wide: /^(avan Jezi Kris|apre Jezi Kris)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^av/i, /^ap/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^t[1234]/i,\r\n  wide: /^[1234](ye|yèm)? trimès/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(janv|fevr|mas|avr|me|jen|jiyè|out|sept|okt|nov|des)\\.?/i,\r\n  wide: /^(janvye|fevrye|mas|avril|me|jen|jiyè|out|septanm|oktòb|novanm|desanm)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^o/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^ma/i,\r\n    /^av/i,\r\n    /^me/i,\r\n    /^je/i,\r\n    /^ji/i,\r\n    /^ou/i,\r\n    /^s/i,\r\n    /^ok/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[lmjvsd]/i,\r\n  short: /^(di|le|ma|me|je|va|sa)/i,\r\n  abbreviated: /^(dim|len|mad|mèk|jed|van|sam)\\.?/i,\r\n  wide: /^(dimanch|lendi|madi|mèkredi|jedi|vandredi|samdi)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\r\n  any: [/^di/i, /^le/i, /^ma/i, /^mè/i, /^je/i, /^va/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|minwit|midi|mat\\.?|ap\\.?m\\.?|swa)/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|nan maten|nan aprèmidi|nan aswè)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^min/i,\r\n    noon: /^mid/i,\r\n    morning: /mat/i,\r\n    afternoon: /ap/i,\r\n    evening: /sw/i,\r\n    night: /nwit/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ht/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ht/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ht/_lib/formatRelative.js\";\r\nimport { localize } from \"./ht/_lib/localize.js\";\r\nimport { match } from \"./ht/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Haitian Creole locale.\r\n * @language Haitian Creole\r\n * @iso-639-2 hat\r\n * @author Rubens Mariuzzo [@rmariuzzo](https://github.com/rmariuzzo)\r\n * @author Watson Marcelain [@watsongm24](https://github.com/watsongm24)\r\n */\r\nexport const ht = {\r\n  code: \"ht\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ht;\r\n", "const translations = {\r\n  about: \"körülbelül\",\r\n  over: \"több mint\",\r\n  almost: \"majdnem\",\r\n  lessthan: \"kevesebb mint\",\r\n};\r\n\r\nconst withoutSuffixes = {\r\n  xseconds: \" másodperc\",\r\n  halfaminute: \"fél perc\",\r\n  xminutes: \" perc\",\r\n  xhours: \" óra\",\r\n  xdays: \" nap\",\r\n  xweeks: \" hét\",\r\n  xmonths: \" hónap\",\r\n  xyears: \" év\",\r\n};\r\n\r\nconst withSuffixes = {\r\n  xseconds: {\r\n    \"-1\": \" másodperccel ezelőtt\",\r\n    1: \" másodperc múlva\",\r\n    0: \" másodperce\",\r\n  },\r\n  halfaminute: {\r\n    \"-1\": \"fél perccel ezelőtt\",\r\n    1: \"fél perc múlva\",\r\n    0: \"fél perce\",\r\n  },\r\n  xminutes: {\r\n    \"-1\": \" perccel ezelőtt\",\r\n    1: \" perc múlva\",\r\n    0: \" perce\",\r\n  },\r\n  xhours: {\r\n    \"-1\": \" órával ezelőtt\",\r\n    1: \" óra múlva\",\r\n    0: \" órája\",\r\n  },\r\n  xdays: {\r\n    \"-1\": \" nappal ezelőtt\",\r\n    1: \" nap múlva\",\r\n    0: \" napja\",\r\n  },\r\n  xweeks: {\r\n    \"-1\": \" héttel ezelőtt\",\r\n    1: \" hét múlva\",\r\n    0: \" hete\",\r\n  },\r\n  xmonths: {\r\n    \"-1\": \" hónappal ezelőtt\",\r\n    1: \" hónap múlva\",\r\n    0: \" hónapja\",\r\n  },\r\n  xyears: {\r\n    \"-1\": \" évvel ezelőtt\",\r\n    1: \" év múlva\",\r\n    0: \" éve\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const adverb = token.match(/about|over|almost|lessthan/i);\r\n  const unit = adverb ? token.replace(adverb[0], \"\") : token;\r\n\r\n  const addSuffix = options?.addSuffix === true;\r\n  const key = unit.toLowerCase();\r\n  const comparison = options?.comparison || 0;\r\n\r\n  const translated = addSuffix\r\n    ? withSuffixes[key][comparison]\r\n    : withoutSuffixes[key];\r\n\r\n  let result = key === \"halfaminute\" ? translated : count + translated;\r\n\r\n  if (adverb) {\r\n    const adv = adverb[0].toLowerCase();\r\n    result = translations[adv] + \" \" + result;\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y. MMMM d., EEEE\",\r\n  long: \"y. MMMM d.\",\r\n  medium: \"y. MMM d.\",\r\n  short: \"y. MM. dd.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const accusativeWeekdays = [\r\n  \"vasárnap\",\r\n  \"hétfőn\",\r\n  \"kedden\",\r\n  \"szerdán\",\r\n  \"csütörtökön\",\r\n  \"pénteken\",\r\n  \"szombaton\",\r\n];\r\n\r\nfunction week(isFuture) {\r\n  return (date) => {\r\n    const weekday = accusativeWeekdays[date.getDay()];\r\n    const prefix = isFuture ? \"\" : \"'múlt' \";\r\n    return `${prefix}'${weekday}' p'-kor'`;\r\n  };\r\n}\r\nconst formatRelativeLocale = {\r\n  lastWeek: week(false),\r\n  yesterday: \"'tegnap' p'-kor'\",\r\n  today: \"'ma' p'-kor'\",\r\n  tomorrow: \"'holnap' p'-kor'\",\r\n  nextWeek: week(true),\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ie.\", \"isz.\"],\r\n  abbreviated: [\"i. e.\", \"i. sz.\"],\r\n  wide: [\"Krisztus előtt\", \"időszámításunk szerint\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\r\n  abbreviated: [\"1. n.év\", \"2. n.év\", \"3. n.év\", \"4. n.év\"],\r\n  wide: [\"1. negyedév\", \"2. negyedév\", \"3. negyedév\", \"4. negyedév\"],\r\n};\r\n\r\nconst formattingQuarterValues = {\r\n  narrow: [\"I.\", \"II.\", \"III.\", \"IV.\"],\r\n  abbreviated: [\"I. n.év\", \"II. n.év\", \"III. n.év\", \"IV. n.év\"],\r\n  wide: [\"I. negyedév\", \"II. negyedév\", \"III. negyedév\", \"IV. negyedév\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"Á\", \"M\", \"J\", \"J\", \"A\", \"Sz\", \"O\", \"N\", \"D\"],\r\n\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"febr.\",\r\n    \"márc.\",\r\n    \"ápr.\",\r\n    \"máj.\",\r\n    \"jún.\",\r\n    \"júl.\",\r\n    \"aug.\",\r\n    \"szept.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"január\",\r\n    \"február\",\r\n    \"március\",\r\n    \"április\",\r\n    \"május\",\r\n    \"június\",\r\n    \"július\",\r\n    \"augusztus\",\r\n    \"szeptember\",\r\n    \"október\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"V\", \"H\", \"K\", \"Sz\", \"Cs\", \"P\", \"Sz\"],\r\n  short: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\r\n  abbreviated: [\"V\", \"H\", \"K\", \"Sze\", \"Cs\", \"P\", \"Szo\"],\r\n  wide: [\r\n    \"vasárnap\",\r\n    \"hétfő\",\r\n    \"kedd\",\r\n    \"szerda\",\r\n    \"csütörtök\",\r\n    \"péntek\",\r\n    \"szombat\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"de.\",\r\n    pm: \"du.\",\r\n    midnight: \"éjfél\",\r\n    noon: \"dél\",\r\n    morning: \"reggel\",\r\n    afternoon: \"du.\",\r\n    evening: \"este\",\r\n    night: \"éjjel\",\r\n  },\r\n  abbreviated: {\r\n    am: \"de.\",\r\n    pm: \"du.\",\r\n    midnight: \"éjfél\",\r\n    noon: \"dél\",\r\n    morning: \"reggel\",\r\n    afternoon: \"du.\",\r\n    evening: \"este\",\r\n    night: \"éjjel\",\r\n  },\r\n  wide: {\r\n    am: \"de.\",\r\n    pm: \"du.\",\r\n    midnight: \"éjfél\",\r\n    noon: \"dél\",\r\n    morning: \"reggel\",\r\n    afternoon: \"délután\",\r\n    evening: \"este\",\r\n    night: \"éjjel\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n    formattingValues: formattingQuarterValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ie\\.|isz\\.)/i,\r\n  abbreviated: /^(i\\.\\s?e\\.?|b?\\s?c\\s?e|i\\.\\s?sz\\.?)/i,\r\n  wide: /^(Krisztus előtt|időszámításunk előtt|időszámításunk szerint|i\\. sz\\.)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/ie/i, /isz/i],\r\n  abbreviated: [/^(i\\.?\\s?e\\.?|b\\s?ce)/i, /^(i\\.?\\s?sz\\.?|c\\s?e)/i],\r\n  any: [/előtt/i, /(szerint|i. sz.)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]\\.?/i,\r\n  abbreviated: /^[1234]?\\.?\\s?n\\.év/i,\r\n  wide: /^([1234]|I|II|III|IV)?\\.?\\s?negyedév/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmaásond]|sz/i,\r\n  abbreviated:\r\n    /^(jan\\.?|febr\\.?|márc\\.?|ápr\\.?|máj\\.?|jún\\.?|júl\\.?|aug\\.?|szept\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\r\n  wide: /^(január|február|március|április|május|június|július|augusztus|szeptember|október|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a|á/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s|sz/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^már/i,\r\n    /^áp/i,\r\n    /^máj/i,\r\n    /^jún/i,\r\n    /^júl/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^([vhkpc]|sz|cs|sz)/i,\r\n  short: /^([vhkp]|sze|cs|szo)/i,\r\n  abbreviated: /^([vhkp]|sze|cs|szo)/i,\r\n  wide: /^(vasárnap|hétfő|kedd|szerda|csütörtök|péntek|szombat)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i],\r\n  any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^((de|du)\\.?|éjfél|délután|dél|reggel|este|éjjel)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^de\\.?/i,\r\n    pm: /^du\\.?/i,\r\n    midnight: /^éjf/i,\r\n    noon: /^dé/i,\r\n    morning: /reg/i,\r\n    afternoon: /^délu\\.?/i,\r\n    evening: /es/i,\r\n    night: /éjj/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./hu/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./hu/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./hu/_lib/formatRelative.js\";\r\nimport { localize } from \"./hu/_lib/localize.js\";\r\nimport { match } from \"./hu/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Hungarian locale.\r\n * @language Hungarian\r\n * @iso-639-2 hun\r\n * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)\r\n * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)\r\n * @author Zoltan Szepesi [@twodcube](https://github.com/twodcube)\r\n */\r\nexport const hu = {\r\n  code: \"hu\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default hu;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"ավելի քիչ քան 1 վայրկյան\",\r\n    other: \"ավելի քիչ քան {{count}} վայրկյան\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 վայրկյան\",\r\n    other: \"{{count}} վայրկյան\",\r\n  },\r\n\r\n  halfAMinute: \"կես րոպե\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"ավելի քիչ քան 1 րոպե\",\r\n    other: \"ավելի քիչ քան {{count}} րոպե\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 րոպե\",\r\n    other: \"{{count}} րոպե\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"մոտ 1 ժամ\",\r\n    other: \"մոտ {{count}} ժամ\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ժամ\",\r\n    other: \"{{count}} ժամ\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 օր\",\r\n    other: \"{{count}} օր\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"մոտ 1 շաբաթ\",\r\n    other: \"մոտ {{count}} շաբաթ\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 շաբաթ\",\r\n    other: \"{{count}} շաբաթ\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"մոտ 1 ամիս\",\r\n    other: \"մոտ {{count}} ամիս\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 ամիս\",\r\n    other: \"{{count}} ամիս\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"մոտ 1 տարի\",\r\n    other: \"մոտ {{count}} տարի\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 տարի\",\r\n    other: \"{{count}} տարի\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"ավելի քան 1 տարի\",\r\n    other: \"ավելի քան {{count}} տարի\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"համարյա 1 տարի\",\r\n    other: \"համարյա {{count}} տարի\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" հետո\";\r\n    } else {\r\n      return result + \" առաջ\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"d MMMM, y, EEEE\",\r\n  long: \"d MMMM, y\",\r\n  medium: \"d MMM, y\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'ժ․'{{time}}\",\r\n  long: \"{{date}} 'ժ․'{{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'նախորդ' eeee p'֊ին'\",\r\n  yesterday: \"'երեկ' p'֊ին'\",\r\n  today: \"'այսօր' p'֊ին'\",\r\n  tomorrow: \"'վաղը' p'֊ին'\",\r\n  nextWeek: \"'հաջորդ' eeee p'֊ին'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"Ք\", \"Մ\"],\r\n  abbreviated: [\"ՔԱ\", \"ՄԹ\"],\r\n  wide: [\"Քրիստոսից առաջ\", \"Մեր թվարկության\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Ք1\", \"Ք2\", \"Ք3\", \"Ք4\"],\r\n  wide: [\"1֊ին քառորդ\", \"2֊րդ քառորդ\", \"3֊րդ քառորդ\", \"4֊րդ քառորդ\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"Հ\", \"Փ\", \"Մ\", \"Ա\", \"Մ\", \"Հ\", \"Հ\", \"Օ\", \"Ս\", \"Հ\", \"Ն\", \"Դ\"],\r\n  abbreviated: [\r\n    \"հուն\",\r\n    \"փետ\",\r\n    \"մար\",\r\n    \"ապր\",\r\n    \"մայ\",\r\n    \"հուն\",\r\n    \"հուլ\",\r\n    \"օգս\",\r\n    \"սեպ\",\r\n    \"հոկ\",\r\n    \"նոյ\",\r\n    \"դեկ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"հունվար\",\r\n    \"փետրվար\",\r\n    \"մարտ\",\r\n    \"ապրիլ\",\r\n    \"մայիս\",\r\n    \"հունիս\",\r\n    \"հուլիս\",\r\n    \"օգոստոս\",\r\n    \"սեպտեմբեր\",\r\n    \"հոկտեմբեր\",\r\n    \"նոյեմբեր\",\r\n    \"դեկտեմբեր\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Կ\", \"Ե\", \"Ե\", \"Չ\", \"Հ\", \"Ո\", \"Շ\"],\r\n  short: [\"կր\", \"եր\", \"եք\", \"չք\", \"հգ\", \"ուր\", \"շբ\"],\r\n  abbreviated: [\"կիր\", \"երկ\", \"երք\", \"չոր\", \"հնգ\", \"ուրբ\", \"շաբ\"],\r\n  wide: [\r\n    \"կիրակի\",\r\n    \"երկուշաբթի\",\r\n    \"երեքշաբթի\",\r\n    \"չորեքշաբթի\",\r\n    \"հինգշաբթի\",\r\n    \"ուրբաթ\",\r\n    \"շաբաթ\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"կեսգշ\",\r\n    noon: \"կեսօր\",\r\n    morning: \"առավոտ\",\r\n    afternoon: \"ցերեկ\",\r\n    evening: \"երեկո\",\r\n    night: \"գիշեր\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"կեսգիշեր\",\r\n    noon: \"կեսօր\",\r\n    morning: \"առավոտ\",\r\n    afternoon: \"ցերեկ\",\r\n    evening: \"երեկո\",\r\n    night: \"գիշեր\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"կեսգիշեր\",\r\n    noon: \"կեսօր\",\r\n    morning: \"առավոտ\",\r\n    afternoon: \"ցերեկ\",\r\n    evening: \"երեկո\",\r\n    night: \"գիշեր\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"կեսգշ\",\r\n    noon: \"կեսօր\",\r\n    morning: \"առավոտը\",\r\n    afternoon: \"ցերեկը\",\r\n    evening: \"երեկոյան\",\r\n    night: \"գիշերը\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"կեսգիշերին\",\r\n    noon: \"կեսօրին\",\r\n    morning: \"առավոտը\",\r\n    afternoon: \"ցերեկը\",\r\n    evening: \"երեկոյան\",\r\n    night: \"գիշերը\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"կեսգիշերին\",\r\n    noon: \"կեսօրին\",\r\n    morning: \"առավոտը\",\r\n    afternoon: \"ցերեկը\",\r\n    evening: \"երեկոյան\",\r\n    night: \"գիշերը\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  // If ordinal numbers depend on context, for example,\r\n  // if they are different for different grammatical genders,\r\n  // use `options.unit`.\r\n  //\r\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\r\n  // 'day', 'hour', 'minute', 'second'.\r\n\r\n  const rem100 = number % 100;\r\n  if (rem100 < 10) {\r\n    if (rem100 % 10 === 1) {\r\n      return number + \"֊ին\";\r\n    }\r\n  }\r\n  return number + \"֊րդ\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)((-|֊)?(ին|րդ))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(Ք|Մ)/i,\r\n  abbreviated: /^(Ք\\.?\\s?Ա\\.?|Մ\\.?\\s?Թ\\.?\\s?Ա\\.?|Մ\\.?\\s?Թ\\.?|Ք\\.?\\s?Հ\\.?)/i,\r\n  wide: /^(քրիստոսից առաջ|մեր թվարկությունից առաջ|մեր թվարկության|քրիստոսից հետո)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ք/i, /^մ/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ք[1234]/i,\r\n  wide: /^[1234]((-|֊)?(ին|րդ)) քառորդ/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[հփմաօսնդ]/i,\r\n  abbreviated: /^(հուն|փետ|մար|ապր|մայ|հուն|հուլ|օգս|սեպ|հոկ|նոյ|դեկ)/i,\r\n  wide: /^(հունվար|փետրվար|մարտ|ապրիլ|մայիս|հունիս|հուլիս|օգոստոս|սեպտեմբեր|հոկտեմբեր|նոյեմբեր|դեկտեմբեր)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^հ/i,\r\n    /^փ/i,\r\n    /^մ/i,\r\n    /^ա/i,\r\n    /^մ/i,\r\n    /^հ/i,\r\n    /^հ/i,\r\n    /^օ/i,\r\n    /^ս/i,\r\n    /^հ/i,\r\n    /^ն/i,\r\n    /^դ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^հու/i,\r\n    /^փ/i,\r\n    /^մար/i,\r\n    /^ա/i,\r\n    /^մայ/i,\r\n    /^հուն/i,\r\n    /^հուլ/i,\r\n    /^օ/i,\r\n    /^ս/i,\r\n    /^հոկ/i,\r\n    /^ն/i,\r\n    /^դ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[եչհոշկ]/i,\r\n  short: /^(կր|եր|եք|չք|հգ|ուր|շբ)/i,\r\n  abbreviated: /^(կիր|երկ|երք|չոր|հնգ|ուրբ|շաբ)/i,\r\n  wide: /^(կիրակի|երկուշաբթի|երեքշաբթի|չորեքշաբթի|հինգշաբթի|ուրբաթ|շաբաթ)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^կ/i, /^ե/i, /^ե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],\r\n  short: [/^կ/i, /^եր/i, /^եք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],\r\n  abbreviated: [/^կ/i, /^երկ/i, /^երք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],\r\n\r\n  wide: [/^կ/i, /^երկ/i, /^երե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([ap]|կեսգշ|կեսօր|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|կեսգիշեր(ին)?|կեսօր(ին)?|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /կեսգիշեր/i,\r\n    noon: /կեսօր/i,\r\n    morning: /առավոտ/i,\r\n    afternoon: /ցերեկ/i,\r\n    evening: /երեկո/i,\r\n    night: /գիշեր/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./hy/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./hy/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./hy/_lib/formatRelative.js\";\r\nimport { localize } from \"./hy/_lib/localize.js\";\r\nimport { match } from \"./hy/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Armenian locale\r\n * @language Armenian\r\n * @iso-639-2 arm\r\n * @author Alex Igityan [@alexigityan](https://github.com/alexigityan)\r\n */\r\nexport const hy = {\r\n  code: \"hy\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default hy;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"kurang dari 1 detik\",\r\n    other: \"kurang dari {{count}} detik\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 detik\",\r\n    other: \"{{count}} detik\",\r\n  },\r\n\r\n  halfAMinute: \"setengah menit\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"kurang dari 1 menit\",\r\n    other: \"kurang dari {{count}} menit\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 menit\",\r\n    other: \"{{count}} menit\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"sekitar 1 jam\",\r\n    other: \"sekitar {{count}} jam\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 jam\",\r\n    other: \"{{count}} jam\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 hari\",\r\n    other: \"{{count}} hari\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"sekitar 1 minggu\",\r\n    other: \"sekitar {{count}} minggu\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 minggu\",\r\n    other: \"{{count}} minggu\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"sekitar 1 bulan\",\r\n    other: \"sekitar {{count}} bulan\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 bulan\",\r\n    other: \"{{count}} bulan\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"sekitar 1 tahun\",\r\n    other: \"sekitar {{count}} tahun\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 tahun\",\r\n    other: \"{{count}} tahun\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"lebih dari 1 tahun\",\r\n    other: \"lebih dari {{count}} tahun\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"hampir 1 tahun\",\r\n    other: \"hampir {{count}} tahun\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"dalam waktu \" + result;\r\n    } else {\r\n      return result + \" yang lalu\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"d/M/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH.mm.ss\",\r\n  long: \"HH.mm.ss\",\r\n  medium: \"HH.mm\",\r\n  short: \"HH.mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'pukul' {{time}}\",\r\n  long: \"{{date}} 'pukul' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'lalu pukul' p\",\r\n  yesterday: \"'Kemarin pukul' p\",\r\n  today: \"'Hari ini pukul' p\",\r\n  tomorrow: \"'Besok pukul' p\",\r\n  nextWeek: \"eeee 'pukul' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// All data for localization are taken from this page\r\n// https://www.unicode.org/cldr/charts/32/summary/id.html\r\nconst eraValues = {\r\n  narrow: [\"SM\", \"M\"],\r\n  abbreviated: [\"SM\", \"M\"],\r\n  wide: [\"Sebelum Masehi\", \"Masehi\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"Kuartal ke-1\", \"Kuartal ke-2\", \"Kuartal ke-3\", \"Kuartal ke-4\"],\r\n};\r\n\r\n// Note: in Indonesian, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mei\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Agt\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Des\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Maret\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"Agustus\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Desember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"M\", \"S\", \"S\", \"R\", \"K\", \"J\", \"S\"],\r\n  short: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\r\n  abbreviated: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\r\n  wide: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"siang\",\r\n    evening: \"sore\",\r\n    night: \"malam\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  // Can't use \"pertama\", \"kedua\" because can't be parsed\r\n\r\n  return \"ke-\" + number;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^ke-(\\d+)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(sm|m)/i,\r\n  abbreviated: /^(s\\.?\\s?m\\.?|s\\.?\\s?e\\.?\\s?u\\.?|m\\.?|e\\.?\\s?u\\.?)/i,\r\n  wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^s/i, /^(m|e)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K-?\\s[1234]/i,\r\n  wide: /^Kuartal ke-?\\s?[1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,\r\n  wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^ma/i,\r\n    /^ap/i,\r\n    /^me/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^ag/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[srkjm]/i,\r\n  short: /^(min|sen|sel|rab|kam|jum|sab)/i,\r\n  abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,\r\n  wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],\r\n  any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|tengah m|tengah h|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|tengah malam|tengah hari|(di(\\swaktu)?) (pagi|siang|sore|malam))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^pm/i,\r\n    midnight: /^tengah m/i,\r\n    noon: /^tengah h/i,\r\n    morning: /pagi/i,\r\n    afternoon: /siang/i,\r\n    evening: /sore/i,\r\n    night: /malam/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./id/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./id/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./id/_lib/formatRelative.js\";\r\nimport { localize } from \"./id/_lib/localize.js\";\r\nimport { match } from \"./id/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Indonesian locale.\r\n * @language Indonesian\r\n * @iso-639-2 ind\r\n * @author Rahmat Budiharso [@rbudiharso](https://github.com/rbudiharso)\r\n * @author Benget Nata [@bentinata](https://github.com/bentinata)\r\n * @author Budi Irawan [@deerawan](https://github.com/deerawan)\r\n * @author Try Ajitiono [@imballinst](https://github.com/imballinst)\r\n */\r\nexport const id = {\r\n  code: \"id\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default id;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"minna en 1 sekúnda\",\r\n    other: \"minna en {{count}} sekúndur\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekúnda\",\r\n    other: \"{{count}} sekúndur\",\r\n  },\r\n\r\n  halfAMinute: \"hálf mínúta\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minna en 1 mínúta\",\r\n    other: \"minna en {{count}} mínútur\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 mínúta\",\r\n    other: \"{{count}} mínútur\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"u.þ.b. 1 klukkustund\",\r\n    other: \"u.þ.b. {{count}} klukkustundir\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 klukkustund\",\r\n    other: \"{{count}} klukkustundir\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dagur\",\r\n    other: \"{{count}} dagar\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"um viku\",\r\n    other: \"um {{count}} vikur\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 viku\",\r\n    other: \"{{count}} vikur\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"u.þ.b. 1 mánuður\",\r\n    other: \"u.þ.b. {{count}} mánuðir\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mánuður\",\r\n    other: \"{{count}} mánuðir\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"u.þ.b. 1 ár\",\r\n    other: \"u.þ.b. {{count}} ár\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ár\",\r\n    other: \"{{count}} ár\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"meira en 1 ár\",\r\n    other: \"meira en {{count}} ár\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"næstum 1 ár\",\r\n    other: \"næstum {{count}} ár\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"í \" + result;\r\n    } else {\r\n      return result + \" síðan\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"do MMM y\",\r\n  short: \"d.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"'kl'. HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kl.' {{time}}\",\r\n  long: \"{{date}} 'kl.' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'síðasta' dddd 'kl.' p\",\r\n  yesterday: \"'í gær kl.' p\",\r\n  today: \"'í dag kl.' p\",\r\n  tomorrow: \"'á morgun kl.' p\",\r\n  nextWeek: \"dddd 'kl.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\r\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\r\n  wide: [\"fyrir Krist\", \"eftir Krist\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1F\", \"2F\", \"3F\", \"4F\"],\r\n  wide: [\"1. fjórðungur\", \"2. fjórðungur\", \"3. fjórðungur\", \"4. fjórðungur\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"Á\", \"S\", \"Ó\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mars\",\r\n    \"apríl\",\r\n    \"maí\",\r\n    \"júní\",\r\n    \"júlí\",\r\n    \"ágúst\",\r\n    \"sept.\",\r\n    \"okt.\",\r\n    \"nóv.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janúar\",\r\n    \"febrúar\",\r\n    \"mars\",\r\n    \"apríl\",\r\n    \"maí\",\r\n    \"júní\",\r\n    \"júlí\",\r\n    \"ágúst\",\r\n    \"september\",\r\n    \"október\",\r\n    \"nóvember\",\r\n    \"desember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"Þ\", \"M\", \"F\", \"F\", \"L\"],\r\n  short: [\"Su\", \"Má\", \"Þr\", \"Mi\", \"Fi\", \"Fö\", \"La\"],\r\n  abbreviated: [\"sun.\", \"mán.\", \"þri.\", \"mið.\", \"fim.\", \"fös.\", \"lau.\"],\r\n\r\n  wide: [\r\n    \"sunnudagur\",\r\n    \"mánudagur\",\r\n    \"þriðjudagur\",\r\n    \"miðvikudagur\",\r\n    \"fimmtudagur\",\r\n    \"föstudagur\",\r\n    \"laugardagur\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"f\",\r\n    pm: \"e\",\r\n    midnight: \"miðnætti\",\r\n    noon: \"hádegi\",\r\n    morning: \"morgunn\",\r\n    afternoon: \"síðdegi\",\r\n    evening: \"kvöld\",\r\n    night: \"nótt\",\r\n  },\r\n  abbreviated: {\r\n    am: \"f.h.\",\r\n    pm: \"e.h.\",\r\n    midnight: \"miðnætti\",\r\n    noon: \"hádegi\",\r\n    morning: \"morgunn\",\r\n    afternoon: \"síðdegi\",\r\n    evening: \"kvöld\",\r\n    night: \"nótt\",\r\n  },\r\n  wide: {\r\n    am: \"fyrir hádegi\",\r\n    pm: \"eftir hádegi\",\r\n    midnight: \"miðnætti\",\r\n    noon: \"hádegi\",\r\n    morning: \"morgunn\",\r\n    afternoon: \"síðdegi\",\r\n    evening: \"kvöld\",\r\n    night: \"nótt\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"f\",\r\n    pm: \"e\",\r\n    midnight: \"á miðnætti\",\r\n    noon: \"á hádegi\",\r\n    morning: \"að morgni\",\r\n    afternoon: \"síðdegis\",\r\n    evening: \"um kvöld\",\r\n    night: \"um nótt\",\r\n  },\r\n  abbreviated: {\r\n    am: \"f.h.\",\r\n    pm: \"e.h.\",\r\n    midnight: \"á miðnætti\",\r\n    noon: \"á hádegi\",\r\n    morning: \"að morgni\",\r\n    afternoon: \"síðdegis\",\r\n    evening: \"um kvöld\",\r\n    night: \"um nótt\",\r\n  },\r\n  wide: {\r\n    am: \"fyrir hádegi\",\r\n    pm: \"eftir hádegi\",\r\n    midnight: \"á miðnætti\",\r\n    noon: \"á hádegi\",\r\n    morning: \"að morgni\",\r\n    afternoon: \"síðdegis\",\r\n    evening: \"um kvöld\",\r\n    night: \"um nótt\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+(\\.)?/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(f\\.Kr\\.|e\\.Kr\\.)/i,\r\n  abbreviated: /^(f\\.Kr\\.|e\\.Kr\\.)/i,\r\n  wide: /^(fyrir Krist|eftir Krist)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(f\\.Kr\\.)/i, /^(e\\.Kr\\.)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]\\.?/i,\r\n  abbreviated: /^q[1234]\\.?/i,\r\n  wide: /^[1234]\\.? fjórðungur/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1\\.?/i, /2\\.?/i, /3\\.?/i, /4\\.?/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmásónd]/i,\r\n  abbreviated:\r\n    /^(jan\\.|feb\\.|mars\\.|apríl\\.|maí|júní|júlí|águst|sep\\.|oct\\.|nov\\.|dec\\.)/i,\r\n  wide: /^(januar|febrúar|mars|apríl|maí|júní|júlí|águst|september|október|nóvember|desember)/i,\r\n};\r\n\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^á/i,\r\n    /^s/i,\r\n    /^ó/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maí/i,\r\n    /^jún/i,\r\n    /^júl/i,\r\n    /^áu/i,\r\n    /^s/i,\r\n    /^ó/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtwf]/i,\r\n  short: /^(su|má|þr|mi|fi|fö|la)/i,\r\n  abbreviated: /^(sun|mán|þri|mið|fim|fös|lau)\\.?/i,\r\n  wide: /^(sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^þ/i, /^m/i, /^f/i, /^f/i, /^l/i],\r\n  any: [/^su/i, /^má/i, /^þr/i, /^mi/i, /^fi/i, /^fö/i, /^la/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(f|e|síðdegis|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,\r\n  any: /^(fyrir hádegi|eftir hádegi|[ef]\\.?h\\.?|síðdegis|morgunn|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^f/i,\r\n    pm: /^e/i,\r\n    midnight: /^mi/i,\r\n    noon: /^há/i,\r\n    morning: /morgunn/i,\r\n    afternoon: /síðdegi/i,\r\n    evening: /kvöld/i,\r\n    night: /nótt/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./is/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./is/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./is/_lib/formatRelative.js\";\r\nimport { localize } from \"./is/_lib/localize.js\";\r\nimport { match } from \"./is/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Icelandic locale.\r\n * @language Icelandic\r\n * @iso-639-2 isl\r\n * @author Derek Blank [@derekblank](https://github.com/derekblank)\r\n * @author Arnór Ýmir [@lamayg](https://github.com/lamayg)\r\n */\r\nexport const is = {\r\n  code: \"is\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default is;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"meno di un secondo\",\r\n    other: \"meno di {{count}} secondi\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"un secondo\",\r\n    other: \"{{count}} secondi\",\r\n  },\r\n\r\n  halfAMinute: \"alcuni secondi\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"meno di un minuto\",\r\n    other: \"meno di {{count}} minuti\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"un minuto\",\r\n    other: \"{{count}} minuti\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"circa un'ora\",\r\n    other: \"circa {{count}} ore\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"un'ora\",\r\n    other: \"{{count}} ore\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"un giorno\",\r\n    other: \"{{count}} giorni\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"circa una settimana\",\r\n    other: \"circa {{count}} settimane\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"una settimana\",\r\n    other: \"{{count}} settimane\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"circa un mese\",\r\n    other: \"circa {{count}} mesi\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"un mese\",\r\n    other: \"{{count}} mesi\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"circa un anno\",\r\n    other: \"circa {{count}} anni\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"un anno\",\r\n    other: \"{{count}} anni\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"più di un anno\",\r\n    other: \"più di {{count}} anni\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"quasi un anno\",\r\n    other: \"quasi {{count}} anni\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"tra \" + result;\r\n    } else {\r\n      return result + \" fa\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst weekdays = [\r\n  \"domenica\",\r\n  \"lunedì\",\r\n  \"martedì\",\r\n  \"mercoledì\",\r\n  \"giovedì\",\r\n  \"venerdì\",\r\n  \"sabato\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  switch (day) {\r\n    case 0:\r\n      return \"'domenica scorsa alle' p\";\r\n    default:\r\n      return \"'\" + weekdays[day] + \" scorso alle' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  return \"'\" + weekdays[day] + \" alle' p\";\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  switch (day) {\r\n    case 0:\r\n      return \"'domenica prossima alle' p\";\r\n    default:\r\n      return \"'\" + weekdays[day] + \" prossimo alle' p\";\r\n  }\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'ieri alle' p\",\r\n  today: \"'oggi alle' p\",\r\n  tomorrow: \"'domani alle' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"aC\", \"dC\"],\r\n  abbreviated: [\"a.C.\", \"d.C.\"],\r\n  wide: [\"avanti Cristo\", \"dopo Cristo\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"G\", \"F\", \"M\", \"A\", \"M\", \"G\", \"L\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"gen\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"mag\",\r\n    \"giu\",\r\n    \"lug\",\r\n    \"ago\",\r\n    \"set\",\r\n    \"ott\",\r\n    \"nov\",\r\n    \"dic\",\r\n  ],\r\n\r\n  wide: [\r\n    \"gennaio\",\r\n    \"febbraio\",\r\n    \"marzo\",\r\n    \"aprile\",\r\n    \"maggio\",\r\n    \"giugno\",\r\n    \"luglio\",\r\n    \"agosto\",\r\n    \"settembre\",\r\n    \"ottobre\",\r\n    \"novembre\",\r\n    \"dicembre\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"G\", \"V\", \"S\"],\r\n  short: [\"dom\", \"lun\", \"mar\", \"mer\", \"gio\", \"ven\", \"sab\"],\r\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mer\", \"gio\", \"ven\", \"sab\"],\r\n  wide: [\r\n    \"domenica\",\r\n    \"lunedì\",\r\n    \"martedì\",\r\n    \"mercoledì\",\r\n    \"giovedì\",\r\n    \"venerdì\",\r\n    \"sabato\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"m.\",\r\n    pm: \"p.\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"mattina\",\r\n    afternoon: \"pomeriggio\",\r\n    evening: \"sera\",\r\n    night: \"notte\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"mattina\",\r\n    afternoon: \"pomeriggio\",\r\n    evening: \"sera\",\r\n    night: \"notte\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"mattina\",\r\n    afternoon: \"pomeriggio\",\r\n    evening: \"sera\",\r\n    night: \"notte\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"m.\",\r\n    pm: \"p.\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"di mattina\",\r\n    afternoon: \"del pomeriggio\",\r\n    evening: \"di sera\",\r\n    night: \"di notte\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"di mattina\",\r\n    afternoon: \"del pomeriggio\",\r\n    evening: \"di sera\",\r\n    night: \"di notte\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"mezzanotte\",\r\n    noon: \"mezzogiorno\",\r\n    morning: \"di mattina\",\r\n    afternoon: \"del pomeriggio\",\r\n    evening: \"di sera\",\r\n    night: \"di notte\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return String(number);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(aC|dC)/i,\r\n  abbreviated: /^(a\\.?\\s?C\\.?|a\\.?\\s?e\\.?\\s?v\\.?|d\\.?\\s?C\\.?|e\\.?\\s?v\\.?)/i,\r\n  wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^a/i, /^(d|e)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^t[1234]/i,\r\n  wide: /^[1234](º)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[gfmalsond]/i,\r\n  abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,\r\n  wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^g/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^g/i,\r\n    /^l/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ge/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mag/i,\r\n    /^gi/i,\r\n    /^l/i,\r\n    /^ag/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmgvs]/i,\r\n  short: /^(do|lu|ma|me|gi|ve|sa)/i,\r\n  abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,\r\n  wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],\r\n  any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(a|m\\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mezza/i,\r\n    noon: /^mezzo/i,\r\n    morning: /mattina/i,\r\n    afternoon: /pomeriggio/i,\r\n    evening: /sera/i,\r\n    night: /notte/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./it/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./it/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./it/_lib/formatRelative.js\";\r\nimport { localize } from \"./it/_lib/localize.js\";\r\nimport { match } from \"./it/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Italian locale.\r\n * @language Italian\r\n * @iso-639-2 ita\r\n * @author Alberto Restifo [@albertorestifo](https://github.com/albertorestifo)\r\n * @author Giovanni Polimeni [@giofilo](https://github.com/giofilo)\r\n * @author Vincenzo Carrese [@vin-car](https://github.com/vin-car)\r\n */\r\nexport const it = {\r\n  code: \"it\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default it;\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./it/_lib/formatDistance.js\";\r\nimport { formatRelative } from \"./it/_lib/formatRelative.js\";\r\nimport { localize } from \"./it/_lib/localize.js\";\r\nimport { match } from \"./it/_lib/match.js\";\r\nimport { formatLong } from \"./it-CH/_lib/formatLong.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Italian locale (Switzerland).\r\n * @language Italian\r\n * @iso-639-2 ita\r\n * @author Mike Peyer [@maic66](https://github.com/maic66)\r\n */\r\nexport const itCH = {\r\n  code: \"it-CH\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default itCH;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"1秒未満\",\r\n    other: \"{{count}}秒未満\",\r\n    oneWithSuffix: \"約1秒\",\r\n    otherWithSuffix: \"約{{count}}秒\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1秒\",\r\n    other: \"{{count}}秒\",\r\n  },\r\n\r\n  halfAMinute: \"30秒\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"1分未満\",\r\n    other: \"{{count}}分未満\",\r\n    oneWithSuffix: \"約1分\",\r\n    otherWithSuffix: \"約{{count}}分\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1分\",\r\n    other: \"{{count}}分\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"約1時間\",\r\n    other: \"約{{count}}時間\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1時間\",\r\n    other: \"{{count}}時間\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1日\",\r\n    other: \"{{count}}日\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"約1週間\",\r\n    other: \"約{{count}}週間\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1週間\",\r\n    other: \"{{count}}週間\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"約1か月\",\r\n    other: \"約{{count}}か月\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1か月\",\r\n    other: \"{{count}}か月\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"約1年\",\r\n    other: \"約{{count}}年\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1年\",\r\n    other: \"{{count}}年\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1年以上\",\r\n    other: \"{{count}}年以上\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"1年近く\",\r\n    other: \"{{count}}年近く\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options.addSuffix && tokenValue.oneWithSuffix) {\r\n      result = tokenValue.oneWithSuffix;\r\n    } else {\r\n      result = tokenValue.one;\r\n    }\r\n  } else {\r\n    if (options.addSuffix && tokenValue.otherWithSuffix) {\r\n      result = tokenValue.otherWithSuffix.replace(\"{{count}}\", String(count));\r\n    } else {\r\n      result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n    }\r\n  }\r\n\r\n  if (options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"後\";\r\n    } else {\r\n      return result + \"前\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y年M月d日EEEE\",\r\n  long: \"y年M月d日\",\r\n  medium: \"y/MM/dd\",\r\n  short: \"y/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H時mm分ss秒 zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"先週のeeeeのp\",\r\n  yesterday: \"昨日のp\",\r\n  today: \"今日のp\",\r\n  tomorrow: \"明日のp\",\r\n  nextWeek: \"翌週のeeeeのp\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) => {\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"BC\", \"AC\"],\r\n  abbreviated: [\"紀元前\", \"西暦\"],\r\n  wide: [\"紀元前\", \"西暦\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"第1四半期\", \"第2四半期\", \"第3四半期\", \"第4四半期\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\r\n\r\n  abbreviated: [\r\n    \"1月\",\r\n    \"2月\",\r\n    \"3月\",\r\n    \"4月\",\r\n    \"5月\",\r\n    \"6月\",\r\n    \"7月\",\r\n    \"8月\",\r\n    \"9月\",\r\n    \"10月\",\r\n    \"11月\",\r\n    \"12月\",\r\n  ],\r\n\r\n  wide: [\r\n    \"1月\",\r\n    \"2月\",\r\n    \"3月\",\r\n    \"4月\",\r\n    \"5月\",\r\n    \"6月\",\r\n    \"7月\",\r\n    \"8月\",\r\n    \"9月\",\r\n    \"10月\",\r\n    \"11月\",\r\n    \"12月\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\r\n  short: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\r\n  abbreviated: [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"],\r\n  wide: [\"日曜日\", \"月曜日\", \"火曜日\", \"水曜日\", \"木曜日\", \"金曜日\", \"土曜日\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n  wide: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n  wide: {\r\n    am: \"午前\",\r\n    pm: \"午後\",\r\n    midnight: \"深夜\",\r\n    noon: \"正午\",\r\n    morning: \"朝\",\r\n    afternoon: \"午後\",\r\n    evening: \"夜\",\r\n    night: \"深夜\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = String(options?.unit);\r\n\r\n  switch (unit) {\r\n    case \"year\":\r\n      return `${number}年`;\r\n    case \"quarter\":\r\n      return `第${number}四半期`;\r\n    case \"month\":\r\n      return `${number}月`;\r\n    case \"week\":\r\n      return `第${number}週`;\r\n    case \"date\":\r\n      return `${number}日`;\r\n    case \"hour\":\r\n      return `${number}時`;\r\n    case \"minute\":\r\n      return `${number}分`;\r\n    case \"second\":\r\n      return `${number}秒`;\r\n    default:\r\n      return `${number}`;\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^第?\\d+(年|四半期|月|週|日|時|分|秒)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(B\\.?C\\.?|A\\.?D\\.?)/i,\r\n  abbreviated: /^(紀元[前後]|西暦)/i,\r\n  wide: /^(紀元[前後]|西暦)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/^B/i, /^A/i],\r\n  any: [/^(紀元前)/i, /^(西暦|紀元後)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^Q[1234]/i,\r\n  wide: /^第[1234一二三四１２３４]四半期/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^([123456789]|1[012])/,\r\n  abbreviated: /^([123456789]|1[012])月/i,\r\n  wide: /^([123456789]|1[012])月/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^1\\D/,\r\n    /^2/,\r\n    /^3/,\r\n    /^4/,\r\n    /^5/,\r\n    /^6/,\r\n    /^7/,\r\n    /^8/,\r\n    /^9/,\r\n    /^10/,\r\n    /^11/,\r\n    /^12/,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[日月火水木金土]/,\r\n  short: /^[日月火水木金土]/,\r\n  abbreviated: /^[日月火水木金土]/,\r\n  wide: /^[日月火水木金土]曜日/,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^日/, /^月/, /^火/, /^水/, /^木/, /^金/, /^土/],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^(A|午前)/i,\r\n    pm: /^(P|午後)/i,\r\n    midnight: /^深夜|真夜中/i,\r\n    noon: /^正午/i,\r\n    morning: /^朝/i,\r\n    afternoon: /^午後/i,\r\n    evening: /^夜/i,\r\n    night: /^深夜/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ja/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ja/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ja/_lib/formatRelative.js\";\r\nimport { localize } from \"./ja/_lib/localize.js\";\r\nimport { match } from \"./ja/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Japanese locale.\r\n * @language Japanese\r\n * @iso-639-2 jpn\r\n * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)\r\n * @author Yamagishi Kazutoshi [@ykzts](https://github.com/ykzts)\r\n * @author Luca Ban [@mesqueeb](https://github.com/mesqueeb)\r\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\r\n * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)\r\n */\r\nexport const ja = {\r\n  code: \"ja\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ja;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"1びょうみまん\",\r\n    other: \"{{count}}びょうみまん\",\r\n    oneWithSuffix: \"やく1びょう\",\r\n    otherWithSuffix: \"やく{{count}}びょう\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1びょう\",\r\n    other: \"{{count}}びょう\",\r\n  },\r\n\r\n  halfAMinute: \"30びょう\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"1ぷんみまん\",\r\n    other: \"{{count}}ふんみまん\",\r\n    oneWithSuffix: \"やく1ぷん\",\r\n    otherWithSuffix: \"やく{{count}}ふん\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1ぷん\",\r\n    other: \"{{count}}ふん\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"やく1じかん\",\r\n    other: \"やく{{count}}じかん\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1じかん\",\r\n    other: \"{{count}}じかん\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1にち\",\r\n    other: \"{{count}}にち\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"やく1しゅうかん\",\r\n    other: \"やく{{count}}しゅうかん\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1しゅうかん\",\r\n    other: \"{{count}}しゅうかん\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"やく1かげつ\",\r\n    other: \"やく{{count}}かげつ\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1かげつ\",\r\n    other: \"{{count}}かげつ\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"やく1ねん\",\r\n    other: \"やく{{count}}ねん\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1ねん\",\r\n    other: \"{{count}}ねん\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1ねんいじょう\",\r\n    other: \"{{count}}ねんいじょう\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"1ねんちかく\",\r\n    other: \"{{count}}ねんちかく\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options.addSuffix && tokenValue.oneWithSuffix) {\r\n      result = tokenValue.oneWithSuffix;\r\n    } else {\r\n      result = tokenValue.one;\r\n    }\r\n  } else {\r\n    if (options.addSuffix && tokenValue.otherWithSuffix) {\r\n      result = tokenValue.otherWithSuffix.replace(\"{{count}}\", String(count));\r\n    } else {\r\n      result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n    }\r\n  }\r\n\r\n  if (options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"あと\";\r\n    } else {\r\n      return result + \"まえ\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"yねんMがつdにちEEEE\",\r\n  long: \"yねんMがつdにち\",\r\n  medium: \"y/MM/dd\",\r\n  short: \"y/MM/dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"Hじmmふんssびょう zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"せんしゅうのeeeeのp\",\r\n  yesterday: \"きのうのp\",\r\n  today: \"きょうのp\",\r\n  tomorrow: \"あしたのp\",\r\n  nextWeek: \"よくしゅうのeeeeのp\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) => {\r\n  return formatRelativeLocale[token];\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"BC\", \"AC\"],\r\n  abbreviated: [\"きげんぜん\", \"せいれき\"],\r\n  wide: [\"きげんぜん\", \"せいれき\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"だい1しはんき\", \"だい2しはんき\", \"だい3しはんき\", \"だい4しはんき\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\r\n\r\n  abbreviated: [\r\n    \"1がつ\",\r\n    \"2がつ\",\r\n    \"3がつ\",\r\n    \"4がつ\",\r\n    \"5がつ\",\r\n    \"6がつ\",\r\n    \"7がつ\",\r\n    \"8がつ\",\r\n    \"9がつ\",\r\n    \"10がつ\",\r\n    \"11がつ\",\r\n    \"12がつ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"1がつ\",\r\n    \"2がつ\",\r\n    \"3がつ\",\r\n    \"4がつ\",\r\n    \"5がつ\",\r\n    \"6がつ\",\r\n    \"7がつ\",\r\n    \"8がつ\",\r\n    \"9がつ\",\r\n    \"10がつ\",\r\n    \"11がつ\",\r\n    \"12がつ\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"にち\", \"げつ\", \"か\", \"すい\", \"もく\", \"きん\", \"ど\"],\r\n  short: [\"にち\", \"げつ\", \"か\", \"すい\", \"もく\", \"きん\", \"ど\"],\r\n  abbreviated: [\"にち\", \"げつ\", \"か\", \"すい\", \"もく\", \"きん\", \"ど\"],\r\n  wide: [\r\n    \"にちようび\",\r\n    \"げつようび\",\r\n    \"かようび\",\r\n    \"すいようび\",\r\n    \"もくようび\",\r\n    \"きんようび\",\r\n    \"どようび\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n  wide: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n};\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n  wide: {\r\n    am: \"ごぜん\",\r\n    pm: \"ごご\",\r\n    midnight: \"しんや\",\r\n    noon: \"しょうご\",\r\n    morning: \"あさ\",\r\n    afternoon: \"ごご\",\r\n    evening: \"よる\",\r\n    night: \"しんや\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = String(options?.unit);\r\n\r\n  switch (unit) {\r\n    case \"year\":\r\n      return `${number}ねん`;\r\n    case \"quarter\":\r\n      return `だい${number}しはんき`;\r\n    case \"month\":\r\n      return `${number}がつ`;\r\n    case \"week\":\r\n      return `だい${number}しゅう`;\r\n    case \"date\":\r\n      return `${number}にち`;\r\n    case \"hour\":\r\n      return `${number}じ`;\r\n    case \"minute\":\r\n      return `${number}ふん`;\r\n    case \"second\":\r\n      return `${number}びょう`;\r\n    default:\r\n      return `${number}`;\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber: ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern =\r\n  /^だ?い?\\d+(ねん|しはんき|がつ|しゅう|にち|じ|ふん|びょう)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(B\\.?C\\.?|A\\.?D\\.?)/i,\r\n  abbreviated: /^(きげん[前後]|せいれき)/i,\r\n  wide: /^(きげん[前後]|せいれき)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  narrow: [/^B/i, /^A/i],\r\n  any: [/^(きげんぜん)/i, /^(せいれき|きげんご)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^Q[1234]/i,\r\n  wide: /^だい[1234一二三四１２３４]しはんき/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^([123456789]|1[012])/,\r\n  abbreviated: /^([123456789]|1[012])がつ/i,\r\n  wide: /^([123456789]|1[012])がつ/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^1\\D/,\r\n    /^2/,\r\n    /^3/,\r\n    /^4/,\r\n    /^5/,\r\n    /^6/,\r\n    /^7/,\r\n    /^8/,\r\n    /^9/,\r\n    /^10/,\r\n    /^11/,\r\n    /^12/,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(にち|げつ|か|すい|もく|きん|ど)/,\r\n  short: /^(にち|げつ|か|すい|もく|きん|ど)/,\r\n  abbreviated: /^(にち|げつ|か|すい|もく|きん|ど)/,\r\n  wide: /^(にち|げつ|か|すい|もく|きん|ど)ようび/,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^にち/, /^げつ/, /^か/, /^すい/, /^もく/, /^きん/, /^ど/],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(AM|PM|ごぜん|ごご|しょうご|しんや|まよなか|よる|あさ)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^(A|ごぜん)/i,\r\n    pm: /^(P|ごご)/i,\r\n    midnight: /^しんや|まよなか/i,\r\n    noon: /^しょうご/i,\r\n    morning: /^あさ/i,\r\n    afternoon: /^ごご/i,\r\n    evening: /^よる/i,\r\n    night: /^しんや/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ja-Hira/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ja-Hira/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ja-Hira/_lib/formatRelative.js\";\r\nimport { localize } from \"./ja-Hira/_lib/localize.js\";\r\nimport { match } from \"./ja-Hira/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Japanese (Hiragana) locale.\r\n * @language Japanese (Hiragana)\r\n * @iso-639-2 jpn\r\n * @author Eri Hiramatsu [@Eritutteo](https://github.com/Eritutteo)\r\n */\r\nexport const jaHira = {\r\n  code: \"ja-Hira\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default jaHira;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    past: \"{{count}} წამზე ნაკლები ხნის წინ\",\r\n    present: \"{{count}} წამზე ნაკლები\",\r\n    future: \"{{count}} წამზე ნაკლებში\",\r\n  },\r\n\r\n  xSeconds: {\r\n    past: \"{{count}} წამის წინ\",\r\n    present: \"{{count}} წამი\",\r\n    future: \"{{count}} წამში\",\r\n  },\r\n\r\n  halfAMinute: {\r\n    past: \"ნახევარი წუთის წინ\",\r\n    present: \"ნახევარი წუთი\",\r\n    future: \"ნახევარი წუთში\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    past: \"{{count}} წუთზე ნაკლები ხნის წინ\",\r\n    present: \"{{count}} წუთზე ნაკლები\",\r\n    future: \"{{count}} წუთზე ნაკლებში\",\r\n  },\r\n\r\n  xMinutes: {\r\n    past: \"{{count}} წუთის წინ\",\r\n    present: \"{{count}} წუთი\",\r\n    future: \"{{count}} წუთში\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    past: \"დაახლოებით {{count}} საათის წინ\",\r\n    present: \"დაახლოებით {{count}} საათი\",\r\n    future: \"დაახლოებით {{count}} საათში\",\r\n  },\r\n\r\n  xHours: {\r\n    past: \"{{count}} საათის წინ\",\r\n    present: \"{{count}} საათი\",\r\n    future: \"{{count}} საათში\",\r\n  },\r\n\r\n  xDays: {\r\n    past: \"{{count}} დღის წინ\",\r\n    present: \"{{count}} დღე\",\r\n    future: \"{{count}} დღეში\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    past: \"დაახლოებით {{count}} კვირას წინ\",\r\n    present: \"დაახლოებით {{count}} კვირა\",\r\n    future: \"დაახლოებით {{count}} კვირაში\",\r\n  },\r\n\r\n  xWeeks: {\r\n    past: \"{{count}} კვირას კვირა\",\r\n    present: \"{{count}} კვირა\",\r\n    future: \"{{count}} კვირაში\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    past: \"დაახლოებით {{count}} თვის წინ\",\r\n    present: \"დაახლოებით {{count}} თვე\",\r\n    future: \"დაახლოებით {{count}} თვეში\",\r\n  },\r\n\r\n  xMonths: {\r\n    past: \"{{count}} თვის წინ\",\r\n    present: \"{{count}} თვე\",\r\n    future: \"{{count}} თვეში\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    past: \"დაახლოებით {{count}} წლის წინ\",\r\n    present: \"დაახლოებით {{count}} წელი\",\r\n    future: \"დაახლოებით {{count}} წელში\",\r\n  },\r\n\r\n  xYears: {\r\n    past: \"{{count}} წლის წინ\",\r\n    present: \"{{count}} წელი\",\r\n    future: \"{{count}} წელში\",\r\n  },\r\n\r\n  overXYears: {\r\n    past: \"{{count}} წელზე მეტი ხნის წინ\",\r\n    present: \"{{count}} წელზე მეტი\",\r\n    future: \"{{count}} წელზე მეტი ხნის შემდეგ\",\r\n  },\r\n\r\n  almostXYears: {\r\n    past: \"თითქმის {{count}} წლის წინ\",\r\n    present: \"თითქმის {{count}} წელი\",\r\n    future: \"თითქმის {{count}} წელში\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (\r\n    options?.addSuffix &&\r\n    options.comparison &&\r\n    options.comparison > 0\r\n  ) {\r\n    result = tokenValue.future.replace(\"{{count}}\", String(count));\r\n  } else if (options?.addSuffix) {\r\n    result = tokenValue.past.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.present.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM, y\",\r\n  long: \"do, MMMM, y\",\r\n  medium: \"d, MMM, y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}'-ზე'\",\r\n  long: \"{{date}} {{time}}'-ზე'\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'წინა' eeee p'-ზე'\",\r\n  yesterday: \"'გუშინ' p'-ზე'\",\r\n  today: \"'დღეს' p'-ზე'\",\r\n  tomorrow: \"'ხვალ' p'-ზე'\",\r\n  nextWeek: \"'შემდეგი' eeee p'-ზე'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ჩ.წ-მდე\", \"ჩ.წ\"],\r\n  abbreviated: [\"ჩვ.წ-მდე\", \"ჩვ.წ\"],\r\n  wide: [\"ჩვენს წელთაღრიცხვამდე\", \"ჩვენი წელთაღრიცხვით\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-ლი კვ\", \"2-ე კვ\", \"3-ე კვ\", \"4-ე კვ\"],\r\n  wide: [\"1-ლი კვარტალი\", \"2-ე კვარტალი\", \"3-ე კვარტალი\", \"4-ე კვარტალი\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\r\n    \"ია\",\r\n    \"თე\",\r\n    \"მა\",\r\n    \"აპ\",\r\n    \"მს\",\r\n    \"ვნ\",\r\n    \"ვლ\",\r\n    \"აგ\",\r\n    \"სე\",\r\n    \"ოქ\",\r\n    \"ნო\",\r\n    \"დე\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"იან\",\r\n    \"თებ\",\r\n    \"მარ\",\r\n    \"აპრ\",\r\n    \"მაი\",\r\n    \"ივნ\",\r\n    \"ივლ\",\r\n    \"აგვ\",\r\n    \"სექ\",\r\n    \"ოქტ\",\r\n    \"ნოე\",\r\n    \"დეკ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"იანვარი\",\r\n    \"თებერვალი\",\r\n    \"მარტი\",\r\n    \"აპრილი\",\r\n    \"მაისი\",\r\n    \"ივნისი\",\r\n    \"ივლისი\",\r\n    \"აგვისტო\",\r\n    \"სექტემბერი\",\r\n    \"ოქტომბერი\",\r\n    \"ნოემბერი\",\r\n    \"დეკემბერი\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"კვ\", \"ორ\", \"სა\", \"ოთ\", \"ხუ\", \"პა\", \"შა\"],\r\n  short: [\"კვი\", \"ორშ\", \"სამ\", \"ოთხ\", \"ხუთ\", \"პარ\", \"შაბ\"],\r\n  abbreviated: [\"კვი\", \"ორშ\", \"სამ\", \"ოთხ\", \"ხუთ\", \"პარ\", \"შაბ\"],\r\n  wide: [\r\n    \"კვირა\",\r\n    \"ორშაბათი\",\r\n    \"სამშაბათი\",\r\n    \"ოთხშაბათი\",\r\n    \"ხუთშაბათი\",\r\n    \"პარასკევი\",\r\n    \"შაბათი\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"შუაღამე\",\r\n    noon: \"შუადღე\",\r\n    morning: \"დილა\",\r\n    afternoon: \"საღამო\",\r\n    evening: \"საღამო\",\r\n    night: \"ღამე\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"შუაღამე\",\r\n    noon: \"შუადღე\",\r\n    morning: \"დილა\",\r\n    afternoon: \"საღამო\",\r\n    evening: \"საღამო\",\r\n    night: \"ღამე\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"შუაღამე\",\r\n    noon: \"შუადღე\",\r\n    morning: \"დილა\",\r\n    afternoon: \"საღამო\",\r\n    evening: \"საღამო\",\r\n    night: \"ღამე\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"შუაღამით\",\r\n    noon: \"შუადღისას\",\r\n    morning: \"დილით\",\r\n    afternoon: \"ნაშუადღევს\",\r\n    evening: \"საღამოს\",\r\n    night: \"ღამით\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"შუაღამით\",\r\n    noon: \"შუადღისას\",\r\n    morning: \"დილით\",\r\n    afternoon: \"ნაშუადღევს\",\r\n    evening: \"საღამოს\",\r\n    night: \"ღამით\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"შუაღამით\",\r\n    noon: \"შუადღისას\",\r\n    morning: \"დილით\",\r\n    afternoon: \"ნაშუადღევს\",\r\n    evening: \"საღამოს\",\r\n    night: \"ღამით\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  if (number === 1) {\r\n    return number + \"-ლი\";\r\n  }\r\n\r\n  return number + \"-ე\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-ლი|-ე)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ჩვ?\\.წ)/i,\r\n  abbreviated: /^(ჩვ?\\.წ)/i,\r\n  wide: /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე|ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [\r\n    /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე)/i,\r\n    /^(ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i,\r\n  ],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]-(ლი|ე)? კვ/i,\r\n  wide: /^[1234]-(ლი|ე)? კვარტალი/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  any: /^(ია|თე|მა|აპ|მს|ვნ|ვლ|აგ|სე|ოქ|ნო|დე)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^ია/i,\r\n    /^თ/i,\r\n    /^მარ/i,\r\n    /^აპ/i,\r\n    /^მაი/i,\r\n    /^ი?ვნ/i,\r\n    /^ი?ვლ/i,\r\n    /^აგ/i,\r\n    /^ს/i,\r\n    /^ო/i,\r\n    /^ნ/i,\r\n    /^დ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(კვ|ორ|სა|ოთ|ხუ|პა|შა)/i,\r\n  short: /^(კვი|ორშ|სამ|ოთხ|ხუთ|პარ|შაბ)/i,\r\n  wide: /^(კვირა|ორშაბათი|სამშაბათი|ოთხშაბათი|ხუთშაბათი|პარასკევი|შაბათი)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^კვ/i, /^ორ/i, /^სა/i, /^ოთ/i, /^ხუ/i, /^პა/i, /^შა/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^([ap]\\.?\\s?m\\.?|შუაღ|დილ)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^შუაღ/i,\r\n    noon: /^შუადღ/i,\r\n    morning: /^დილ/i,\r\n    afternoon: /ნაშუადღევს/i,\r\n    evening: /საღამო/i,\r\n    night: /ღამ/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ka/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ka/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ka/_lib/formatRelative.js\";\r\nimport { localize } from \"./ka/_lib/localize.js\";\r\nimport { match } from \"./ka/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Georgian locale.\r\n * @language Georgian\r\n * @iso-639-2 geo\r\n * @author Lado Lomidze [@Landish](https://github.com/Landish)\r\n * @author Nick Shvelidze [@shvelo](https://github.com/shvelo)\r\n */\r\nexport const ka = {\r\n  code: \"ka\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ka;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    regular: {\r\n      one: \"1 секундтан аз\",\r\n      singularNominative: \"{{count}} секундтан аз\",\r\n      singularGenitive: \"{{count}} секундтан аз\",\r\n      pluralGenitive: \"{{count}} секундтан аз\",\r\n    },\r\n    future: {\r\n      one: \"бір секундтан кейін\",\r\n      singularNominative: \"{{count}} секундтан кейін\",\r\n      singularGenitive: \"{{count}} секундтан кейін\",\r\n      pluralGenitive: \"{{count}} секундтан кейін\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    regular: {\r\n      singularNominative: \"{{count}} секунд\",\r\n      singularGenitive: \"{{count}} секунд\",\r\n      pluralGenitive: \"{{count}} секунд\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} секунд бұрын\",\r\n      singularGenitive: \"{{count}} секунд бұрын\",\r\n      pluralGenitive: \"{{count}} секунд бұрын\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} секундтан кейін\",\r\n      singularGenitive: \"{{count}} секундтан кейін\",\r\n      pluralGenitive: \"{{count}} секундтан кейін\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: (options) => {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        return \"жарты минут ішінде\";\r\n      } else {\r\n        return \"жарты минут бұрын\";\r\n      }\r\n    }\r\n\r\n    return \"жарты минут\";\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    regular: {\r\n      one: \"1 минуттан аз\",\r\n      singularNominative: \"{{count}} минуттан аз\",\r\n      singularGenitive: \"{{count}} минуттан аз\",\r\n      pluralGenitive: \"{{count}} минуттан аз\",\r\n    },\r\n    future: {\r\n      one: \"минуттан кем \",\r\n      singularNominative: \"{{count}} минуттан кем\",\r\n      singularGenitive: \"{{count}} минуттан кем\",\r\n      pluralGenitive: \"{{count}} минуттан кем\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    regular: {\r\n      singularNominative: \"{{count}} минут\",\r\n      singularGenitive: \"{{count}} минут\",\r\n      pluralGenitive: \"{{count}} минут\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} минут бұрын\",\r\n      singularGenitive: \"{{count}} минут бұрын\",\r\n      pluralGenitive: \"{{count}} минут бұрын\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} минуттан кейін\",\r\n      singularGenitive: \"{{count}} минуттан кейін\",\r\n      pluralGenitive: \"{{count}} минуттан кейін\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    regular: {\r\n      singularNominative: \"шамамен {{count}} сағат\",\r\n      singularGenitive: \"шамамен {{count}} сағат\",\r\n      pluralGenitive: \"шамамен {{count}} сағат\",\r\n    },\r\n    future: {\r\n      singularNominative: \"шамамен {{count}} сағаттан кейін\",\r\n      singularGenitive: \"шамамен {{count}} сағаттан кейін\",\r\n      pluralGenitive: \"шамамен {{count}} сағаттан кейін\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    regular: {\r\n      singularNominative: \"{{count}} сағат\",\r\n      singularGenitive: \"{{count}} сағат\",\r\n      pluralGenitive: \"{{count}} сағат\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    regular: {\r\n      singularNominative: \"{{count}} күн\",\r\n      singularGenitive: \"{{count}} күн\",\r\n      pluralGenitive: \"{{count}} күн\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} күннен кейін\",\r\n      singularGenitive: \"{{count}} күннен кейін\",\r\n      pluralGenitive: \"{{count}} күннен кейін\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    type: \"weeks\",\r\n    one: \"шамамен 1 апта\",\r\n    other: \"шамамен {{count}} апта\",\r\n  },\r\n\r\n  xWeeks: {\r\n    type: \"weeks\",\r\n    one: \"1 апта\",\r\n    other: \"{{count}} апта\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    regular: {\r\n      singularNominative: \"шамамен {{count}} ай\",\r\n      singularGenitive: \"шамамен {{count}} ай\",\r\n      pluralGenitive: \"шамамен {{count}} ай\",\r\n    },\r\n    future: {\r\n      singularNominative: \"шамамен {{count}} айдан кейін\",\r\n      singularGenitive: \"шамамен {{count}} айдан кейін\",\r\n      pluralGenitive: \"шамамен {{count}} айдан кейін\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    regular: {\r\n      singularNominative: \"{{count}} ай\",\r\n      singularGenitive: \"{{count}} ай\",\r\n      pluralGenitive: \"{{count}} ай\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    regular: {\r\n      singularNominative: \"шамамен {{count}} жыл\",\r\n      singularGenitive: \"шамамен {{count}} жыл\",\r\n      pluralGenitive: \"шамамен {{count}} жыл\",\r\n    },\r\n    future: {\r\n      singularNominative: \"шамамен {{count}} жылдан кейін\",\r\n      singularGenitive: \"шамамен {{count}} жылдан кейін\",\r\n      pluralGenitive: \"шамамен {{count}} жылдан кейін\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    regular: {\r\n      singularNominative: \"{{count}} жыл\",\r\n      singularGenitive: \"{{count}} жыл\",\r\n      pluralGenitive: \"{{count}} жыл\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} жылдан кейін\",\r\n      singularGenitive: \"{{count}} жылдан кейін\",\r\n      pluralGenitive: \"{{count}} жылдан кейін\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    regular: {\r\n      singularNominative: \"{{count}} жылдан астам\",\r\n      singularGenitive: \"{{count}} жылдан астам\",\r\n      pluralGenitive: \"{{count}} жылдан астам\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} жылдан астам\",\r\n      singularGenitive: \"{{count}} жылдан астам\",\r\n      pluralGenitive: \"{{count}} жылдан астам\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    regular: {\r\n      singularNominative: \"{{count}} жылға жақын\",\r\n      singularGenitive: \"{{count}} жылға жақын\",\r\n      pluralGenitive: \"{{count}} жылға жақын\",\r\n    },\r\n    future: {\r\n      singularNominative: \"{{count}} жылдан кейін\",\r\n      singularGenitive: \"{{count}} жылдан кейін\",\r\n      pluralGenitive: \"{{count}} жылдан кейін\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction declension(scheme, count) {\r\n  // scheme for count=1 exists\r\n  if (scheme.one && count === 1) return scheme.one;\r\n\r\n  const rem10 = count % 10;\r\n  const rem100 = count % 100;\r\n\r\n  // 1, 21, 31, ...\r\n  if (rem10 === 1 && rem100 !== 11) {\r\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\r\n\r\n    // 2, 3, 4, 22, 23, 24, 32 ...\r\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\r\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\r\n\r\n    // 5, 6, 7, 8, 9, 10, 11, ...\r\n  } else {\r\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\r\n  }\r\n}\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  if (typeof tokenValue === \"function\") return tokenValue(options);\r\n\r\n  if (tokenValue.type === \"weeks\") {\r\n    return count === 1\r\n      ? tokenValue.one\r\n      : tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      if (tokenValue.future) {\r\n        return declension(tokenValue.future, count);\r\n      } else {\r\n        return declension(tokenValue.regular, count) + \" кейін\";\r\n      }\r\n    } else {\r\n      if (tokenValue.past) {\r\n        return declension(tokenValue.past, count);\r\n      } else {\r\n        return declension(tokenValue.regular, count) + \" бұрын\";\r\n      }\r\n    }\r\n  } else {\r\n    return declension(tokenValue.regular, count);\r\n  }\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y 'ж.'\",\r\n  long: \"do MMMM y 'ж.'\",\r\n  medium: \"d MMM y 'ж.'\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"жексенбіде\",\r\n  \"дүйсенбіде\",\r\n  \"сейсенбіде\",\r\n  \"сәрсенбіде\",\r\n  \"бейсенбіде\",\r\n  \"жұмада\",\r\n  \"сенбіде\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'өткен \" + weekday + \" сағат' p'-де'\";\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'\" + weekday + \" сағат' p'-де'\";\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'келесі \" + weekday + \" сағат' p'-де'\";\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'кеше сағат' p'-де'\",\r\n  today: \"'бүгін сағат' p'-де'\",\r\n  tomorrow: \"'ертең сағат' p'-де'\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"б.з.д.\", \"б.з.\"],\r\n  abbreviated: [\"б.з.д.\", \"б.з.\"],\r\n  wide: [\"біздің заманымызға дейін\", \"біздің заманымыз\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-ші тоқ.\", \"2-ші тоқ.\", \"3-ші тоқ.\", \"4-ші тоқ.\"],\r\n  wide: [\"1-ші тоқсан\", \"2-ші тоқсан\", \"3-ші тоқсан\", \"4-ші тоқсан\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"Қ\", \"А\", \"Н\", \"С\", \"М\", \"М\", \"Ш\", \"Т\", \"Қ\", \"Қ\", \"Қ\", \"Ж\"],\r\n  abbreviated: [\r\n    \"қаң\",\r\n    \"ақп\",\r\n    \"нау\",\r\n    \"сәу\",\r\n    \"мам\",\r\n    \"мау\",\r\n    \"шіл\",\r\n    \"там\",\r\n    \"қыр\",\r\n    \"қаз\",\r\n    \"қар\",\r\n    \"жел\",\r\n  ],\r\n\r\n  wide: [\r\n    \"қаңтар\",\r\n    \"ақпан\",\r\n    \"наурыз\",\r\n    \"сәуір\",\r\n    \"мамыр\",\r\n    \"маусым\",\r\n    \"шілде\",\r\n    \"тамыз\",\r\n    \"қыркүйек\",\r\n    \"қазан\",\r\n    \"қараша\",\r\n    \"желтоқсан\",\r\n  ],\r\n};\r\nconst formattingMonthValues = {\r\n  narrow: [\"Қ\", \"А\", \"Н\", \"С\", \"М\", \"М\", \"Ш\", \"Т\", \"Қ\", \"Қ\", \"Қ\", \"Ж\"],\r\n  abbreviated: [\r\n    \"қаң\",\r\n    \"ақп\",\r\n    \"нау\",\r\n    \"сәу\",\r\n    \"мам\",\r\n    \"мау\",\r\n    \"шіл\",\r\n    \"там\",\r\n    \"қыр\",\r\n    \"қаз\",\r\n    \"қар\",\r\n    \"жел\",\r\n  ],\r\n\r\n  wide: [\r\n    \"қаңтар\",\r\n    \"ақпан\",\r\n    \"наурыз\",\r\n    \"сәуір\",\r\n    \"мамыр\",\r\n    \"маусым\",\r\n    \"шілде\",\r\n    \"тамыз\",\r\n    \"қыркүйек\",\r\n    \"қазан\",\r\n    \"қараша\",\r\n    \"желтоқсан\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Ж\", \"Д\", \"С\", \"С\", \"Б\", \"Ж\", \"С\"],\r\n  short: [\"жс\", \"дс\", \"сс\", \"ср\", \"бс\", \"жм\", \"сб\"],\r\n  abbreviated: [\"жс\", \"дс\", \"сс\", \"ср\", \"бс\", \"жм\", \"сб\"],\r\n  wide: [\r\n    \"жексенбі\",\r\n    \"дүйсенбі\",\r\n    \"сейсенбі\",\r\n    \"сәрсенбі\",\r\n    \"бейсенбі\",\r\n    \"жұма\",\r\n    \"сенбі\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ТД\",\r\n    pm: \"ТК\",\r\n    midnight: \"түн ортасы\",\r\n    noon: \"түс\",\r\n    morning: \"таң\",\r\n    afternoon: \"күндіз\",\r\n    evening: \"кеш\",\r\n    night: \"түн\",\r\n  },\r\n  wide: {\r\n    am: \"ТД\",\r\n    pm: \"ТК\",\r\n    midnight: \"түн ортасы\",\r\n    noon: \"түс\",\r\n    morning: \"таң\",\r\n    afternoon: \"күндіз\",\r\n    evening: \"кеш\",\r\n    night: \"түн\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ТД\",\r\n    pm: \"ТК\",\r\n    midnight: \"түн ортасында\",\r\n    noon: \"түс\",\r\n    morning: \"таң\",\r\n    afternoon: \"күн\",\r\n    evening: \"кеш\",\r\n    night: \"түн\",\r\n  },\r\n  wide: {\r\n    am: \"ТД\",\r\n    pm: \"ТК\",\r\n    midnight: \"түн ортасында\",\r\n    noon: \"түсте\",\r\n    morning: \"таңертең\",\r\n    afternoon: \"күндіз\",\r\n    evening: \"кеште\",\r\n    night: \"түнде\",\r\n  },\r\n};\r\n\r\nconst suffixes = {\r\n  0: \"-ші\",\r\n  1: \"-ші\",\r\n  2: \"-ші\",\r\n  3: \"-ші\",\r\n  4: \"-ші\",\r\n  5: \"-ші\",\r\n  6: \"-шы\",\r\n  7: \"-ші\",\r\n  8: \"-ші\",\r\n  9: \"-шы\",\r\n  10: \"-шы\",\r\n  20: \"-шы\",\r\n  30: \"-шы\",\r\n  40: \"-шы\",\r\n  50: \"-ші\",\r\n  60: \"-шы\",\r\n  70: \"-ші\",\r\n  80: \"-ші\",\r\n  90: \"-шы\",\r\n  100: \"-ші\",\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  const mod10 = number % 10;\r\n  const b = number >= 100 ? 100 : null;\r\n  const suffix =\r\n    suffixes[number] || suffixes[mod10] || (b && suffixes[b]) || \"\";\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(ші|шы))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((б )?з\\.?\\s?д\\.?)/i,\r\n  abbreviated: /^((б )?з\\.?\\s?д\\.?)/i,\r\n  wide: /^(біздің заманымызға дейін|біздің заманымыз|біздің заманымыздан)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^б/i, /^з/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?ші)? тоқ.?/i,\r\n  wide: /^[1234](-?ші)? тоқсан/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(қ|а|н|с|м|мау|ш|т|қыр|қаз|қар|ж)/i,\r\n  abbreviated: /^(қаң|ақп|нау|сәу|мам|мау|шіл|там|қыр|қаз|қар|жел)/i,\r\n  wide: /^(қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^қ/i,\r\n    /^а/i,\r\n    /^н/i,\r\n    /^с/i,\r\n    /^м/i,\r\n    /^м/i,\r\n    /^ш/i,\r\n    /^т/i,\r\n    /^қ/i,\r\n    /^қ/i,\r\n    /^қ/i,\r\n    /^ж/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^қаң/i,\r\n    /^ақп/i,\r\n    /^нау/i,\r\n    /^сәу/i,\r\n    /^мам/i,\r\n    /^мау/i,\r\n    /^шіл/i,\r\n    /^там/i,\r\n    /^қыр/i,\r\n    /^қаз/i,\r\n    /^қар/i,\r\n    /^жел/i,\r\n  ],\r\n\r\n  any: [\r\n    /^қ/i,\r\n    /^а/i,\r\n    /^н/i,\r\n    /^с/i,\r\n    /^м/i,\r\n    /^м/i,\r\n    /^ш/i,\r\n    /^т/i,\r\n    /^қ/i,\r\n    /^қ/i,\r\n    /^қ/i,\r\n    /^ж/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ж|д|с|с|б|ж|с)/i,\r\n  short: /^(жс|дс|сс|ср|бс|жм|сб)/i,\r\n  wide: /^(жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ж/i, /^д/i, /^с/i, /^с/i, /^б/i, /^ж/i, /^с/i],\r\n  short: [/^жс/i, /^дс/i, /^сс/i, /^ср/i, /^бс/i, /^жм/i, /^сб/i],\r\n  any: [\r\n    /^ж[ек]/i,\r\n    /^д[үй]/i,\r\n    /^сe[й]/i,\r\n    /^сә[р]/i,\r\n    /^б[ей]/i,\r\n    /^ж[ұм]/i,\r\n    /^се[н]/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i,\r\n  wide: /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i,\r\n  any: /^Т\\.?\\s?[ДК]\\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\\.?)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ТД/i,\r\n    pm: /^ТК/i,\r\n    midnight: /^түн орта/i,\r\n    noon: /^күндіз/i,\r\n    morning: /таң/i,\r\n    afternoon: /түс/i,\r\n    evening: /кеш/i,\r\n    night: /түн/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./kk/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./kk/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./kk/_lib/formatRelative.js\";\r\nimport { localize } from \"./kk/_lib/localize.js\";\r\nimport { match } from \"./kk/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Kazakh locale.\r\n * @language Kazakh\r\n * @iso-639-2 kaz\r\n * @author Nikita Bayev [@drugoi](https://github.com/drugoi)\r\n */\r\nexport const kk = {\r\n  code: \"kk\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default kk;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: \"តិចជាង {{count}} វិនាទី\",\r\n  xSeconds: \"{{count}} វិនាទី\",\r\n  halfAMinute: \"កន្លះនាទី\",\r\n  lessThanXMinutes: \"តិចជាង {{count}} នាទី\",\r\n  xMinutes: \"{{count}} នាទី\",\r\n  aboutXHours: \"ប្រហែល {{count}} ម៉ោង\",\r\n  xHours: \"{{count}} ម៉ោង\",\r\n  xDays: \"{{count}} ថ្ងៃ\",\r\n  aboutXWeeks: \"ប្រហែល {{count}} សប្តាហ៍\",\r\n  xWeeks: \"{{count}} សប្តាហ៍\",\r\n  aboutXMonths: \"ប្រហែល {{count}} ខែ\",\r\n  xMonths: \"{{count}} ខែ\",\r\n  aboutXYears: \"ប្រហែល {{count}} ឆ្នាំ\",\r\n  xYears: \"{{count}} ឆ្នាំ\",\r\n  overXYears: \"ជាង {{count}} ឆ្នាំ\",\r\n  almostXYears: \"ជិត {{count}} ឆ្នាំ\",\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  let result = tokenValue;\r\n\r\n  if (typeof count === \"number\") {\r\n    result = result.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"ក្នុងរយៈពេល \" + result;\r\n    } else {\r\n      return result + \"មុន\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a\",\r\n  long: \"h:mm:ss a\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'ម៉ោង' {{time}}\",\r\n  long: \"{{date}} 'ម៉ោង' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​មុនម៉ោង' p\",\r\n  yesterday: \"'ម្សិលមិញនៅម៉ោង' p\",\r\n  today: \"'ថ្ងៃនេះម៉ោង' p\",\r\n  tomorrow: \"'ថ្ងៃស្អែកម៉ោង' p\",\r\n  nextWeek: \"'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​ក្រោយម៉ោង' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ម.គស\", \"គស\"],\r\n  abbreviated: [\"មុនគ.ស\", \"គ.ស\"],\r\n  wide: [\"មុនគ្រិស្តសករាជ\", \"នៃគ្រិស្តសករាជ\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"ត្រីមាសទី 1\", \"ត្រីមាសទី 2\", \"ត្រីមាសទី 3\", \"ត្រីមាសទី 4\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"ម.ក\",\r\n    \"ក.ម\",\r\n    \"មិ\",\r\n    \"ម.ស\",\r\n    \"ឧ.ស\",\r\n    \"ម.ថ\",\r\n    \"ក.ដ\",\r\n    \"សី\",\r\n    \"កញ\",\r\n    \"តុ\",\r\n    \"វិ\",\r\n    \"ធ\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"មករា\",\r\n    \"កុម្ភៈ\",\r\n    \"មីនា\",\r\n    \"មេសា\",\r\n    \"ឧសភា\",\r\n    \"មិថុនា\",\r\n    \"កក្កដា\",\r\n    \"សីហា\",\r\n    \"កញ្ញា\",\r\n    \"តុលា\",\r\n    \"វិច្ឆិកា\",\r\n    \"ធ្នូ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"មករា\",\r\n    \"កុម្ភៈ\",\r\n    \"មីនា\",\r\n    \"មេសា\",\r\n    \"ឧសភា\",\r\n    \"មិថុនា\",\r\n    \"កក្កដា\",\r\n    \"សីហា\",\r\n    \"កញ្ញា\",\r\n    \"តុលា\",\r\n    \"វិច្ឆិកា\",\r\n    \"ធ្នូ\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"អា\", \"ច\", \"អ\", \"ព\", \"ព្រ\", \"សុ\", \"ស\"],\r\n  short: [\"អា\", \"ច\", \"អ\", \"ព\", \"ព្រ\", \"សុ\", \"ស\"],\r\n  abbreviated: [\"អា\", \"ច\", \"អ\", \"ព\", \"ព្រ\", \"សុ\", \"ស\"],\r\n  wide: [\"អាទិត្យ\", \"ចន្ទ\", \"អង្គារ\", \"ពុធ\", \"ព្រហស្បតិ៍\", \"សុក្រ\", \"សៅរ៍\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n  wide: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n  wide: {\r\n    am: \"ព្រឹក\",\r\n    pm: \"ល្ងាច\",\r\n    midnight: \"​ពេលកណ្ដាលអធ្រាត្រ\",\r\n    noon: \"ពេលថ្ងៃត្រង់\",\r\n    morning: \"ពេលព្រឹក\",\r\n    afternoon: \"ពេលរសៀល\",\r\n    evening: \"ពេលល្ងាច\",\r\n    night: \"ពេលយប់\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _) => {\r\n  const number = Number(dirtyNumber);\r\n  return number.toString();\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ម\\.)?គស/i,\r\n  abbreviated: /^(មុន)?គ\\.ស/i,\r\n  wide: /^(មុន|នៃ)គ្រិស្តសករាជ/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(ម|មុន)គ\\.?ស/i, /^(នៃ)?គ\\.?ស/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^(ត្រីមាស)(ទី)?\\s?[1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(ម\\.ក|ក\\.ម|មិ|ម\\.ស|ឧ\\.ស|ម\\.ថ|ក\\.ដ|សី|កញ|តុ|វិ|ធ)/i,\r\n  abbreviated:\r\n    /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i,\r\n  wide: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ម\\.ក/i,\r\n    /^ក\\.ម/i,\r\n    /^មិ/i,\r\n    /^ម\\.ស/i,\r\n    /^ឧ\\.ស/i,\r\n    /^ម\\.ថ/i,\r\n    /^ក\\.ដ/i,\r\n    /^សី/i,\r\n    /^កញ/i,\r\n    /^តុ/i,\r\n    /^វិ/i,\r\n    /^ធ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^មក/i,\r\n    /^កុ/i,\r\n    /^មីន/i,\r\n    /^មេ/i,\r\n    /^ឧស/i,\r\n    /^មិថ/i,\r\n    /^កក/i,\r\n    /^សី/i,\r\n    /^កញ/i,\r\n    /^តុ/i,\r\n    /^វិច/i,\r\n    /^ធ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,\r\n  short: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,\r\n  abbreviated: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i,\r\n  wide: /^(អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^ស/i],\r\n  any: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^សៅ/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i,\r\n  any: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i,\r\n};\r\n\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ព្រឹក/i,\r\n    pm: /^ល្ងាច/i,\r\n    midnight: /^ពេលកណ្ដាលអធ្រាត្រ/i,\r\n    noon: /^ពេលថ្ងៃត្រង់/i,\r\n    morning: /ពេលព្រឹក/i,\r\n    afternoon: /ពេលរសៀល/i,\r\n    evening: /ពេលល្ងាច/i,\r\n    night: /ពេលយប់/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./km/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./km/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./km/_lib/formatRelative.js\";\r\nimport { localize } from \"./km/_lib/localize.js\";\r\nimport { match } from \"./km/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Khmer locale (Cambodian).\r\n * @language Khmer\r\n * @iso-639-2 khm\r\n * @author Seanghay Yath [@seanghay](https://github.com/seanghay)\r\n */\r\nexport const km = {\r\n  code: \"km\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default km;\r\n", "// note: no implementation for weeks\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      default: \"1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n      future: \"1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n      past: \"1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n      future: \"{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n      past: \"{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      default: \"1 ಸೆಕೆಂಡ್\",\r\n      future: \"1 ಸೆಕೆಂಡ್‌ನಲ್ಲಿ\",\r\n      past: \"1 ಸೆಕೆಂಡ್ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ಸೆಕೆಂಡುಗಳು\",\r\n      future: \"{{count}} ಸೆಕೆಂಡ್‌ಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ಸೆಕೆಂಡ್ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    other: {\r\n      default: \"ಅರ್ಧ ನಿಮಿಷ\",\r\n      future: \"ಅರ್ಧ ನಿಮಿಷದಲ್ಲಿ\",\r\n      past: \"ಅರ್ಧ ನಿಮಿಷದ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      default: \"1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n      future: \"1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n      past: \"1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n      future: \"{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n      past: \"{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      default: \"1 ನಿಮಿಷ\",\r\n      future: \"1 ನಿಮಿಷದಲ್ಲಿ\",\r\n      past: \"1 ನಿಮಿಷದ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ನಿಮಿಷಗಳು\",\r\n      future: \"{{count}} ನಿಮಿಷಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ನಿಮಿಷಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      default: \"ಸುಮಾರು 1 ಗಂಟೆ\",\r\n      future: \"ಸುಮಾರು 1 ಗಂಟೆಯಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು 1 ಗಂಟೆ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"ಸುಮಾರು {{count}} ಗಂಟೆಗಳು\",\r\n      future: \"ಸುಮಾರು {{count}} ಗಂಟೆಗಳಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು {{count}} ಗಂಟೆಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      default: \"1 ಗಂಟೆ\",\r\n      future: \"1 ಗಂಟೆಯಲ್ಲಿ\",\r\n      past: \"1 ಗಂಟೆ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ಗಂಟೆಗಳು\",\r\n      future: \"{{count}} ಗಂಟೆಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ಗಂಟೆಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      default: \"1 ದಿನ\",\r\n      future: \"1 ದಿನದಲ್ಲಿ\",\r\n      past: \"1 ದಿನದ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ದಿನಗಳು\",\r\n      future: \"{{count}} ದಿನಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ದಿನಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  // TODO\r\n  // aboutXWeeks: {},\r\n\r\n  // TODO\r\n  // xWeeks: {},\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      default: \"ಸುಮಾರು 1 ತಿಂಗಳು\",\r\n      future: \"ಸುಮಾರು 1 ತಿಂಗಳಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು 1 ತಿಂಗಳ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"ಸುಮಾರು {{count}} ತಿಂಗಳು\",\r\n      future: \"ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      default: \"1 ತಿಂಗಳು\",\r\n      future: \"1 ತಿಂಗಳಲ್ಲಿ\",\r\n      past: \"1 ತಿಂಗಳ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ತಿಂಗಳು\",\r\n      future: \"{{count}} ತಿಂಗಳುಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      default: \"ಸುಮಾರು 1 ವರ್ಷ\",\r\n      future: \"ಸುಮಾರು 1 ವರ್ಷದಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು 1 ವರ್ಷದ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"ಸುಮಾರು {{count}} ವರ್ಷಗಳು\",\r\n      future: \"ಸುಮಾರು {{count}} ವರ್ಷಗಳಲ್ಲಿ\",\r\n      past: \"ಸುಮಾರು {{count}} ವರ್ಷಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      default: \"1 ವರ್ಷ\",\r\n      future: \"1 ವರ್ಷದಲ್ಲಿ\",\r\n      past: \"1 ವರ್ಷದ ಹಿಂದೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ವರ್ಷಗಳು\",\r\n      future: \"{{count}} ವರ್ಷಗಳಲ್ಲಿ\",\r\n      past: \"{{count}} ವರ್ಷಗಳ ಹಿಂದೆ\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      default: \"1 ವರ್ಷದ ಮೇಲೆ\",\r\n      future: \"1 ವರ್ಷದ ಮೇಲೆ\",\r\n      past: \"1 ವರ್ಷದ ಮೇಲೆ\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ವರ್ಷಗಳ ಮೇಲೆ\",\r\n      future: \"{{count}} ವರ್ಷಗಳ ಮೇಲೆ\",\r\n      past: \"{{count}} ವರ್ಷಗಳ ಮೇಲೆ\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      default: \"ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ\",\r\n      future: \"ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ\",\r\n      past: \"ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ\",\r\n    },\r\n    other: {\r\n      default: \"ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ\",\r\n      future: \"ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ\",\r\n      past: \"ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction getResultByTense(parentToken, options) {\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return parentToken.future;\r\n    } else {\r\n      return parentToken.past;\r\n    }\r\n  }\r\n  return parentToken.default;\r\n}\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  if (tokenValue.one && count === 1) {\r\n    result = getResultByTense(tokenValue.one, options);\r\n  } else {\r\n    result = getResultByTense(tokenValue.other, options);\r\n  }\r\n\r\n  return result.replace(\"{{count}}\", String(count));\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM d, y\", // CLDR 1816\r\n  long: \"MMMM d, y\", // CLDR 1817\r\n  medium: \"MMM d, y\", // CLDR 1818\r\n  short: \"d/M/yy\", // CLDR 1819\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"hh:mm:ss a zzzz\", // CLDR 1820\r\n  long: \"hh:mm:ss a z\", // CLDR 1821\r\n  medium: \"hh:mm:ss a\", // CLDR 1822\r\n  short: \"hh:mm a\", // CLDR 1823\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\", // CLDR 1824\r\n  long: \"{{date}} {{time}}\", // CLDR 1825\r\n  medium: \"{{date}} {{time}}\", // CLDR 1826\r\n  short: \"{{date}} {{time}}\", // CLDR 1827\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ಕಳೆದ' eeee p 'ಕ್ಕೆ'\",\r\n  yesterday: \"'ನಿನ್ನೆ' p 'ಕ್ಕೆ'\",\r\n  today: \"'ಇಂದು' p 'ಕ್ಕೆ'\",\r\n  tomorrow: \"'ನಾಳೆ' p 'ಕ್ಕೆ'\",\r\n  nextWeek: \"eeee p 'ಕ್ಕೆ'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html\r\n\r\nconst eraValues = {\r\n  narrow: [\"ಕ್ರಿ.ಪೂ\", \"ಕ್ರಿ.ಶ\"],\r\n  abbreviated: [\"ಕ್ರಿ.ಪೂ\", \"ಕ್ರಿ.ಶ\"], // CLDR #1618, #1620\r\n  wide: [\"ಕ್ರಿಸ್ತ ಪೂರ್ವ\", \"ಕ್ರಿಸ್ತ ಶಕ\"], // CLDR #1614, #1616\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"ತ್ರೈ 1\", \"ತ್ರೈ 2\", \"ತ್ರೈ 3\", \"ತ್ರೈ 4\"], // CLDR #1630 - #1638\r\n  wide: [\"1ನೇ ತ್ರೈಮಾಸಿಕ\", \"2ನೇ ತ್ರೈಮಾಸಿಕ\", \"3ನೇ ತ್ರೈಮಾಸಿಕ\", \"4ನೇ ತ್ರೈಮಾಸಿಕ\"],\r\n  // CLDR #1622 - #1629\r\n};\r\n\r\n// CLDR #1646 - #1717\r\nconst monthValues = {\r\n  narrow: [\"ಜ\", \"ಫೆ\", \"ಮಾ\", \"ಏ\", \"ಮೇ\", \"ಜೂ\", \"ಜು\", \"ಆ\", \"ಸೆ\", \"ಅ\", \"ನ\", \"ಡಿ\"],\r\n\r\n  abbreviated: [\r\n    \"ಜನ\",\r\n    \"ಫೆಬ್ರ\",\r\n    \"ಮಾರ್ಚ್\",\r\n    \"ಏಪ್ರಿ\",\r\n    \"ಮೇ\",\r\n    \"ಜೂನ್\",\r\n    \"ಜುಲೈ\",\r\n    \"ಆಗ\",\r\n    \"ಸೆಪ್ಟೆಂ\",\r\n    \"ಅಕ್ಟೋ\",\r\n    \"ನವೆಂ\",\r\n    \"ಡಿಸೆಂ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ಜನವರಿ\",\r\n    \"ಫೆಬ್ರವರಿ\",\r\n    \"ಮಾರ್ಚ್\",\r\n    \"ಏಪ್ರಿಲ್\",\r\n    \"ಮೇ\",\r\n    \"ಜೂನ್\",\r\n    \"ಜುಲೈ\",\r\n    \"ಆಗಸ್ಟ್\",\r\n    \"ಸೆಪ್ಟೆಂಬರ್\",\r\n    \"ಅಕ್ಟೋಬರ್\",\r\n    \"ನವೆಂಬರ್\",\r\n    \"ಡಿಸೆಂಬರ್\",\r\n  ],\r\n};\r\n\r\n// CLDR #1718 - #1773\r\nconst dayValues = {\r\n  narrow: [\"ಭಾ\", \"ಸೋ\", \"ಮಂ\", \"ಬು\", \"ಗು\", \"ಶು\", \"ಶ\"],\r\n  short: [\"ಭಾನು\", \"ಸೋಮ\", \"ಮಂಗಳ\", \"ಬುಧ\", \"ಗುರು\", \"ಶುಕ್ರ\", \"ಶನಿ\"],\r\n  abbreviated: [\"ಭಾನು\", \"ಸೋಮ\", \"ಮಂಗಳ\", \"ಬುಧ\", \"ಗುರು\", \"ಶುಕ್ರ\", \"ಶನಿ\"],\r\n  wide: [\r\n    \"ಭಾನುವಾರ\",\r\n    \"ಸೋಮವಾರ\",\r\n    \"ಮಂಗಳವಾರ\",\r\n    \"ಬುಧವಾರ\",\r\n    \"ಗುರುವಾರ\",\r\n    \"ಶುಕ್ರವಾರ\",\r\n    \"ಶನಿವಾರ\",\r\n  ],\r\n};\r\n\r\n// CLDR #1774 - #1815\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ಪೂರ್ವಾಹ್ನ\",\r\n    pm: \"ಅಪರಾಹ್ನ\",\r\n    midnight: \"ಮಧ್ಯರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾಹ್ನ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾಹ್ನ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ಪೂರ್ವಾಹ್ನ\",\r\n    pm: \"ಅಪರಾಹ್ನ\",\r\n    midnight: \"ಮಧ್ಯರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n  wide: {\r\n    am: \"ಪೂರ್ವಾಹ್ನ\",\r\n    pm: \"ಅಪರಾಹ್ನ\",\r\n    midnight: \"ಮಧ್ಯರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ಪೂ\",\r\n    pm: \"ಅ\",\r\n    midnight: \"ಮಧ್ಯರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ಪೂರ್ವಾಹ್ನ\",\r\n    pm: \"ಅಪರಾಹ್ನ\",\r\n    midnight: \"ಮಧ್ಯ ರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n  wide: {\r\n    am: \"ಪೂರ್ವಾಹ್ನ\",\r\n    pm: \"ಅಪರಾಹ್ನ\",\r\n    midnight: \"ಮಧ್ಯ ರಾತ್ರಿ\",\r\n    noon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    morning: \"ಬೆಳಗ್ಗೆ\",\r\n    afternoon: \"ಮಧ್ಯಾನ್ಹ\",\r\n    evening: \"ಸಂಜೆ\",\r\n    night: \"ರಾತ್ರಿ\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"ನೇ\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(ನೇ|ನೆ)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ)/i,\r\n  abbreviated: /^(ಕ್ರಿ\\.?\\s?ಪೂ\\.?|ಕ್ರಿ\\.?\\s?ಶ\\.?|ಪ್ರ\\.?\\s?ಶ\\.?)/i,\r\n  wide: /^(ಕ್ರಿಸ್ತ ಪೂರ್ವ|ಕ್ರಿಸ್ತ ಶಕ|ಪ್ರಸಕ್ತ ಶಕ)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ಪೂ/i, /^(ಶ|ಪ್ರ)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^ತ್ರೈ[1234]|ತ್ರೈ [1234]| [1234]ತ್ರೈ/i,\r\n  wide: /^[1234](ನೇ)? ತ್ರೈಮಾಸಿಕ/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(ಜೂ|ಜು|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಆ|ಸೆ|ಅ|ನ|ಡಿ)/i,\r\n  abbreviated:\r\n    /^(ಜನ|ಫೆಬ್ರ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗ|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ)/i,\r\n  wide: /^(ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ಜ$/i,\r\n    /^ಫೆ/i,\r\n    /^ಮಾ/i,\r\n    /^ಏ/i,\r\n    /^ಮೇ/i,\r\n    /^ಜೂ/i,\r\n    /^ಜು$/i,\r\n    /^ಆ/i,\r\n    /^ಸೆ/i,\r\n    /^ಅ/i,\r\n    /^ನ/i,\r\n    /^ಡಿ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ಜನ/i,\r\n    /^ಫೆ/i,\r\n    /^ಮಾ/i,\r\n    /^ಏ/i,\r\n    /^ಮೇ/i,\r\n    /^ಜೂನ್/i,\r\n    /^ಜುಲೈ/i,\r\n    /^ಆ/i,\r\n    /^ಸೆ/i,\r\n    /^ಅ/i,\r\n    /^ನ/i,\r\n    /^ಡಿ/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ಭಾ|ಸೋ|ಮ|ಬು|ಗು|ಶು|ಶ)/i,\r\n  short: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,\r\n  abbreviated: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i,\r\n  wide: /^(ಭಾನುವಾರ|ಸೋಮವಾರ|ಮಂಗಳವಾರ|ಬುಧವಾರ|ಗುರುವಾರ|ಶುಕ್ರವಾರ|ಶನಿವಾರ)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i],\r\n  any: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ಪೂ|ಅ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i,\r\n  any: /^(ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ಪೂ/i,\r\n    pm: /^ಅ/i,\r\n    midnight: /ಮಧ್ಯರಾತ್ರಿ/i,\r\n    noon: /ಮಧ್ಯಾನ್ಹ/i,\r\n    morning: /ಬೆಳಗ್ಗೆ/i,\r\n    afternoon: /ಮಧ್ಯಾನ್ಹ/i,\r\n    evening: /ಸಂಜೆ/i,\r\n    night: /ರಾತ್ರಿ/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./kn/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./kn/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./kn/_lib/formatRelative.js\";\r\nimport { localize } from \"./kn/_lib/localize.js\";\r\nimport { match } from \"./kn/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Kannada locale (India).\r\n * @language Kannada\r\n * @iso-639-2 kan\r\n * @author Manjunatha Gouli [@developergouli](https://github.com/developergouli)\r\n */\r\nexport const kn = {\r\n  code: \"kn\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default kn;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"1초 미만\",\r\n    other: \"{{count}}초 미만\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1초\",\r\n    other: \"{{count}}초\",\r\n  },\r\n\r\n  halfAMinute: \"30초\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"1분 미만\",\r\n    other: \"{{count}}분 미만\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1분\",\r\n    other: \"{{count}}분\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"약 1시간\",\r\n    other: \"약 {{count}}시간\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1시간\",\r\n    other: \"{{count}}시간\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1일\",\r\n    other: \"{{count}}일\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"약 1주\",\r\n    other: \"약 {{count}}주\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1주\",\r\n    other: \"{{count}}주\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"약 1개월\",\r\n    other: \"약 {{count}}개월\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1개월\",\r\n    other: \"{{count}}개월\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"약 1년\",\r\n    other: \"약 {{count}}년\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1년\",\r\n    other: \"{{count}}년\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1년 이상\",\r\n    other: \"{{count}}년 이상\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"거의 1년\",\r\n    other: \"거의 {{count}}년\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" 후\";\r\n    } else {\r\n      return result + \" 전\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y년 M월 d일 EEEE\",\r\n  long: \"y년 M월 d일\",\r\n  medium: \"y.MM.dd\",\r\n  short: \"y.MM.dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"a H시 mm분 ss초 zzzz\",\r\n  long: \"a H:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'지난' eeee p\",\r\n  yesterday: \"'어제' p\",\r\n  today: \"'오늘' p\",\r\n  tomorrow: \"'내일' p\",\r\n  nextWeek: \"'다음' eeee p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"BC\", \"AD\"],\r\n  abbreviated: [\"BC\", \"AD\"],\r\n  wide: [\"기원전\", \"서기\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1분기\", \"2분기\", \"3분기\", \"4분기\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\r\n\r\n  abbreviated: [\r\n    \"1월\",\r\n    \"2월\",\r\n    \"3월\",\r\n    \"4월\",\r\n    \"5월\",\r\n    \"6월\",\r\n    \"7월\",\r\n    \"8월\",\r\n    \"9월\",\r\n    \"10월\",\r\n    \"11월\",\r\n    \"12월\",\r\n  ],\r\n\r\n  wide: [\r\n    \"1월\",\r\n    \"2월\",\r\n    \"3월\",\r\n    \"4월\",\r\n    \"5월\",\r\n    \"6월\",\r\n    \"7월\",\r\n    \"8월\",\r\n    \"9월\",\r\n    \"10월\",\r\n    \"11월\",\r\n    \"12월\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\r\n  short: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\r\n  abbreviated: [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"],\r\n  wide: [\"일요일\", \"월요일\", \"화요일\", \"수요일\", \"목요일\", \"금요일\", \"토요일\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n  abbreviated: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n  wide: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n  abbreviated: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n  wide: {\r\n    am: \"오전\",\r\n    pm: \"오후\",\r\n    midnight: \"자정\",\r\n    noon: \"정오\",\r\n    morning: \"아침\",\r\n    afternoon: \"오후\",\r\n    evening: \"저녁\",\r\n    night: \"밤\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = String(options?.unit);\r\n\r\n  switch (unit) {\r\n    case \"minute\":\r\n    case \"second\":\r\n      return String(number);\r\n    case \"date\":\r\n      return number + \"일\";\r\n    default:\r\n      return number + \"번째\";\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(일|번째)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\r\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\r\n  wide: /^(기원전|서기)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(bc|기원전)/i, /^(ad|서기)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234]사?분기/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(1[012]|[123456789])/,\r\n  abbreviated: /^(1[012]|[123456789])월/i,\r\n  wide: /^(1[012]|[123456789])월/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^1월?$/,\r\n    /^2/,\r\n    /^3/,\r\n    /^4/,\r\n    /^5/,\r\n    /^6/,\r\n    /^7/,\r\n    /^8/,\r\n    /^9/,\r\n    /^10/,\r\n    /^11/,\r\n    /^12/,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[일월화수목금토]/,\r\n  short: /^[일월화수목금토]/,\r\n  abbreviated: /^[일월화수목금토]/,\r\n  wide: /^[일월화수목금토]요일/,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^일/, /^월/, /^화/, /^수/, /^목/, /^금/, /^토/],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^(am|오전)/i,\r\n    pm: /^(pm|오후)/i,\r\n    midnight: /^자정/i,\r\n    noon: /^정오/i,\r\n    morning: /^아침/i,\r\n    afternoon: /^오후/i,\r\n    evening: /^저녁/i,\r\n    night: /^밤/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ko/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ko/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ko/_lib/formatRelative.js\";\r\nimport { localize } from \"./ko/_lib/localize.js\";\r\nimport { match } from \"./ko/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Korean locale.\r\n * @language Korean\r\n * @iso-639-2 kor\r\n * @author Hong Chulju [@angdev](https://github.com/angdev)\r\n * @author Lee Seoyoen [@iamssen](https://github.com/iamssen)\r\n * @author Taiki IKeda [@so99ynoodles](https://github.com/so99ynoodles)\r\n */\r\nexport const ko = {\r\n  code: \"ko\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ko;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    standalone: {\r\n      one: \"manner wéi eng Sekonn\",\r\n      other: \"manner wéi {{count}} Sekonnen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"manner wéi enger Sekonn\",\r\n      other: \"manner wéi {{count}} Sekonnen\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    standalone: {\r\n      one: \"eng Sekonn\",\r\n      other: \"{{count}} Sekonnen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"enger Sekonn\",\r\n      other: \"{{count}} Sekonnen\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    standalone: \"eng hallef Minutt\",\r\n    withPreposition: \"enger hallwer Minutt\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    standalone: {\r\n      one: \"manner wéi eng Minutt\",\r\n      other: \"manner wéi {{count}} Minutten\",\r\n    },\r\n    withPreposition: {\r\n      one: \"manner wéi enger Minutt\",\r\n      other: \"manner wéi {{count}} Minutten\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    standalone: {\r\n      one: \"eng Minutt\",\r\n      other: \"{{count}} Minutten\",\r\n    },\r\n    withPreposition: {\r\n      one: \"enger Minutt\",\r\n      other: \"{{count}} Minutten\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    standalone: {\r\n      one: \"ongeféier eng Stonn\",\r\n      other: \"ongeféier {{count}} Stonnen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ongeféier enger Stonn\",\r\n      other: \"ongeféier {{count}} Stonnen\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    standalone: {\r\n      one: \"eng Stonn\",\r\n      other: \"{{count}} Stonnen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"enger Stonn\",\r\n      other: \"{{count}} Stonnen\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    standalone: {\r\n      one: \"een Dag\",\r\n      other: \"{{count}} Deeg\",\r\n    },\r\n    withPreposition: {\r\n      one: \"engem Dag\",\r\n      other: \"{{count}} Deeg\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    standalone: {\r\n      one: \"ongeféier eng Woch\",\r\n      other: \"ongeféier {{count}} Wochen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ongeféier enger Woche\",\r\n      other: \"ongeféier {{count}} Wochen\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    standalone: {\r\n      one: \"eng Woch\",\r\n      other: \"{{count}} Wochen\",\r\n    },\r\n    withPreposition: {\r\n      one: \"enger Woch\",\r\n      other: \"{{count}} Wochen\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    standalone: {\r\n      one: \"ongeféier ee Mount\",\r\n      other: \"ongeféier {{count}} Méint\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ongeféier engem Mount\",\r\n      other: \"ongeféier {{count}} Méint\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    standalone: {\r\n      one: \"ee Mount\",\r\n      other: \"{{count}} Méint\",\r\n    },\r\n    withPreposition: {\r\n      one: \"engem Mount\",\r\n      other: \"{{count}} Méint\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    standalone: {\r\n      one: \"ongeféier ee Joer\",\r\n      other: \"ongeféier {{count}} Joer\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ongeféier engem Joer\",\r\n      other: \"ongeféier {{count}} Joer\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    standalone: {\r\n      one: \"ee Joer\",\r\n      other: \"{{count}} Joer\",\r\n    },\r\n    withPreposition: {\r\n      one: \"engem Joer\",\r\n      other: \"{{count}} Joer\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    standalone: {\r\n      one: \"méi wéi ee Joer\",\r\n      other: \"méi wéi {{count}} Joer\",\r\n    },\r\n    withPreposition: {\r\n      one: \"méi wéi engem Joer\",\r\n      other: \"méi wéi {{count}} Joer\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    standalone: {\r\n      one: \"bal ee Joer\",\r\n      other: \"bal {{count}} Joer\",\r\n    },\r\n    withPreposition: {\r\n      one: \"bal engem Joer\",\r\n      other: \"bal {{count}} Joer\",\r\n    },\r\n  },\r\n};\r\n\r\nconst EXCEPTION_CONSONANTS = [\"d\", \"h\", \"n\", \"t\", \"z\"];\r\nconst VOWELS = [\"a,\", \"e\", \"i\", \"o\", \"u\"];\r\nconst DIGITS_SPOKEN_N_NEEDED = [0, 1, 2, 3, 8, 9];\r\nconst FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED = [40, 50, 60, 70];\r\n\r\n// Eifeler Regel\r\nfunction isFinalNNeeded(nextWords) {\r\n  const firstLetter = nextWords.charAt(0).toLowerCase();\r\n  if (\r\n    VOWELS.indexOf(firstLetter) != -1 ||\r\n    EXCEPTION_CONSONANTS.indexOf(firstLetter) != -1\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // Numbers would need to converted into words for checking.\r\n  // Therefore, I have listed the digits that require a preceeding n with a few exceptions.\r\n  const firstWord = nextWords.split(\" \")[0];\r\n  const number = parseInt(firstWord);\r\n  if (\r\n    !isNaN(number) &&\r\n    DIGITS_SPOKEN_N_NEEDED.indexOf(number % 10) != -1 &&\r\n    FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED.indexOf(\r\n      parseInt(firstWord.substring(0, 2)),\r\n    ) == -1\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  // Omit other checks as they are not expected here.\r\n  return false;\r\n}\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  const usageGroup = options?.addSuffix\r\n    ? tokenValue.withPreposition\r\n    : tokenValue.standalone;\r\n\r\n  if (typeof usageGroup === \"string\") {\r\n    result = usageGroup;\r\n  } else if (count === 1) {\r\n    result = usageGroup.one;\r\n  } else {\r\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"a\" + (isFinalNNeeded(result) ? \"n\" : \"\") + \" \" + result;\r\n    } else {\r\n      return \"viru\" + (isFinalNNeeded(result) ? \"n\" : \"\") + \" \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y\", // Méindeg, 7. Januar 2018\r\n  long: \"do MMMM y\", // 7. Januar 2018\r\n  medium: \"do MMM y\", // 7. Jan 2018\r\n  short: \"dd.MM.yy\", // 07.01.18\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'um' {{time}}\",\r\n  long: \"{{date}} 'um' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    const day = date.getDay();\r\n    let result = \"'läschte\";\r\n    if (day === 2 || day === 4) {\r\n      // Eifeler Regel: Add an n before the consonant d; Here \"Dënschdeg\" \"and Donneschde\".\r\n      result += \"n\";\r\n    }\r\n    result += \"' eeee 'um' p\";\r\n    return result;\r\n  },\r\n  yesterday: \"'gëschter um' p\",\r\n  today: \"'haut um' p\",\r\n  tomorrow: \"'moien um' p\",\r\n  nextWeek: \"eeee 'um' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\r\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\r\n  wide: [\"viru Christus\", \"no Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mäe\",\r\n    \"Abr\",\r\n    \"Mee\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Dez\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Januar\",\r\n    \"Februar\",\r\n    \"Mäerz\",\r\n    \"Abrëll\",\r\n    \"Mee\",\r\n    \"Juni\",\r\n    \"Juli\",\r\n    \"August\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Dezember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\r\n  short: [\"So\", \"Mé\", \"Dë\", \"Më\", \"Do\", \"Fr\", \"Sa\"],\r\n  abbreviated: [\"So.\", \"Mé.\", \"Dë.\", \"Më.\", \"Do.\", \"Fr.\", \"Sa.\"],\r\n  wide: [\r\n    \"Sonndeg\",\r\n    \"Méindeg\",\r\n    \"Dënschdeg\",\r\n    \"Mëttwoch\",\r\n    \"Donneschdeg\",\r\n    \"Freideg\",\r\n    \"Samschdeg\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"mo.\",\r\n    pm: \"nomë.\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"Mëtteg\",\r\n    morning: \"Moien\",\r\n    afternoon: \"Nomëtteg\",\r\n    evening: \"Owend\",\r\n    night: \"Nuecht\",\r\n  },\r\n  abbreviated: {\r\n    am: \"moies\",\r\n    pm: \"nomëttes\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"Mëtteg\",\r\n    morning: \"Moien\",\r\n    afternoon: \"Nomëtteg\",\r\n    evening: \"Owend\",\r\n    night: \"Nuecht\",\r\n  },\r\n  wide: {\r\n    am: \"moies\",\r\n    pm: \"nomëttes\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"Mëtteg\",\r\n    morning: \"Moien\",\r\n    afternoon: \"Nomëtteg\",\r\n    evening: \"Owend\",\r\n    night: \"Nuecht\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"mo.\",\r\n    pm: \"nom.\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"mëttes\",\r\n    morning: \"moies\",\r\n    afternoon: \"nomëttes\",\r\n    evening: \"owes\",\r\n    night: \"nuets\",\r\n  },\r\n  abbreviated: {\r\n    am: \"moies\",\r\n    pm: \"nomëttes\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"mëttes\",\r\n    morning: \"moies\",\r\n    afternoon: \"nomëttes\",\r\n    evening: \"owes\",\r\n    night: \"nuets\",\r\n  },\r\n  wide: {\r\n    am: \"moies\",\r\n    pm: \"nomëttes\",\r\n    midnight: \"Mëtternuecht\",\r\n    noon: \"mëttes\",\r\n    morning: \"moies\",\r\n    afternoon: \"nomëttes\",\r\n    evening: \"owes\",\r\n    night: \"nuets\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\r\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\r\n  wide: /^(viru Christus|virun eiser Zäitrechnung|no Christus|eiser Zäitrechnung)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^v/i, /^n/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](\\.)? Quartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mäe|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,\r\n  wide: /^(januar|februar|mäerz|abrëll|mee|juni|juli|august|september|oktober|november|dezember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mä/i,\r\n    /^ab/i,\r\n    /^me/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smdf]/i,\r\n  short: /^(so|mé|dë|më|do|fr|sa)/i,\r\n  abbreviated: /^(son?|méi?|dën?|mët?|don?|fre?|sam?)\\.?/i,\r\n  wide: /^(sonndeg|méindeg|dënschdeg|mëttwoch|donneschdeg|freideg|samschdeg)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^so/i, /^mé/i, /^dë/i, /^më/i, /^do/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(mo\\.?|nomë\\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,\r\n  abbreviated:\r\n    /^(moi\\.?|nomët\\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,\r\n  wide: /^(moies|nomëttes|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^m/i,\r\n    pm: /^n/i,\r\n    midnight: /^Mëtter/i,\r\n    noon: /^mëttes/i,\r\n    morning: /moies/i,\r\n    afternoon: /nomëttes/i, // will never be matched. Afternoon is matched by `pm`\r\n    evening: /owes/i,\r\n    night: /nuets/i, // will never be matched. Night is matched by `pm`\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./lb/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./lb/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./lb/_lib/formatRelative.js\";\r\nimport { localize } from \"./lb/_lib/localize.js\";\r\nimport { match } from \"./lb/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Luxembourgish locale.\r\n * @language Luxembourgish\r\n * @iso-639-2 ltz\r\n * @author Daniel Waxweiler [@dwaxweiler](https://github.com/dwaxweiler)\r\n */\r\nexport const lb = {\r\n  code: \"lb\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default lb;\r\n", "const translations = {\r\n  xseconds_other: \"sekundė_sekundžių_sekundes\",\r\n  xminutes_one: \"minutė_minutės_minutę\",\r\n  xminutes_other: \"minutės_minučių_minutes\",\r\n  xhours_one: \"valanda_valandos_valandą\",\r\n  xhours_other: \"valandos_valandų_valandas\",\r\n  xdays_one: \"diena_dienos_dieną\",\r\n  xdays_other: \"dienos_dienų_dienas\",\r\n  xweeks_one: \"savaitė_savaitės_savaitę\",\r\n  xweeks_other: \"savaitės_savaičių_savaites\",\r\n  xmonths_one: \"mėnuo_mėnesio_mėnesį\",\r\n  xmonths_other: \"mėnesiai_mėnesių_mėnesius\",\r\n  xyears_one: \"metai_metų_metus\",\r\n  xyears_other: \"metai_metų_metus\",\r\n  about: \"apie\",\r\n  over: \"daugiau nei\",\r\n  almost: \"beveik\",\r\n  lessthan: \"mažiau nei\",\r\n};\r\n\r\nconst translateSeconds = (_number, addSuffix, _key, isFuture) => {\r\n  if (!addSuffix) {\r\n    return \"kelios sekundės\";\r\n  } else {\r\n    return isFuture ? \"kelių sekundžių\" : \"kelias sekundes\";\r\n  }\r\n};\r\n\r\nconst translateSingular = (_number, addSuffix, key, isFuture) => {\r\n  return !addSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\r\n};\r\n\r\nconst translate = (number, addSuffix, key, isFuture) => {\r\n  const result = number + \" \";\r\n  if (number === 1) {\r\n    return result + translateSingular(number, addSuffix, key, isFuture);\r\n  } else if (!addSuffix) {\r\n    return result + (special(number) ? forms(key)[1] : forms(key)[0]);\r\n  } else {\r\n    if (isFuture) {\r\n      return result + forms(key)[1];\r\n    } else {\r\n      return result + (special(number) ? forms(key)[1] : forms(key)[2]);\r\n    }\r\n  }\r\n};\r\n\r\nfunction special(number) {\r\n  return number % 10 === 0 || (number > 10 && number < 20);\r\n}\r\n\r\nfunction forms(key) {\r\n  return translations[key].split(\"_\");\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: translateSeconds,\r\n    other: translate,\r\n  },\r\n\r\n  xSeconds: {\r\n    one: translateSeconds,\r\n    other: translate,\r\n  },\r\n\r\n  halfAMinute: \"pusė minutės\",\r\n\r\n  lessThanXMinutes: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xMinutes: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xHours: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xDays: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xWeeks: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xMonths: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  xYears: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  overXYears: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n\r\n  almostXYears: {\r\n    one: translateSingular,\r\n    other: translate,\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const adverb = token.match(/about|over|almost|lessthan/i);\r\n  const unit = adverb ? token.replace(adverb[0], \"\") : token;\r\n\r\n  const isFuture = options?.comparison !== undefined && options.comparison > 0;\r\n\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one(\r\n      count,\r\n      options?.addSuffix === true,\r\n      unit.toLowerCase() + \"_one\",\r\n      isFuture,\r\n    );\r\n  } else {\r\n    result = tokenValue.other(\r\n      count,\r\n      options?.addSuffix === true,\r\n      unit.toLowerCase() + \"_other\",\r\n      isFuture,\r\n    );\r\n  }\r\n\r\n  if (adverb) {\r\n    const key = adverb[0].toLowerCase();\r\n    result = translations[key] + \" \" + result;\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"po \" + result;\r\n    } else {\r\n      return \"prieš \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y 'm'. MMMM d 'd'., EEEE\",\r\n  long: \"y 'm'. MMMM d 'd'.\",\r\n  medium: \"y-MM-dd\",\r\n  short: \"y-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'Praėjusį' eeee p\",\r\n  yesterday: \"'Vakar' p\",\r\n  today: \"'Šiandien' p\",\r\n  tomorrow: \"'Rytoj' p\",\r\n  nextWeek: \"eeee p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"pr. Kr.\", \"po Kr.\"],\r\n  abbreviated: [\"pr. Kr.\", \"po Kr.\"],\r\n  wide: [\"prieš Kristų\", \"po Kristaus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"I ketv.\", \"II ketv.\", \"III ketv.\", \"IV ketv.\"],\r\n  wide: [\"I ketvirtis\", \"II ketvirtis\", \"III ketvirtis\", \"IV ketvirtis\"],\r\n};\r\n\r\nconst formattingQuarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"I k.\", \"II k.\", \"III k.\", \"IV k.\"],\r\n  wide: [\"I ketvirtis\", \"II ketvirtis\", \"III ketvirtis\", \"IV ketvirtis\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"S\", \"V\", \"K\", \"B\", \"G\", \"B\", \"L\", \"R\", \"R\", \"S\", \"L\", \"G\"],\r\n  abbreviated: [\r\n    \"saus.\",\r\n    \"vas.\",\r\n    \"kov.\",\r\n    \"bal.\",\r\n    \"geg.\",\r\n    \"birž.\",\r\n    \"liep.\",\r\n    \"rugp.\",\r\n    \"rugs.\",\r\n    \"spal.\",\r\n    \"lapkr.\",\r\n    \"gruod.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"sausis\",\r\n    \"vasaris\",\r\n    \"kovas\",\r\n    \"balandis\",\r\n    \"gegužė\",\r\n    \"birželis\",\r\n    \"liepa\",\r\n    \"rugpjūtis\",\r\n    \"rugsėjis\",\r\n    \"spalis\",\r\n    \"lapkritis\",\r\n    \"gruodis\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"S\", \"V\", \"K\", \"B\", \"G\", \"B\", \"L\", \"R\", \"R\", \"S\", \"L\", \"G\"],\r\n  abbreviated: [\r\n    \"saus.\",\r\n    \"vas.\",\r\n    \"kov.\",\r\n    \"bal.\",\r\n    \"geg.\",\r\n    \"birž.\",\r\n    \"liep.\",\r\n    \"rugp.\",\r\n    \"rugs.\",\r\n    \"spal.\",\r\n    \"lapkr.\",\r\n    \"gruod.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"sausio\",\r\n    \"vasario\",\r\n    \"kovo\",\r\n    \"balandžio\",\r\n    \"gegužės\",\r\n    \"birželio\",\r\n    \"liepos\",\r\n    \"rugpjūčio\",\r\n    \"rugsėjo\",\r\n    \"spalio\",\r\n    \"lapkričio\",\r\n    \"gruodžio\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"P\", \"A\", \"T\", \"K\", \"P\", \"Š\"],\r\n  short: [\"Sk\", \"Pr\", \"An\", \"Tr\", \"Kt\", \"Pn\", \"Št\"],\r\n  abbreviated: [\"sk\", \"pr\", \"an\", \"tr\", \"kt\", \"pn\", \"št\"],\r\n  wide: [\r\n    \"sekmadienis\",\r\n    \"pirmadienis\",\r\n    \"antradienis\",\r\n    \"trečiadienis\",\r\n    \"ketvirtadienis\",\r\n    \"penktadienis\",\r\n    \"šeštadienis\",\r\n  ],\r\n};\r\n\r\nconst formattingDayValues = {\r\n  narrow: [\"S\", \"P\", \"A\", \"T\", \"K\", \"P\", \"Š\"],\r\n  short: [\"Sk\", \"Pr\", \"An\", \"Tr\", \"Kt\", \"Pn\", \"Št\"],\r\n  abbreviated: [\"sk\", \"pr\", \"an\", \"tr\", \"kt\", \"pn\", \"št\"],\r\n  wide: [\r\n    \"sekmadienį\",\r\n    \"pirmadienį\",\r\n    \"antradienį\",\r\n    \"trečiadienį\",\r\n    \"ketvirtadienį\",\r\n    \"penktadienį\",\r\n    \"šeštadienį\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"pr. p.\",\r\n    pm: \"pop.\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"vidurdienis\",\r\n    morning: \"rytas\",\r\n    afternoon: \"diena\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n  abbreviated: {\r\n    am: \"priešpiet\",\r\n    pm: \"popiet\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"vidurdienis\",\r\n    morning: \"rytas\",\r\n    afternoon: \"diena\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n  wide: {\r\n    am: \"priešpiet\",\r\n    pm: \"popiet\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"vidurdienis\",\r\n    morning: \"rytas\",\r\n    afternoon: \"diena\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"pr. p.\",\r\n    pm: \"pop.\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"perpiet\",\r\n    morning: \"rytas\",\r\n    afternoon: \"popietė\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n  abbreviated: {\r\n    am: \"priešpiet\",\r\n    pm: \"popiet\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"perpiet\",\r\n    morning: \"rytas\",\r\n    afternoon: \"popietė\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n  wide: {\r\n    am: \"priešpiet\",\r\n    pm: \"popiet\",\r\n    midnight: \"vidurnaktis\",\r\n    noon: \"perpiet\",\r\n    morning: \"rytas\",\r\n    afternoon: \"popietė\",\r\n    evening: \"vakaras\",\r\n    night: \"naktis\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"-oji\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingQuarterValues,\r\n    defaultFormattingWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-oji)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^p(r|o)\\.?\\s?(kr\\.?|me)/i,\r\n  abbreviated: /^(pr\\.\\s?(kr\\.|m\\.\\s?e\\.)|po\\s?kr\\.|mūsų eroje)/i,\r\n  wide: /^(prieš Kristų|prieš mūsų erą|po Kristaus|mūsų eroje)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  wide: [/prieš/i, /(po|mūsų)/i],\r\n  any: [/^pr/i, /^(po|m)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^([1234])/i,\r\n  abbreviated: /^(I|II|III|IV)\\s?ketv?\\.?/i,\r\n  wide: /^(I|II|III|IV)\\s?ketvirtis/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  narrow: [/1/i, /2/i, /3/i, /4/i],\r\n  any: [/I$/i, /II$/i, /III/i, /IV/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[svkbglr]/i,\r\n  abbreviated:\r\n    /^(saus\\.|vas\\.|kov\\.|bal\\.|geg\\.|birž\\.|liep\\.|rugp\\.|rugs\\.|spal\\.|lapkr\\.|gruod\\.)/i,\r\n  wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|balandž?i(s|o)|gegužės?|birželi(s|o)|liep(a|os)|rugpjū(t|č)i(s|o)|rugsėj(is|o)|spali(s|o)|lapkri(t|č)i(s|o)|gruodž?i(s|o))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^s/i,\r\n    /^v/i,\r\n    /^k/i,\r\n    /^b/i,\r\n    /^g/i,\r\n    /^b/i,\r\n    /^l/i,\r\n    /^r/i,\r\n    /^r/i,\r\n    /^s/i,\r\n    /^l/i,\r\n    /^g/i,\r\n  ],\r\n\r\n  any: [\r\n    /^saus/i,\r\n    /^vas/i,\r\n    /^kov/i,\r\n    /^bal/i,\r\n    /^geg/i,\r\n    /^birž/i,\r\n    /^liep/i,\r\n    /^rugp/i,\r\n    /^rugs/i,\r\n    /^spal/i,\r\n    /^lapkr/i,\r\n    /^gruod/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[spatkš]/i,\r\n  short: /^(sk|pr|an|tr|kt|pn|št)/i,\r\n  abbreviated: /^(sk|pr|an|tr|kt|pn|št)/i,\r\n  wide: /^(sekmadien(is|į)|pirmadien(is|į)|antradien(is|į)|trečiadien(is|į)|ketvirtadien(is|į)|penktadien(is|į)|šeštadien(is|į))/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^š/i],\r\n  wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^še/i],\r\n  any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^št/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(pr.\\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i,\r\n  any: /^(priešpiet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  narrow: {\r\n    am: /^pr/i,\r\n    pm: /^pop./i,\r\n    midnight: /^vidurnaktis/i,\r\n    noon: /^(vidurdienis|perp)/i,\r\n    morning: /rytas/i,\r\n    afternoon: /(die|popietė)/i,\r\n    evening: /vakaras/i,\r\n    night: /naktis/i,\r\n  },\r\n  any: {\r\n    am: /^pr/i,\r\n    pm: /^popiet$/i,\r\n    midnight: /^vidurnaktis/i,\r\n    noon: /^(vidurdienis|perp)/i,\r\n    morning: /rytas/i,\r\n    afternoon: /(die|popietė)/i,\r\n    evening: /vakaras/i,\r\n    night: /naktis/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./lt/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./lt/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./lt/_lib/formatRelative.js\";\r\nimport { localize } from \"./lt/_lib/localize.js\";\r\nimport { match } from \"./lt/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Lithuanian locale.\r\n * @language Lithuanian\r\n * @iso-639-2 lit\r\n * @author Pavlo Shpak [@pshpak](https://github.com/pshpak)\r\n * @author Eduardo Pardo [@eduardopsll](https://github.com/eduardopsll)\r\n */\r\nexport const lt = {\r\n  code: \"lt\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default lt;\r\n", "function buildLocalizeTokenFn(schema) {\r\n  return (count, options) => {\r\n    if (count === 1) {\r\n      if (options?.addSuffix) {\r\n        return schema.one[0].replace(\"{{time}}\", schema.one[2]);\r\n      } else {\r\n        return schema.one[0].replace(\"{{time}}\", schema.one[1]);\r\n      }\r\n    } else {\r\n      const rem = count % 10 === 1 && count % 100 !== 11;\r\n      if (options?.addSuffix) {\r\n        return schema.other[0]\r\n          .replace(\"{{time}}\", rem ? schema.other[3] : schema.other[4])\r\n          .replace(\"{{count}}\", String(count));\r\n      } else {\r\n        return schema.other[0]\r\n          .replace(\"{{time}}\", rem ? schema.other[1] : schema.other[2])\r\n          .replace(\"{{count}}\", String(count));\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: buildLocalizeTokenFn({\r\n    one: [\"mazāk par {{time}}\", \"sekundi\", \"sekundi\"],\r\n    other: [\r\n      \"mazāk nekā {{count}} {{time}}\",\r\n      \"sekunde\",\r\n      \"sekundes\",\r\n      \"sekundes\",\r\n      \"sekundēm\",\r\n    ],\r\n  }),\r\n\r\n  xSeconds: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"sekunde\", \"sekundes\"],\r\n    other: [\r\n      \"{{count}} {{time}}\",\r\n      \"sekunde\",\r\n      \"sekundes\",\r\n      \"sekundes\",\r\n      \"sekundēm\",\r\n    ],\r\n  }),\r\n\r\n  halfAMinute: (_count, options) => {\r\n    if (options?.addSuffix) {\r\n      return \"pusminūtes\";\r\n    } else {\r\n      return \"pusminūte\";\r\n    }\r\n  },\r\n\r\n  lessThanXMinutes: buildLocalizeTokenFn({\r\n    one: [\"mazāk par {{time}}\", \"minūti\", \"minūti\"],\r\n    other: [\r\n      \"mazāk nekā {{count}} {{time}}\",\r\n      \"minūte\",\r\n      \"minūtes\",\r\n      \"minūtes\",\r\n      \"minūtēm\",\r\n    ],\r\n  }),\r\n\r\n  xMinutes: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"minūte\", \"minūtes\"],\r\n    other: [\"{{count}} {{time}}\", \"minūte\", \"minūtes\", \"minūtes\", \"minūtēm\"],\r\n  }),\r\n\r\n  aboutXHours: buildLocalizeTokenFn({\r\n    one: [\"apmēram 1 {{time}}\", \"stunda\", \"stundas\"],\r\n    other: [\r\n      \"apmēram {{count}} {{time}}\",\r\n      \"stunda\",\r\n      \"stundas\",\r\n      \"stundas\",\r\n      \"stundām\",\r\n    ],\r\n  }),\r\n\r\n  xHours: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"stunda\", \"stundas\"],\r\n    other: [\"{{count}} {{time}}\", \"stunda\", \"stundas\", \"stundas\", \"stundām\"],\r\n  }),\r\n\r\n  xDays: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"diena\", \"dienas\"],\r\n    other: [\"{{count}} {{time}}\", \"diena\", \"dienas\", \"dienas\", \"dienām\"],\r\n  }),\r\n\r\n  aboutXWeeks: buildLocalizeTokenFn({\r\n    one: [\"apmēram 1 {{time}}\", \"nedēļa\", \"nedēļas\"],\r\n    other: [\r\n      \"apmēram {{count}} {{time}}\",\r\n      \"nedēļa\",\r\n      \"nedēļu\",\r\n      \"nedēļas\",\r\n      \"nedēļām\",\r\n    ],\r\n  }),\r\n\r\n  xWeeks: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"nedēļa\", \"nedēļas\"],\r\n    other: [\r\n      \"{{count}} {{time}}\", // TODO\r\n      \"nedēļa\",\r\n      \"nedēļu\",\r\n      \"nedēļas\",\r\n      \"nedēļām\",\r\n    ],\r\n  }),\r\n\r\n  aboutXMonths: buildLocalizeTokenFn({\r\n    one: [\"apmēram 1 {{time}}\", \"mēnesis\", \"mēneša\"],\r\n    other: [\r\n      \"apmēram {{count}} {{time}}\",\r\n      \"mēnesis\",\r\n      \"mēneši\",\r\n      \"mēneša\",\r\n      \"mēnešiem\",\r\n    ],\r\n  }),\r\n\r\n  xMonths: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"mēnesis\", \"mēneša\"],\r\n    other: [\"{{count}} {{time}}\", \"mēnesis\", \"mēneši\", \"mēneša\", \"mēnešiem\"],\r\n  }),\r\n\r\n  aboutXYears: buildLocalizeTokenFn({\r\n    one: [\"apmēram 1 {{time}}\", \"gads\", \"gada\"],\r\n    other: [\"apmēram {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\r\n  }),\r\n\r\n  xYears: buildLocalizeTokenFn({\r\n    one: [\"1 {{time}}\", \"gads\", \"gada\"],\r\n    other: [\"{{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\r\n  }),\r\n\r\n  overXYears: buildLocalizeTokenFn({\r\n    one: [\"ilgāk par 1 {{time}}\", \"gadu\", \"gadu\"],\r\n    other: [\"vairāk nekā {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\r\n  }),\r\n\r\n  almostXYears: buildLocalizeTokenFn({\r\n    one: [\"gandrīz 1 {{time}}\", \"gads\", \"gada\"],\r\n    other: [\"vairāk nekā {{count}} {{time}}\", \"gads\", \"gadi\", \"gada\", \"gadiem\"],\r\n  }),\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const result = formatDistanceLocale[token](count, options);\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"pēc \" + result;\r\n    } else {\r\n      return \"pirms \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, y. 'gada' d. MMMM\",\r\n  long: \"y. 'gada' d. MMMM\",\r\n  medium: \"dd.MM.y.\",\r\n  short: \"dd.MM.y.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'plkst.' {{time}}\",\r\n  long: \"{{date}} 'plkst.' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst weekdays = [\r\n  \"svētdienā\",\r\n  \"pirmdienā\",\r\n  \"otrdienā\",\r\n  \"trešdienā\",\r\n  \"ceturtdienā\",\r\n  \"piektdienā\",\r\n  \"sestdienā\",\r\n];\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return \"eeee 'plkst.' p\";\r\n    }\r\n\r\n    const weekday = weekdays[date.getDay()];\r\n    return \"'Pagājušā \" + weekday + \" plkst.' p\";\r\n  },\r\n  yesterday: \"'Vakar plkst.' p\",\r\n  today: \"'Šodien plkst.' p\",\r\n  tomorrow: \"'Rīt plkst.' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return \"eeee 'plkst.' p\";\r\n    }\r\n\r\n    const weekday = weekdays[date.getDay()];\r\n    return \"'Nākamajā \" + weekday + \" plkst.' p\";\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"p.m.ē\", \"m.ē\"],\r\n  abbreviated: [\"p. m. ē.\", \"m. ē.\"],\r\n  wide: [\"pirms mūsu ēras\", \"mūsu ērā\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1. cet.\", \"2. cet.\", \"3. cet.\", \"4. cet.\"],\r\n  wide: [\r\n    \"pirmais ceturksnis\",\r\n    \"otrais ceturksnis\",\r\n    \"trešais ceturksnis\",\r\n    \"ceturtais ceturksnis\",\r\n  ],\r\n};\r\n\r\nconst formattingQuarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1. cet.\", \"2. cet.\", \"3. cet.\", \"4. cet.\"],\r\n  wide: [\r\n    \"pirmajā ceturksnī\",\r\n    \"otrajā ceturksnī\",\r\n    \"trešajā ceturksnī\",\r\n    \"ceturtajā ceturksnī\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"janv.\",\r\n    \"febr.\",\r\n    \"marts\",\r\n    \"apr.\",\r\n    \"maijs\",\r\n    \"jūn.\",\r\n    \"jūl.\",\r\n    \"aug.\",\r\n    \"sept.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janvāris\",\r\n    \"februāris\",\r\n    \"marts\",\r\n    \"aprīlis\",\r\n    \"maijs\",\r\n    \"jūnijs\",\r\n    \"jūlijs\",\r\n    \"augusts\",\r\n    \"septembris\",\r\n    \"oktobris\",\r\n    \"novembris\",\r\n    \"decembris\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"janv.\",\r\n    \"febr.\",\r\n    \"martā\",\r\n    \"apr.\",\r\n    \"maijs\",\r\n    \"jūn.\",\r\n    \"jūl.\",\r\n    \"aug.\",\r\n    \"sept.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janvārī\",\r\n    \"februārī\",\r\n    \"martā\",\r\n    \"aprīlī\",\r\n    \"maijā\",\r\n    \"jūnijā\",\r\n    \"jūlijā\",\r\n    \"augustā\",\r\n    \"septembrī\",\r\n    \"oktobrī\",\r\n    \"novembrī\",\r\n    \"decembrī\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"P\", \"O\", \"T\", \"C\", \"P\", \"S\"],\r\n  short: [\"Sv\", \"P\", \"O\", \"T\", \"C\", \"Pk\", \"S\"],\r\n  abbreviated: [\r\n    \"svētd.\",\r\n    \"pirmd.\",\r\n    \"otrd.\",\r\n    \"trešd.\",\r\n    \"ceturtd.\",\r\n    \"piektd.\",\r\n    \"sestd.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"svētdiena\",\r\n    \"pirmdiena\",\r\n    \"otrdiena\",\r\n    \"trešdiena\",\r\n    \"ceturtdiena\",\r\n    \"piektdiena\",\r\n    \"sestdiena\",\r\n  ],\r\n};\r\n\r\nconst formattingDayValues = {\r\n  narrow: [\"S\", \"P\", \"O\", \"T\", \"C\", \"P\", \"S\"],\r\n  short: [\"Sv\", \"P\", \"O\", \"T\", \"C\", \"Pk\", \"S\"],\r\n  abbreviated: [\r\n    \"svētd.\",\r\n    \"pirmd.\",\r\n    \"otrd.\",\r\n    \"trešd.\",\r\n    \"ceturtd.\",\r\n    \"piektd.\",\r\n    \"sestd.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"svētdienā\",\r\n    \"pirmdienā\",\r\n    \"otrdienā\",\r\n    \"trešdienā\",\r\n    \"ceturtdienā\",\r\n    \"piektdienā\",\r\n    \"sestdienā\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusn.\",\r\n    noon: \"pusd.\",\r\n    morning: \"rīts\",\r\n    afternoon: \"diena\",\r\n    evening: \"vakars\",\r\n    night: \"nakts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusn.\",\r\n    noon: \"pusd.\",\r\n    morning: \"rīts\",\r\n    afternoon: \"pēcpusd.\",\r\n    evening: \"vakars\",\r\n    night: \"nakts\",\r\n  },\r\n  wide: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusnakts\",\r\n    noon: \"pusdienlaiks\",\r\n    morning: \"rīts\",\r\n    afternoon: \"pēcpusdiena\",\r\n    evening: \"vakars\",\r\n    night: \"nakts\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusn.\",\r\n    noon: \"pusd.\",\r\n    morning: \"rītā\",\r\n    afternoon: \"dienā\",\r\n    evening: \"vakarā\",\r\n    night: \"naktī\",\r\n  },\r\n  abbreviated: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusn.\",\r\n    noon: \"pusd.\",\r\n    morning: \"rītā\",\r\n    afternoon: \"pēcpusd.\",\r\n    evening: \"vakarā\",\r\n    night: \"naktī\",\r\n  },\r\n  wide: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"pusnaktī\",\r\n    noon: \"pusdienlaikā\",\r\n    morning: \"rītā\",\r\n    afternoon: \"pēcpusdienā\",\r\n    evening: \"vakarā\",\r\n    night: \"naktī\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingQuarterValues,\r\n    defaultFormattingWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(p\\.m\\.ē|m\\.ē)/i,\r\n  abbreviated: /^(p\\. m\\. ē\\.|m\\. ē\\.)/i,\r\n  wide: /^(pirms mūsu ēras|mūsu ērā)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^p/i, /^m/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](\\. cet\\.)/i,\r\n  wide: /^(pirma(is|jā)|otra(is|jā)|treša(is|jā)|ceturta(is|jā)) ceturksn(is|ī)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  narrow: [/^1/i, /^2/i, /^3/i, /^4/i],\r\n  abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i],\r\n  wide: [/^p/i, /^o/i, /^t/i, /^c/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(janv\\.|febr\\.|marts|apr\\.|maijs|jūn\\.|jūl\\.|aug\\.|sept\\.|okt\\.|nov\\.|dec\\.)/i,\r\n  wide: /^(janvār(is|ī)|februār(is|ī)|mart[sā]|aprīl(is|ī)|maij[sā]|jūnij[sā]|jūlij[sā]|august[sā]|septembr(is|ī)|oktobr(is|ī)|novembr(is|ī)|decembr(is|ī))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^jūn/i,\r\n    /^jūl/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[spotc]/i,\r\n  short: /^(sv|pi|o|t|c|pk|s)/i,\r\n  abbreviated: /^(svētd\\.|pirmd\\.|otrd.\\|trešd\\.|ceturtd\\.|piektd\\.|sestd\\.)/i,\r\n  wide: /^(svētdien(a|ā)|pirmdien(a|ā)|otrdien(a|ā)|trešdien(a|ā)|ceturtdien(a|ā)|piektdien(a|ā)|sestdien(a|ā))/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i],\r\n  any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(am|pm|pusn\\.|pusd\\.|rīt(s|ā)|dien(a|ā)|vakar(s|ā)|nakt(s|ī))/,\r\n  abbreviated: /^(am|pm|pusn\\.|pusd\\.|rīt(s|ā)|pēcpusd\\.|vakar(s|ā)|nakt(s|ī))/,\r\n  wide: /^(am|pm|pusnakt(s|ī)|pusdienlaik(s|ā)|rīt(s|ā)|pēcpusdien(a|ā)|vakar(s|ā)|nakt(s|ī))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /^pusn/i,\r\n    noon: /^pusd/i,\r\n    morning: /^r/i,\r\n    afternoon: /^(d|pēc)/i,\r\n    evening: /^v/i,\r\n    night: /^n/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"wide\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./lv/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./lv/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./lv/_lib/formatRelative.js\";\r\nimport { localize } from \"./lv/_lib/localize.js\";\r\nimport { match } from \"./lv/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Latvian locale (Latvia).\r\n * @language Latvian\r\n * @iso-639-2 lav\r\n * @author Rūdolfs Puķītis [@prudolfs](https://github.com/prudolfs)\r\n */\r\nexport const lv = {\r\n  code: \"lv\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default lv;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"помалку од секунда\",\r\n    other: \"помалку од {{count}} секунди\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 секунда\",\r\n    other: \"{{count}} секунди\",\r\n  },\r\n\r\n  halfAMinute: \"половина минута\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"помалку од минута\",\r\n    other: \"помалку од {{count}} минути\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 минута\",\r\n    other: \"{{count}} минути\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"околу 1 час\",\r\n    other: \"околу {{count}} часа\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 час\",\r\n    other: \"{{count}} часа\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ден\",\r\n    other: \"{{count}} дена\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"околу 1 недела\",\r\n    other: \"околу {{count}} месеци\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 недела\",\r\n    other: \"{{count}} недели\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"околу 1 месец\",\r\n    other: \"околу {{count}} недели\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 месец\",\r\n    other: \"{{count}} месеци\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"околу 1 година\",\r\n    other: \"околу {{count}} години\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 година\",\r\n    other: \"{{count}} години\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"повеќе од 1 година\",\r\n    other: \"повеќе од {{count}} години\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"безмалку 1 година\",\r\n    other: \"безмалку {{count}} години\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"за \" + result;\r\n    } else {\r\n      return \"пред \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, dd MMMM yyyy\",\r\n  long: \"dd MMMM yyyy\",\r\n  medium: \"dd MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst weekdays = [\r\n  \"недела\",\r\n  \"понеделник\",\r\n  \"вторник\",\r\n  \"среда\",\r\n  \"четврток\",\r\n  \"петок\",\r\n  \"сабота\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'минатата \" + weekday + \" во' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'минатиот \" + weekday + \" во' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'ова \" + weekday + \" вo' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'овој \" + weekday + \" вo' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = weekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 6:\r\n      return \"'следната \" + weekday + \" вo' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n    case 5:\r\n      return \"'следниот \" + weekday + \" вo' p\";\r\n  }\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'вчера во' p\",\r\n  today: \"'денес во' p\",\r\n  tomorrow: \"'утре во' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"пр.н.е.\", \"н.е.\"],\r\n  abbreviated: [\"пред н. е.\", \"н. е.\"],\r\n  wide: [\"пред нашата ера\", \"нашата ера\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-ви кв.\", \"2-ри кв.\", \"3-ти кв.\", \"4-ти кв.\"],\r\n  wide: [\"1-ви квартал\", \"2-ри квартал\", \"3-ти квартал\", \"4-ти квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  abbreviated: [\r\n    \"јан\",\r\n    \"фев\",\r\n    \"мар\",\r\n    \"апр\",\r\n    \"мај\",\r\n    \"јун\",\r\n    \"јул\",\r\n    \"авг\",\r\n    \"септ\",\r\n    \"окт\",\r\n    \"ноем\",\r\n    \"дек\",\r\n  ],\r\n\r\n  wide: [\r\n    \"јануари\",\r\n    \"февруари\",\r\n    \"март\",\r\n    \"април\",\r\n    \"мај\",\r\n    \"јуни\",\r\n    \"јули\",\r\n    \"август\",\r\n    \"септември\",\r\n    \"октомври\",\r\n    \"ноември\",\r\n    \"декември\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"не\", \"по\", \"вт\", \"ср\", \"че\", \"пе\", \"са\"],\r\n  abbreviated: [\"нед\", \"пон\", \"вто\", \"сре\", \"чет\", \"пет\", \"саб\"],\r\n  wide: [\r\n    \"недела\",\r\n    \"понеделник\",\r\n    \"вторник\",\r\n    \"среда\",\r\n    \"четврток\",\r\n    \"петок\",\r\n    \"сабота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  wide: {\r\n    am: \"претпладне\",\r\n    pm: \"попладне\",\r\n    midnight: \"полноќ\",\r\n    noon: \"напладне\",\r\n    morning: \"наутро\",\r\n    afternoon: \"попладне\",\r\n    evening: \"навечер\",\r\n    night: \"ноќе\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  const rem100 = number % 100;\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n        return number + \"-ви\";\r\n      case 2:\r\n        return number + \"-ри\";\r\n      case 7:\r\n      case 8:\r\n        return number + \"-ми\";\r\n    }\r\n  }\r\n  return number + \"-ти\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?[врмт][и])?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((пр)?н\\.?\\s?е\\.?)/i,\r\n  abbreviated: /^((пр)?н\\.?\\s?е\\.?)/i,\r\n  wide: /^(пред нашата ера|нашата ера)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^п/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[врт]?и?)? кв.?/i,\r\n  wide: /^[1234](-?[врт]?и?)? квартал/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[нпвсч]/i,\r\n  short: /^(не|по|вт|ср|че|пе|са)/i,\r\n  abbreviated: /^(нед|пон|вто|сре|чет|пет|саб)/i,\r\n  wide: /^(недела|понеделник|вторник|среда|четврток|петок|сабота)/i,\r\n};\r\n\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[аб]/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  abbreviated: /^(јан|фев|мар|апр|мај|јун|јул|авг|сеп|окт|ноем|дек)/i,\r\n  wide: /^(јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^ја/i,\r\n    /^Ф/i,\r\n    /^мар/i,\r\n    /^ап/i,\r\n    /^мај/i,\r\n    /^јун/i,\r\n    /^јул/i,\r\n    /^ав/i,\r\n    /^се/i,\r\n    /^окт/i,\r\n    /^но/i,\r\n    /^де/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(претп|попл|полноќ|утро|пладне|вечер|ноќ)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /претпладне/i,\r\n    pm: /попладне/i,\r\n    midnight: /полноќ/i,\r\n    noon: /напладне/i,\r\n    morning: /наутро/i,\r\n    afternoon: /попладне/i,\r\n    evening: /навечер/i,\r\n    night: /ноќе/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./mk/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./mk/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./mk/_lib/formatRelative.js\";\r\nimport { localize } from \"./mk/_lib/localize.js\";\r\nimport { match } from \"./mk/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Macedonian locale.\r\n * @language Macedonian\r\n * @iso-639-2 mkd\r\n * @author Petar Vlahu [@vlahupetar](https://github.com/vlahupetar)\r\n * @author Altrim Beqiri [@altrim](https://github.com/altrim)\r\n */\r\nexport const mk = {\r\n  code: \"mk\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default mk;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"секунд хүрэхгүй\",\r\n    other: \"{{count}} секунд хүрэхгүй\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 секунд\",\r\n    other: \"{{count}} секунд\",\r\n  },\r\n\r\n  halfAMinute: \"хагас минут\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"минут хүрэхгүй\",\r\n    other: \"{{count}} минут хүрэхгүй\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 минут\",\r\n    other: \"{{count}} минут\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ойролцоогоор 1 цаг\",\r\n    other: \"ойролцоогоор {{count}} цаг\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 цаг\",\r\n    other: \"{{count}} цаг\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 өдөр\",\r\n    other: \"{{count}} өдөр\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ойролцоогоор 1 долоо хоног\",\r\n    other: \"ойролцоогоор {{count}} долоо хоног\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 долоо хоног\",\r\n    other: \"{{count}} долоо хоног\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ойролцоогоор 1 сар\",\r\n    other: \"ойролцоогоор {{count}} сар\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 сар\",\r\n    other: \"{{count}} сар\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ойролцоогоор 1 жил\",\r\n    other: \"ойролцоогоор {{count}} жил\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 жил\",\r\n    other: \"{{count}} жил\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 жил гаран\",\r\n    other: \"{{count}} жил гаран\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"бараг 1 жил\",\r\n    other: \"бараг {{count}} жил\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    /**\r\n     * Append genitive case\r\n     */\r\n    const words = result.split(\" \");\r\n    const lastword = words.pop();\r\n    result = words.join(\" \");\r\n    switch (lastword) {\r\n      case \"секунд\":\r\n        result += \" секундийн\";\r\n        break;\r\n      case \"минут\":\r\n        result += \" минутын\";\r\n        break;\r\n      case \"цаг\":\r\n        result += \" цагийн\";\r\n        break;\r\n      case \"өдөр\":\r\n        result += \" өдрийн\";\r\n        break;\r\n      case \"сар\":\r\n        result += \" сарын\";\r\n        break;\r\n      case \"жил\":\r\n        result += \" жилийн\";\r\n        break;\r\n      case \"хоног\":\r\n        result += \" хоногийн\";\r\n        break;\r\n      case \"гаран\":\r\n        result += \" гараны\";\r\n        break;\r\n      case \"хүрэхгүй\":\r\n        result += \" хүрэхгүй хугацааны\";\r\n        break;\r\n      default:\r\n        result += lastword + \"-н\";\r\n    }\r\n\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" дараа\";\r\n    } else {\r\n      return result + \" өмнө\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y 'оны' MMMM'ын' d, EEEE 'гараг'\",\r\n  long: \"y 'оны' MMMM'ын' d\",\r\n  medium: \"y 'оны' MMM'ын' d\",\r\n  short: \"y.MM.dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'өнгөрсөн' eeee 'гарагийн' p 'цагт'\",\r\n  yesterday: \"'өчигдөр' p 'цагт'\",\r\n  today: \"'өнөөдөр' p 'цагт'\",\r\n  tomorrow: \"'маргааш' p 'цагт'\",\r\n  nextWeek: \"'ирэх' eeee 'гарагийн' p 'цагт'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"НТӨ\", \"НТ\"],\r\n  abbreviated: [\"НТӨ\", \"НТ\"],\r\n  wide: [\"нийтийн тооллын өмнөх\", \"нийтийн тооллын\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"I\", \"II\", \"III\", \"IV\"],\r\n  abbreviated: [\"I улирал\", \"II улирал\", \"III улирал\", \"IV улирал\"],\r\n  wide: [\"1-р улирал\", \"2-р улирал\", \"3-р улирал\", \"4-р улирал\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\r\n    \"I\",\r\n    \"II\",\r\n    \"III\",\r\n    \"IV\",\r\n    \"V\",\r\n    \"VI\",\r\n    \"VII\",\r\n    \"VIII\",\r\n    \"IX\",\r\n    \"X\",\r\n    \"XI\",\r\n    \"XII\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"1-р сар\",\r\n    \"2-р сар\",\r\n    \"3-р сар\",\r\n    \"4-р сар\",\r\n    \"5-р сар\",\r\n    \"6-р сар\",\r\n    \"7-р сар\",\r\n    \"8-р сар\",\r\n    \"9-р сар\",\r\n    \"10-р сар\",\r\n    \"11-р сар\",\r\n    \"12-р сар\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Нэгдүгээр сар\",\r\n    \"Хоёрдугаар сар\",\r\n    \"Гуравдугаар сар\",\r\n    \"Дөрөвдүгээр сар\",\r\n    \"Тавдугаар сар\",\r\n    \"Зургаадугаар сар\",\r\n    \"Долоодугаар сар\",\r\n    \"Наймдугаар сар\",\r\n    \"Есдүгээр сар\",\r\n    \"Аравдугаар сар\",\r\n    \"Арваннэгдүгээр сар\",\r\n    \"Арван хоёрдугаар сар\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"I\",\r\n    \"II\",\r\n    \"III\",\r\n    \"IV\",\r\n    \"V\",\r\n    \"VI\",\r\n    \"VII\",\r\n    \"VIII\",\r\n    \"IX\",\r\n    \"X\",\r\n    \"XI\",\r\n    \"XII\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"1-р сар\",\r\n    \"2-р сар\",\r\n    \"3-р сар\",\r\n    \"4-р сар\",\r\n    \"5-р сар\",\r\n    \"6-р сар\",\r\n    \"7-р сар\",\r\n    \"8-р сар\",\r\n    \"9-р сар\",\r\n    \"10-р сар\",\r\n    \"11-р сар\",\r\n    \"12-р сар\",\r\n  ],\r\n\r\n  wide: [\r\n    \"нэгдүгээр сар\",\r\n    \"хоёрдугаар сар\",\r\n    \"гуравдугаар сар\",\r\n    \"дөрөвдүгээр сар\",\r\n    \"тавдугаар сар\",\r\n    \"зургаадугаар сар\",\r\n    \"долоодугаар сар\",\r\n    \"наймдугаар сар\",\r\n    \"есдүгээр сар\",\r\n    \"аравдугаар сар\",\r\n    \"арваннэгдүгээр сар\",\r\n    \"арван хоёрдугаар сар\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"Д\", \"М\", \"Л\", \"П\", \"Б\", \"Б\"],\r\n  short: [\"Ня\", \"Да\", \"Мя\", \"Лх\", \"Пү\", \"Ба\", \"Бя\"],\r\n  abbreviated: [\"Ням\", \"Дав\", \"Мяг\", \"Лха\", \"Пүр\", \"Баа\", \"Бям\"],\r\n  wide: [\"Ням\", \"Даваа\", \"Мягмар\", \"Лхагва\", \"Пүрэв\", \"Баасан\", \"Бямба\"],\r\n};\r\n\r\nconst formattingDayValues = {\r\n  narrow: [\"Н\", \"Д\", \"М\", \"Л\", \"П\", \"Б\", \"Б\"],\r\n  short: [\"Ня\", \"Да\", \"Мя\", \"Лх\", \"Пү\", \"Ба\", \"Бя\"],\r\n  abbreviated: [\"Ням\", \"Дав\", \"Мяг\", \"Лха\", \"Пүр\", \"Баа\", \"Бям\"],\r\n  wide: [\"ням\", \"даваа\", \"мягмар\", \"лхагва\", \"пүрэв\", \"баасан\", \"бямба\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ү.ө.\",\r\n    pm: \"ү.х.\",\r\n    midnight: \"шөнө дунд\",\r\n    noon: \"үд дунд\",\r\n    morning: \"өглөө\",\r\n    afternoon: \"өдөр\",\r\n    evening: \"орой\",\r\n    night: \"шөнө\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ү.ө.\",\r\n    pm: \"ү.х.\",\r\n    midnight: \"шөнө дунд\",\r\n    noon: \"үд дунд\",\r\n    morning: \"өглөө\",\r\n    afternoon: \"өдөр\",\r\n    evening: \"орой\",\r\n    night: \"шөнө\",\r\n  },\r\n  wide: {\r\n    am: \"ү.ө.\",\r\n    pm: \"ү.х.\",\r\n    midnight: \"шөнө дунд\",\r\n    noon: \"үд дунд\",\r\n    morning: \"өглөө\",\r\n    afternoon: \"өдөр\",\r\n    evening: \"орой\",\r\n    night: \"шөнө\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /\\d+/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(нтө|нт)/i,\r\n  abbreviated: /^(нтө|нт)/i,\r\n  wide: /^(нийтийн тооллын өмнө|нийтийн тооллын)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(нтө|нийтийн тооллын өмнө)/i, /^(нт|нийтийн тооллын)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^(iv|iii|ii|i)/i,\r\n  abbreviated: /^(iv|iii|ii|i) улирал/i,\r\n  wide: /^[1-4]-р улирал/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/^(i(\\s|$)|1)/i, /^(ii(\\s|$)|2)/i, /^(iii(\\s|$)|3)/i, /^(iv(\\s|$)|4)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,\r\n  abbreviated:\r\n    /^(1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар)/i,\r\n  wide: /^(нэгдүгээр сар|хоёрдугаар сар|гуравдугаар сар|дөрөвдүгээр сар|тавдугаар сар|зургаадугаар сар|долоодугаар сар|наймдугаар сар|есдүгээр сар|аравдугаар сар|арван нэгдүгээр сар|арван хоёрдугаар сар)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^i$/i,\r\n    /^ii$/i,\r\n    /^iii$/i,\r\n    /^iv$/i,\r\n    /^v$/i,\r\n    /^vi$/i,\r\n    /^vii$/i,\r\n    /^viii$/i,\r\n    /^ix$/i,\r\n    /^x$/i,\r\n    /^xi$/i,\r\n    /^xii$/i,\r\n  ],\r\n\r\n  any: [\r\n    /^(1|нэгдүгээр)/i,\r\n    /^(2|хоёрдугаар)/i,\r\n    /^(3|гуравдугаар)/i,\r\n    /^(4|дөрөвдүгээр)/i,\r\n    /^(5|тавдугаар)/i,\r\n    /^(6|зургаадугаар)/i,\r\n    /^(7|долоодугаар)/i,\r\n    /^(8|наймдугаар)/i,\r\n    /^(9|есдүгээр)/i,\r\n    /^(10|аравдугаар)/i,\r\n    /^(11|арван нэгдүгээр)/i,\r\n    /^(12|арван хоёрдугаар)/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[ндмлпбб]/i,\r\n  short: /^(ня|да|мя|лх|пү|ба|бя)/i,\r\n  abbreviated: /^(ням|дав|мяг|лха|пүр|баа|бям)/i,\r\n  wide: /^(ням|даваа|мягмар|лхагва|пүрэв|баасан|бямба)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^д/i, /^м/i, /^л/i, /^п/i, /^б/i, /^б/i],\r\n  any: [/^ня/i, /^да/i, /^мя/i, /^лх/i, /^пү/i, /^ба/i, /^бя/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ү\\.ө\\.|ү\\.х\\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i,\r\n  any: /^(ү\\.ө\\.|ү\\.х\\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ү\\.ө\\./i,\r\n    pm: /^ү\\.х\\./i,\r\n    midnight: /^шөнө дунд/i,\r\n    noon: /^үд дунд/i,\r\n    morning: /өглөө/i,\r\n    afternoon: /өдөр/i,\r\n    evening: /орой/i,\r\n    night: /шөнө/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./mn/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./mn/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./mn/_lib/formatRelative.js\";\r\nimport { localize } from \"./mn/_lib/localize.js\";\r\nimport { match } from \"./mn/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Mongolian locale.\r\n * @language Mongolian\r\n * @iso-639-2 mon\r\n * @author Bilguun Ochirbat [@bilguun0203](https://github.com/bilguun0203)\r\n */\r\nexport const mn = {\r\n  code: \"mn\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default mn;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"kurang dari 1 saat\",\r\n    other: \"kurang dari {{count}} saat\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 saat\",\r\n    other: \"{{count}} saat\",\r\n  },\r\n\r\n  halfAMinute: \"setengah minit\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"kurang dari 1 minit\",\r\n    other: \"kurang dari {{count}} minit\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minit\",\r\n    other: \"{{count}} minit\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"sekitar 1 jam\",\r\n    other: \"sekitar {{count}} jam\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 jam\",\r\n    other: \"{{count}} jam\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 hari\",\r\n    other: \"{{count}} hari\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"sekitar 1 minggu\",\r\n    other: \"sekitar {{count}} minggu\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 minggu\",\r\n    other: \"{{count}} minggu\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"sekitar 1 bulan\",\r\n    other: \"sekitar {{count}} bulan\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 bulan\",\r\n    other: \"{{count}} bulan\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"sekitar 1 tahun\",\r\n    other: \"sekitar {{count}} tahun\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 tahun\",\r\n    other: \"{{count}} tahun\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"lebih dari 1 tahun\",\r\n    other: \"lebih dari {{count}} tahun\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"hampir 1 tahun\",\r\n    other: \"hampir {{count}} tahun\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"dalam masa \" + result;\r\n    } else {\r\n      return result + \" yang lalu\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"d/M/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH.mm.ss\",\r\n  long: \"HH.mm.ss\",\r\n  medium: \"HH.mm\",\r\n  short: \"HH.mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'pukul' {{time}}\",\r\n  long: \"{{date}} 'pukul' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'lepas pada jam' p\",\r\n  yesterday: \"'Semalam pada jam' p\",\r\n  today: \"'Hari ini pada jam' p\",\r\n  tomorrow: \"'Esok pada jam' p\",\r\n  nextWeek: \"eeee 'pada jam' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// Most data for localization are taken from this page\r\n// https://www.unicode.org/cldr/charts/32/summary/ms.html\r\nconst eraValues = {\r\n  narrow: [\"SM\", \"M\"],\r\n  abbreviated: [\"SM\", \"M\"],\r\n  wide: [\"Sebelum Masihi\", \"Masihi\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"S1\", \"S2\", \"S3\", \"S4\"],\r\n  wide: [\"Suku pertama\", \"Suku kedua\", \"Suku ketiga\", \"Suku keempat\"],\r\n};\r\n\r\n// Note: in Malay, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"O\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mac\",\r\n    \"Apr\",\r\n    \"Mei\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Ogo\",\r\n    \"Sep\",\r\n    \"Okt\",\r\n    \"Nov\",\r\n    \"Dis\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Januari\",\r\n    \"Februari\",\r\n    \"Mac\",\r\n    \"April\",\r\n    \"Mei\",\r\n    \"Jun\",\r\n    \"Julai\",\r\n    \"Ogos\",\r\n    \"September\",\r\n    \"Oktober\",\r\n    \"November\",\r\n    \"Disember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"A\", \"I\", \"S\", \"R\", \"K\", \"J\", \"S\"],\r\n  short: [\"Ahd\", \"Isn\", \"Sel\", \"Rab\", \"Kha\", \"Jum\", \"Sab\"],\r\n  abbreviated: [\"Ahd\", \"Isn\", \"Sel\", \"Rab\", \"Kha\", \"Jum\", \"Sab\"],\r\n  wide: [\"Ahad\", \"Isnin\", \"Selasa\", \"Rabu\", \"Khamis\", \"Jumaat\", \"Sabtu\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"tgh malam\",\r\n    noon: \"tgh hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"tengah malam\",\r\n    noon: \"tengah hari\",\r\n    morning: \"pagi\",\r\n    afternoon: \"tengah hari\",\r\n    evening: \"petang\",\r\n    night: \"malam\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  // Can't use \"pertama\", \"kedua\" because can't be parsed\r\n  return \"ke-\" + Number(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^ke-(\\d+)?/i;\r\nconst parseOrdinalNumberPattern = /petama|\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(sm|m)/i,\r\n  abbreviated: /^(s\\.?\\s?m\\.?|m\\.?)/i,\r\n  wide: /^(sebelum masihi|masihi)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^s/i, /^(m)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^S[1234]/i,\r\n  wide: /Suku (pertama|kedua|ketiga|keempat)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,\r\n  wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^o/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^ma/i,\r\n    /^ap/i,\r\n    /^me/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^og/i,\r\n    /^s/i,\r\n    /^ok/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[aisrkj]/i,\r\n  short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,\r\n  abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,\r\n  wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],\r\n  any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|tengah malam|tengah hari|pagi|petang|malam)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^pm/i,\r\n    midnight: /^tengah m/i,\r\n    noon: /^tengah h/i,\r\n    morning: /pa/i,\r\n    afternoon: /tengah h/i,\r\n    evening: /pe/i,\r\n    night: /m/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ms/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ms/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ms/_lib/formatRelative.js\";\r\nimport { localize } from \"./ms/_lib/localize.js\";\r\nimport { match } from \"./ms/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Malay locale.\r\n * @language Malay\r\n * @iso-639-2 msa\r\n * @author Ruban Selvarajah [@Zyten](https://github.com/Zyten)\r\n */\r\nexport const ms = {\r\n  code: \"ms\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ms;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"inqas minn sekonda\",\r\n    other: \"inqas minn {{count}} sekondi\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"sekonda\",\r\n    other: \"{{count}} sekondi\",\r\n  },\r\n\r\n  halfAMinute: \"nofs minuta\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"inqas minn minuta\",\r\n    other: \"inqas minn {{count}} minuti\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"minuta\",\r\n    other: \"{{count}} minuti\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"madwar siegħa\",\r\n    other: \"madwar {{count}} siegħat\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"siegħa\",\r\n    other: \"{{count}} siegħat\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"ġurnata\",\r\n    other: \"{{count}} ġranet\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"madwar ġimgħa\",\r\n    other: \"madwar {{count}} ġimgħat\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"ġimgħa\",\r\n    other: \"{{count}} ġimgħat\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"madwar xahar\",\r\n    other: \"madwar {{count}} xhur\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"xahar\",\r\n    other: \"{{count}} xhur\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"madwar sena\",\r\n    two: \"madwar sentejn\",\r\n    other: \"madwar {{count}} snin\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"sena\",\r\n    two: \"sentejn\",\r\n    other: \"{{count}} snin\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"aktar minn sena\",\r\n    two: \"aktar minn sentejn\",\r\n    other: \"aktar minn {{count}} snin\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"kważi sena\",\r\n    two: \"kważi sentejn\",\r\n    other: \"kważi {{count}} snin\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else if (count === 2 && tokenValue.two) {\r\n    result = tokenValue.two;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"f'\" + result;\r\n    } else {\r\n      return result + \" ilu\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'li għadda' 'fil-'p\",\r\n  yesterday: \"'Il-bieraħ fil-'p\",\r\n  today: \"'Illum fil-'p\",\r\n  tomorrow: \"'Għada fil-'p\",\r\n  nextWeek: \"eeee 'fil-'p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"Q\", \"W\"],\r\n  abbreviated: [\"QK\", \"WK\"],\r\n  wide: [\"qabel Kristu\", \"wara Kristu\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1. kwart\", \"2. kwart\", \"3. kwart\", \"4. kwart\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"Ġ\", \"L\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Fra\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mej\",\r\n    \"Ġun\",\r\n    \"Lul\",\r\n    \"Aww\",\r\n    \"Set\",\r\n    \"Ott\",\r\n    \"Nov\",\r\n    \"Diċ\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Jannar\",\r\n    \"Frar\",\r\n    \"Marzu\",\r\n    \"April\",\r\n    \"Mejju\",\r\n    \"Ġunju\",\r\n    \"Lulju\",\r\n    \"Awwissu\",\r\n    \"Settembru\",\r\n    \"Ottubru\",\r\n    \"Novembru\",\r\n    \"Diċembru\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Ħ\", \"T\", \"T\", \"E\", \"Ħ\", \"Ġ\", \"S\"],\r\n  short: [\"Ħa\", \"Tn\", \"Tl\", \"Er\", \"Ħa\", \"Ġi\", \"Si\"],\r\n  abbreviated: [\"Ħad\", \"Tne\", \"Tli\", \"Erb\", \"Ħam\", \"Ġim\", \"Sib\"],\r\n  wide: [\r\n    \"Il-Ħadd\",\r\n    \"It-Tnejn\",\r\n    \"It-Tlieta\",\r\n    \"L-Erbgħa\",\r\n    \"Il-Ħamis\",\r\n    \"Il-Ġimgħa\",\r\n    \"Is-Sibt\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"nofsillejl\",\r\n    noon: \"nofsinhar\",\r\n    morning: \"għodwa\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"lejl\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"nofsillejl\",\r\n    noon: \"nofsinhar\",\r\n    morning: \"għodwa\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"lejl\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"nofsillejl\",\r\n    noon: \"nofsinhar\",\r\n    morning: \"għodwa\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"lejl\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"f'nofsillejl\",\r\n    noon: \"f'nofsinhar\",\r\n    morning: \"filgħodu\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"billejl\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"f'nofsillejl\",\r\n    noon: \"f'nofsinhar\",\r\n    morning: \"filgħodu\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"billejl\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"f'nofsillejl\",\r\n    noon: \"f'nofsinhar\",\r\n    morning: \"filgħodu\",\r\n    afternoon: \"wara nofsinhar\",\r\n    evening: \"filgħaxija\",\r\n    night: \"billejl\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"º\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(q|w)/i,\r\n  abbreviated: /^(q\\.?\\s?k\\.?|b\\.?\\s?c\\.?\\s?e\\.?|w\\.?\\s?k\\.?)/i,\r\n  wide: /^(qabel kristu|before common era|wara kristu|common era)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(q|b)/i, /^(w|c)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^k[1234]/i,\r\n  wide: /^[1234](\\.)? kwart/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmaglsond]/i,\r\n  abbreviated: /^(jan|fra|mar|apr|mej|ġun|lul|aww|set|ott|nov|diċ)/i,\r\n  wide: /^(jannar|frar|marzu|april|mejju|ġunju|lulju|awwissu|settembru|ottubru|novembru|diċembru)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^ġ/i,\r\n    /^l/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mej/i,\r\n    /^ġ/i,\r\n    /^l/i,\r\n    /^aw/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[ħteġs]/i,\r\n  short: /^(ħa|tn|tl|er|ħa|ġi|si)/i,\r\n  abbreviated: /^(ħad|tne|tli|erb|ħam|ġim|sib)/i,\r\n  wide: /^(il-ħadd|it-tnejn|it-tlieta|l-erbgħa|il-ħamis|il-ġimgħa|is-sibt)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ħ/i, /^t/i, /^t/i, /^e/i, /^ħ/i, /^ġ/i, /^s/i],\r\n  any: [\r\n    /^(il-)?ħad/i,\r\n    /^(it-)?tn/i,\r\n    /^(it-)?tl/i,\r\n    /^(l-)?er/i,\r\n    /^(il-)?ham/i,\r\n    /^(il-)?ġi/i,\r\n    /^(is-)?si/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^f'nofsillejl/i,\r\n    noon: /^f'nofsinhar/i,\r\n    morning: /għodwa/i,\r\n    afternoon: /wara(\\s.*)nofsinhar/i,\r\n    evening: /filgħaxija/i,\r\n    night: /lejl/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./mt/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./mt/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./mt/_lib/formatRelative.js\";\r\nimport { localize } from \"./mt/_lib/localize.js\";\r\nimport { match } from \"./mt/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Maltese locale.\r\n * @language Maltese\r\n * @iso-639-2 mlt\r\n * @author Andras Matzon [@amatzon](@link https://github.com/amatzon)\r\n * @author Bryan Borg [@bryanMt](@link https://github.com/bryanMt)\r\n */\r\nexport const mt = {\r\n  code: \"mt\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default mt;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mindre enn ett sekund\",\r\n    other: \"mindre enn {{count}} sekunder\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"ett sekund\",\r\n    other: \"{{count}} sekunder\",\r\n  },\r\n\r\n  halfAMinute: \"et halvt minutt\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mindre enn ett minutt\",\r\n    other: \"mindre enn {{count}} minutter\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"ett minutt\",\r\n    other: \"{{count}} minutter\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"omtrent en time\",\r\n    other: \"omtrent {{count}} timer\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"en time\",\r\n    other: \"{{count}} timer\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"en dag\",\r\n    other: \"{{count}} dager\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"omtrent en uke\",\r\n    other: \"omtrent {{count}} uker\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"en uke\",\r\n    other: \"{{count}} uker\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"omtrent en måned\",\r\n    other: \"omtrent {{count}} måneder\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"en måned\",\r\n    other: \"{{count}} måneder\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"omtrent ett år\",\r\n    other: \"omtrent {{count}} år\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"ett år\",\r\n    other: \"{{count}} år\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"over ett år\",\r\n    other: \"over {{count}} år\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"nesten ett år\",\r\n    other: \"nesten {{count}} år\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"om \" + result;\r\n    } else {\r\n      return result + \" siden\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"'kl'. HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kl.' {{time}}\",\r\n  long: \"{{date}} 'kl.' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'forrige' eeee 'kl.' p\",\r\n  yesterday: \"'i går kl.' p\",\r\n  today: \"'i dag kl.' p\",\r\n  tomorrow: \"'i morgen kl.' p\",\r\n  nextWeek: \"EEEE 'kl.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\r\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\r\n  wide: [\"før Kristus\", \"etter Kristus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mars\",\r\n    \"apr.\",\r\n    \"mai\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mars\",\r\n    \"april\",\r\n    \"mai\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"august\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"desember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\r\n  short: [\"sø\", \"ma\", \"ti\", \"on\", \"to\", \"fr\", \"lø\"],\r\n  abbreviated: [\"søn\", \"man\", \"tir\", \"ons\", \"tor\", \"fre\", \"lør\"],\r\n  wide: [\r\n    \"søndag\",\r\n    \"mandag\",\r\n    \"tirsdag\",\r\n    \"onsdag\",\r\n    \"torsdag\",\r\n    \"fredag\",\r\n    \"lørdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på etterm.\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natten\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på etterm.\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natten\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morgenen\",\r\n    afternoon: \"på ettermiddagen\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natten\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\r\n  abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\r\n  wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^f/i, /^e/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](\\.)? kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\r\n  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^aug/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtofl]/i,\r\n  short: /^(sø|ma|ti|on|to|fr|lø)/i,\r\n  abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i,\r\n  wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a(\\.?\\s?m\\.?)?$/i,\r\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\r\n    midnight: /^midn/i,\r\n    noon: /^midd/i,\r\n    morning: /morgen/i,\r\n    afternoon: /ettermiddag/i,\r\n    evening: /kveld/i,\r\n    night: /natt/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./nb/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./nb/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./nb/_lib/formatRelative.js\";\r\nimport { localize } from \"./nb/_lib/localize.js\";\r\nimport { match } from \"./nb/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Norwegian Bokmål locale.\r\n * @language Norwegian Bokmål\r\n * @iso-639-2 nob\r\n * @author Hans-Kristian Koren [@Hanse](https://github.com/Hanse)\r\n * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)\r\n * @author Dag Stuan [@dagstuan](https://github.com/dagstuan)\r\n */\r\nexport const nb = {\r\n  code: \"nb\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default nb;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"minder dan een seconde\",\r\n    other: \"minder dan {{count}} seconden\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 seconde\",\r\n    other: \"{{count}} seconden\",\r\n  },\r\n\r\n  halfAMinute: \"een halve minuut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minder dan een minuut\",\r\n    other: \"minder dan {{count}} minuten\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"een minuut\",\r\n    other: \"{{count}} minuten\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ongeveer 1 uur\",\r\n    other: \"ongeveer {{count}} uur\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 uur\",\r\n    other: \"{{count}} uur\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dag\",\r\n    other: \"{{count}} dagen\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ongeveer 1 week\",\r\n    other: \"ongeveer {{count}} weken\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 week\",\r\n    other: \"{{count}} weken\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ongeveer 1 maand\",\r\n    other: \"ongeveer {{count}} maanden\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 maand\",\r\n    other: \"{{count}} maanden\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ongeveer 1 jaar\",\r\n    other: \"ongeveer {{count}} jaar\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 jaar\",\r\n    other: \"{{count}} jaar\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"meer dan 1 jaar\",\r\n    other: \"meer dan {{count}} jaar\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"bijna 1 jaar\",\r\n    other: \"bijna {{count}} jaar\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"over \" + result;\r\n    } else {\r\n      return result + \" geleden\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd-MM-y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'om' {{time}}\",\r\n  long: \"{{date}} 'om' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'afgelopen' eeee 'om' p\",\r\n  yesterday: \"'gisteren om' p\",\r\n  today: \"'vandaag om' p\",\r\n  tomorrow: \"'morgen om' p\",\r\n  nextWeek: \"eeee 'om' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"v.C.\", \"n.C.\"],\r\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\r\n  wide: [\"voor Christus\", \"na Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1e kwartaal\", \"2e kwartaal\", \"3e kwartaal\", \"4e kwartaal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mrt.\",\r\n    \"apr.\",\r\n    \"mei\",\r\n    \"jun.\",\r\n    \"jul.\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januari\",\r\n    \"februari\",\r\n    \"maart\",\r\n    \"april\",\r\n    \"mei\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"augustus\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Z\", \"M\", \"D\", \"W\", \"D\", \"V\", \"Z\"],\r\n  short: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\r\n  abbreviated: [\"zon\", \"maa\", \"din\", \"woe\", \"don\", \"vri\", \"zat\"],\r\n  wide: [\r\n    \"zondag\",\r\n    \"maandag\",\r\n    \"dinsdag\",\r\n    \"woensdag\",\r\n    \"donderdag\",\r\n    \"vrijdag\",\r\n    \"zaterdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middaguur\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s middags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middaguur\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s middags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middaguur\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s middags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"e\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([vn]\\.? ?C\\.?)/,\r\n  abbreviated: /^([vn]\\. ?Chr\\.?)/,\r\n  wide: /^((voor|na) Christus)/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^v/, /^n/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K[1234]/i,\r\n  wide: /^[1234]e kwartaal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\r\n  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^jan/i,\r\n    /^feb/i,\r\n    /^m(r|a)/i,\r\n    /^apr/i,\r\n    /^mei/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^aug/i,\r\n    /^sep/i,\r\n    /^okt/i,\r\n    /^nov/i,\r\n    /^dec/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[zmdwv]/i,\r\n  short: /^(zo|ma|di|wo|do|vr|za)/i,\r\n  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,\r\n  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],\r\n  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /^middernacht/i,\r\n    noon: /^het middaguur/i,\r\n    morning: /ochtend/i,\r\n    afternoon: /middag/i,\r\n    evening: /avond/i,\r\n    night: /nacht/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./nl/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./nl/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./nl/_lib/formatRelative.js\";\r\nimport { localize } from \"./nl/_lib/localize.js\";\r\nimport { match } from \"./nl/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Dutch locale.\r\n * @language Dutch\r\n * @iso-639-2 nld\r\n * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)\r\n * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)\r\n * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)\r\n * @author Edo Rivai [@edorivai](https://github.com/edorivai)\r\n * @author Niels Keurentjes [@curry684](https://github.com/curry684)\r\n * @author Stefan Vermaas [@stefanvermaas](https://github.com/stefanvermaas)\r\n */\r\nexport const nl = {\r\n  code: \"nl\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default nl;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"minder dan een seconde\",\r\n    other: \"minder dan {{count}} seconden\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 seconde\",\r\n    other: \"{{count}} seconden\",\r\n  },\r\n\r\n  halfAMinute: \"een halve minuut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"minder dan een minuut\",\r\n    other: \"minder dan {{count}} minuten\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"een minuut\",\r\n    other: \"{{count}} minuten\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ongeveer 1 uur\",\r\n    other: \"ongeveer {{count}} uur\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 uur\",\r\n    other: \"{{count}} uur\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dag\",\r\n    other: \"{{count}} dagen\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ongeveer 1 week\",\r\n    other: \"ongeveer {{count}} weken\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 week\",\r\n    other: \"{{count}} weken\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ongeveer 1 maand\",\r\n    other: \"ongeveer {{count}} maanden\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 maand\",\r\n    other: \"{{count}} maanden\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ongeveer 1 jaar\",\r\n    other: \"ongeveer {{count}} jaar\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 jaar\",\r\n    other: \"{{count}} jaar\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"meer dan 1 jaar\",\r\n    other: \"meer dan {{count}} jaar\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"bijna 1 jaar\",\r\n    other: \"bijna {{count}} jaar\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"over \" + result;\r\n    } else {\r\n      return result + \" geleden\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'om' {{time}}\",\r\n  long: \"{{date}} 'om' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'vorige' eeee 'om' p\",\r\n  yesterday: \"'gisteren om' p\",\r\n  today: \"'vandaag om' p\",\r\n  tomorrow: \"'morgen om' p\",\r\n  nextWeek: \"eeee 'om' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"v.C.\", \"n.C.\"],\r\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\r\n  wide: [\"voor Christus\", \"na Christus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"K1\", \"K2\", \"K3\", \"K4\"],\r\n  wide: [\"1e kwartaal\", \"2e kwartaal\", \"3e kwartaal\", \"4e kwartaal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mrt.\",\r\n    \"apr.\",\r\n    \"mei\",\r\n    \"jun.\",\r\n    \"jul.\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januari\",\r\n    \"februari\",\r\n    \"maart\",\r\n    \"april\",\r\n    \"mei\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"augustus\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Z\", \"M\", \"D\", \"W\", \"D\", \"V\", \"Z\"],\r\n  short: [\"zo\", \"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\"],\r\n  abbreviated: [\"zon\", \"maa\", \"din\", \"woe\", \"don\", \"vri\", \"zat\"],\r\n  wide: [\r\n    \"zondag\",\r\n    \"maandag\",\r\n    \"dinsdag\",\r\n    \"woensdag\",\r\n    \"donderdag\",\r\n    \"vrijdag\",\r\n    \"zaterdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middag\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s namiddags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middag\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s namiddags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"middernacht\",\r\n    noon: \"het middag\",\r\n    morning: \"'s ochtends\",\r\n    afternoon: \"'s namiddags\",\r\n    evening: \"'s avonds\",\r\n    night: \"'s nachts\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"e\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)e?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([vn]\\.? ?C\\.?)/,\r\n  abbreviated: /^([vn]\\. ?Chr\\.?)/,\r\n  wide: /^((voor|na) Christus)/,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^v/, /^n/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^K[1234]/i,\r\n  wide: /^[1234]e kwartaal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,\r\n  wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^jan/i,\r\n    /^feb/i,\r\n    /^m(r|a)/i,\r\n    /^apr/i,\r\n    /^mei/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^aug/i,\r\n    /^sep/i,\r\n    /^okt/i,\r\n    /^nov/i,\r\n    /^dec/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[zmdwv]/i,\r\n  short: /^(zo|ma|di|wo|do|vr|za)/i,\r\n  abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,\r\n  wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],\r\n  any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /^middernacht/i,\r\n    noon: /^het middaguur/i,\r\n    morning: /ochtend/i,\r\n    afternoon: /middag/i,\r\n    evening: /avond/i,\r\n    night: /nacht/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./nl-BE/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./nl-BE/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./nl-BE/_lib/formatRelative.js\";\r\nimport { localize } from \"./nl-BE/_lib/localize.js\";\r\nimport { match } from \"./nl-BE/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Dutch locale.\r\n * @language Dutch\r\n * @iso-639-2 nld\r\n * @author Jorik Tangelder [@jtangelder](https://github.com/jtangelder)\r\n * @author Ruben Stolk [@rubenstolk](https://github.com/rubenstolk)\r\n * @author Lode Vanhove [@bitcrumb](https://github.com/bitcrumb)\r\n * @author Alex Hoeing [@dcbn](https://github.com/dcbn)\r\n */\r\nexport const nlBE = {\r\n  code: \"nl-BE\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default nlBE;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mindre enn eitt sekund\",\r\n    other: \"mindre enn {{count}} sekund\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"eitt sekund\",\r\n    other: \"{{count}} sekund\",\r\n  },\r\n\r\n  halfAMinute: \"eit halvt minutt\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mindre enn eitt minutt\",\r\n    other: \"mindre enn {{count}} minutt\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"eitt minutt\",\r\n    other: \"{{count}} minutt\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"omtrent ein time\",\r\n    other: \"omtrent {{count}} timar\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"ein time\",\r\n    other: \"{{count}} timar\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"ein dag\",\r\n    other: \"{{count}} dagar\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"omtrent ei veke\",\r\n    other: \"omtrent {{count}} veker\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"ei veke\",\r\n    other: \"{{count}} veker\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"omtrent ein månad\",\r\n    other: \"omtrent {{count}} månader\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"ein månad\",\r\n    other: \"{{count}} månader\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"omtrent eitt år\",\r\n    other: \"omtrent {{count}} år\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"eitt år\",\r\n    other: \"{{count}} år\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"over eitt år\",\r\n    other: \"over {{count}} år\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"nesten eitt år\",\r\n    other: \"nesten {{count}} år\",\r\n  },\r\n};\r\n\r\nconst wordMapping = [\r\n  \"null\",\r\n  \"ein\",\r\n  \"to\",\r\n  \"tre\",\r\n  \"fire\",\r\n  \"fem\",\r\n  \"seks\",\r\n  \"sju\",\r\n  \"åtte\",\r\n  \"ni\",\r\n  \"ti\",\r\n  \"elleve\",\r\n  \"tolv\",\r\n];\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\r\n      \"{{count}}\",\r\n      count < 13 ? wordMapping[count] : String(count),\r\n    );\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"om \" + result;\r\n    } else {\r\n      return result + \" sidan\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"'kl'. HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kl.' {{time}}\",\r\n  long: \"{{date}} 'kl.' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'førre' eeee 'kl.' p\",\r\n  yesterday: \"'i går kl.' p\",\r\n  today: \"'i dag kl.' p\",\r\n  tomorrow: \"'i morgon kl.' p\",\r\n  nextWeek: \"EEEE 'kl.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\r\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\r\n  wide: [\"før Kristus\", \"etter Kristus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mars\",\r\n    \"apr.\",\r\n    \"mai\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"des.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mars\",\r\n    \"april\",\r\n    \"mai\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"august\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"desember\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\r\n  short: [\"su\", \"må\", \"ty\", \"on\", \"to\", \"fr\", \"lau\"],\r\n  abbreviated: [\"sun\", \"mån\", \"tys\", \"ons\", \"tor\", \"fre\", \"laur\"],\r\n  wide: [\r\n    \"sundag\",\r\n    \"måndag\",\r\n    \"tysdag\",\r\n    \"onsdag\",\r\n    \"torsdag\",\r\n    \"fredag\",\r\n    \"laurdag\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på etterm.\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natta\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på etterm.\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natta\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morgonen\",\r\n    afternoon: \"på ettermiddagen\",\r\n    evening: \"på kvelden\",\r\n    night: \"på natta\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\r\n  abbreviated: /^(f\\.? ?Kr\\.?|fvt\\.?|e\\.? ?Kr\\.?|evt\\.?)/i,\r\n  wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^f/i, /^e/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](\\.)? kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\\.?/i,\r\n  wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^aug/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtofl]/i,\r\n  short: /^(su|må|ty|on|to|fr|la)/i,\r\n  abbreviated: /^(sun|mån|tys|ons|tor|fre|laur)/i,\r\n  wide: /^(sundag|måndag|tysdag|onsdag|torsdag|fredag|laurdag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a(\\.?\\s?m\\.?)?$/i,\r\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\r\n    midnight: /^midn/i,\r\n    noon: /^midd/i,\r\n    morning: /morgon/i,\r\n    afternoon: /ettermiddag/i,\r\n    evening: /kveld/i,\r\n    night: /natt/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./nn/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./nn/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./nn/_lib/formatRelative.js\";\r\nimport { localize } from \"./nn/_lib/localize.js\";\r\nimport { match } from \"./nn/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Norwegian Nynorsk locale.\r\n * @language Norwegian Nynorsk\r\n * @iso-639-2 nno\r\n * @author Mats Byrkjeland [@draperunner](https://github.com/draperunner)\r\n */\r\nexport const nn = {\r\n  code: \"nn\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default nn;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mens d’una segonda\",\r\n    other: \"mens de {{count}} segondas\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segonda\",\r\n    other: \"{{count}} segondas\",\r\n  },\r\n\r\n  halfAMinute: \"30 segondas\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mens d’una minuta\",\r\n    other: \"mens de {{count}} minutas\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuta\",\r\n    other: \"{{count}} minutas\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"environ 1 ora\",\r\n    other: \"environ {{count}} oras\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ora\",\r\n    other: \"{{count}} oras\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 jorn\",\r\n    other: \"{{count}} jorns\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"environ 1 setmana\",\r\n    other: \"environ {{count}} setmanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 setmana\",\r\n    other: \"{{count}} setmanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"environ 1 mes\",\r\n    other: \"environ {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mes\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"environ 1 an\",\r\n    other: \"environ {{count}} ans\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 an\",\r\n    other: \"{{count}} ans\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"mai d’un an\",\r\n    other: \"mai de {{count}} ans\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"gaireben un an\",\r\n    other: \"gaireben {{count}} ans\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"d’aquí \" + result;\r\n    } else {\r\n      return \"fa \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d 'de' MMMM y\",\r\n  long: \"d 'de' MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'a' {{time}}\",\r\n  long: \"{{date}} 'a' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'passat a' p\",\r\n  yesterday: \"'ièr a' p\",\r\n  today: \"'uèi a' p\",\r\n  tomorrow: \"'deman a' p\",\r\n  nextWeek: \"eeee 'a' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ab. J.C.\", \"apr. J.C.\"],\r\n  abbreviated: [\"ab. J.C.\", \"apr. J.C.\"],\r\n  wide: [\"abans Jèsus-Crist\", \"après Jèsus-Crist\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  abbreviated: [\"1èr trim.\", \"2nd trim.\", \"3en trim.\", \"4en trim.\"],\r\n  wide: [\"1èr trimèstre\", \"2nd trimèstre\", \"3en trimèstre\", \"4en trimèstre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"GN\",\r\n    \"FB\",\r\n    \"MÇ\",\r\n    \"AB\",\r\n    \"MA\",\r\n    \"JN\",\r\n    \"JL\",\r\n    \"AG\",\r\n    \"ST\",\r\n    \"OC\",\r\n    \"NV\",\r\n    \"DC\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"gen.\",\r\n    \"febr.\",\r\n    \"març\",\r\n    \"abr.\",\r\n    \"mai\",\r\n    \"junh\",\r\n    \"jul.\",\r\n    \"ag.\",\r\n    \"set.\",\r\n    \"oct.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"genièr\",\r\n    \"febrièr\",\r\n    \"març\",\r\n    \"abril\",\r\n    \"mai\",\r\n    \"junh\",\r\n    \"julhet\",\r\n    \"agost\",\r\n    \"setembre\",\r\n    \"octòbre\",\r\n    \"novembre\",\r\n    \"decembre\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  short: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  abbreviated: [\"dg.\", \"dl.\", \"dm.\", \"dc.\", \"dj.\", \"dv.\", \"ds.\"],\r\n  wide: [\r\n    \"dimenge\",\r\n    \"diluns\",\r\n    \"dimars\",\r\n    \"dimècres\",\r\n    \"dijòus\",\r\n    \"divendres\",\r\n    \"dissabte\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"matin\",\r\n    afternoon: \"aprèp-miègjorn\",\r\n    evening: \"vèspre\",\r\n    night: \"nuèch\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"matin\",\r\n    afternoon: \"aprèp-miègjorn\",\r\n    evening: \"vèspre\",\r\n    night: \"nuèch\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"matin\",\r\n    afternoon: \"aprèp-miègjorn\",\r\n    evening: \"vèspre\",\r\n    night: \"nuèch\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"del matin\",\r\n    afternoon: \"de l’aprèp-miègjorn\",\r\n    evening: \"del ser\",\r\n    night: \"de la nuèch\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"del matin\",\r\n    afternoon: \"de l’aprèp-miègjorn\",\r\n    evening: \"del ser\",\r\n    night: \"de la nuèch\",\r\n  },\r\n  wide: {\r\n    am: \"ante meridiem\",\r\n    pm: \"post meridiem\",\r\n    midnight: \"mièjanuèch\",\r\n    noon: \"miègjorn\",\r\n    morning: \"del matin\",\r\n    afternoon: \"de l’aprèp-miègjorn\",\r\n    evening: \"del ser\",\r\n    night: \"de la nuèch\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n  let ordinal;\r\n\r\n  switch (number) {\r\n    case 1:\r\n      ordinal = \"èr\";\r\n      break;\r\n    case 2:\r\n      ordinal = \"nd\";\r\n      break;\r\n    default:\r\n      ordinal = \"en\";\r\n  }\r\n\r\n  // feminine for year, week, hour, minute, second\r\n  if (\r\n    unit === \"year\" ||\r\n    unit === \"week\" ||\r\n    unit === \"hour\" ||\r\n    unit === \"minute\" ||\r\n    unit === \"second\"\r\n  ) {\r\n    ordinal += \"a\";\r\n  }\r\n\r\n  return number + ordinal;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(èr|nd|en)?[a]?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ab\\.J\\.C|apr\\.J\\.C|apr\\.J\\.-C)/i,\r\n  abbreviated: /^(ab\\.J\\.-C|ab\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\r\n  wide: /^(abans Jèsus-Crist|après Jèsus-Crist)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ab/i, /^ap/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^T[1234]/i,\r\n  abbreviated: /^[1234](èr|nd|en)? trim\\.?/i,\r\n  wide: /^[1234](èr|nd|en)? trimèstre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(GN|FB|MÇ|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i,\r\n  abbreviated: /^(gen|febr|març|abr|mai|junh|jul|ag|set|oct|nov|dec)\\.?/i,\r\n  wide: /^(genièr|febrièr|març|abril|mai|junh|julhet|agost|setembre|octòbre|novembre|decembre)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  any: [\r\n    /^g/i,\r\n    /^f/i,\r\n    /^ma[r?]|MÇ/i,\r\n    /^ab/i,\r\n    /^ma[i?]/i,\r\n    /^ju[n?]|JN/i,\r\n    /^ju[l?]|JL/i,\r\n    /^ag/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^d[glmcjvs]\\.?/i,\r\n  short: /^d[glmcjvs]\\.?/i,\r\n  abbreviated: /^d[glmcjvs]\\.?/i,\r\n  wide: /^(dimenge|diluns|dimars|dimècres|dijòus|divendres|dissabte)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\r\n  short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\r\n  abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],\r\n\r\n  any: [\r\n    /^dg|dime/i,\r\n    /^dl|dil/i,\r\n    /^dm|dima/i,\r\n    /^dc|dimè/i,\r\n    /^dj|dij/i,\r\n    /^dv|div/i,\r\n    /^ds|dis/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /(^(a\\.?m|p\\.?m))|(ante meridiem|post meridiem)|((del |de la |de l’)(matin|aprèp-miègjorn|vèspre|ser|nuèch))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /(^a)|ante meridiem/i,\r\n    pm: /(^p)|post meridiem/i,\r\n    midnight: /^mièj/i,\r\n    noon: /^mièg/i,\r\n    morning: /matin/i,\r\n    afternoon: /aprèp-miègjorn/i,\r\n    evening: /vèspre|ser/i,\r\n    night: /nuèch/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./oc/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./oc/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./oc/_lib/formatRelative.js\";\r\nimport { localize } from \"./oc/_lib/localize.js\";\r\nimport { match } from \"./oc/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Occitan locale.\r\n * @language Occitan\r\n * @iso-639-2 oci\r\n * @author Quentin PAGÈS\r\n */\r\nexport const oc = {\r\n  code: \"oc\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default oc;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      regular: \"mniej niż sekunda\",\r\n      past: \"mniej niż sekundę\",\r\n      future: \"mniej niż sekundę\",\r\n    },\r\n    twoFour: \"mniej niż {{count}} sekundy\",\r\n    other: \"mniej niż {{count}} sekund\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      regular: \"sekunda\",\r\n      past: \"sekundę\",\r\n      future: \"sekundę\",\r\n    },\r\n    twoFour: \"{{count}} sekundy\",\r\n    other: \"{{count}} sekund\",\r\n  },\r\n\r\n  halfAMinute: {\r\n    one: \"pół minuty\",\r\n    twoFour: \"pół minuty\",\r\n    other: \"pół minuty\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      regular: \"mniej niż minuta\",\r\n      past: \"mniej niż minutę\",\r\n      future: \"mniej niż minutę\",\r\n    },\r\n    twoFour: \"mniej niż {{count}} minuty\",\r\n    other: \"mniej niż {{count}} minut\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      regular: \"minuta\",\r\n      past: \"minutę\",\r\n      future: \"minutę\",\r\n    },\r\n    twoFour: \"{{count}} minuty\",\r\n    other: \"{{count}} minut\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      regular: \"około godziny\",\r\n      past: \"około godziny\",\r\n      future: \"około godzinę\",\r\n    },\r\n    twoFour: \"około {{count}} godziny\",\r\n    other: \"około {{count}} godzin\",\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      regular: \"godzina\",\r\n      past: \"godzinę\",\r\n      future: \"godzinę\",\r\n    },\r\n    twoFour: \"{{count}} godziny\",\r\n    other: \"{{count}} godzin\",\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      regular: \"dzień\",\r\n      past: \"dzień\",\r\n      future: \"1 dzień\",\r\n    },\r\n    twoFour: \"{{count}} dni\",\r\n    other: \"{{count}} dni\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"około tygodnia\",\r\n    twoFour: \"około {{count}} tygodni\",\r\n    other: \"około {{count}} tygodni\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"tydzień\",\r\n    twoFour: \"{{count}} tygodnie\",\r\n    other: \"{{count}} tygodni\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"około miesiąc\",\r\n    twoFour: \"około {{count}} miesiące\",\r\n    other: \"około {{count}} miesięcy\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"miesiąc\",\r\n    twoFour: \"{{count}} miesiące\",\r\n    other: \"{{count}} miesięcy\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"około rok\",\r\n    twoFour: \"około {{count}} lata\",\r\n    other: \"około {{count}} lat\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"rok\",\r\n    twoFour: \"{{count}} lata\",\r\n    other: \"{{count}} lat\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"ponad rok\",\r\n    twoFour: \"ponad {{count}} lata\",\r\n    other: \"ponad {{count}} lat\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"prawie rok\",\r\n    twoFour: \"prawie {{count}} lata\",\r\n    other: \"prawie {{count}} lat\",\r\n  },\r\n};\r\n\r\nfunction declensionGroup(scheme, count) {\r\n  if (count === 1) {\r\n    return scheme.one;\r\n  }\r\n\r\n  const rem100 = count % 100;\r\n\r\n  // ends with 11-20\r\n  if (rem100 <= 20 && rem100 > 10) {\r\n    return scheme.other;\r\n  }\r\n\r\n  const rem10 = rem100 % 10;\r\n\r\n  // ends with 2, 3, 4\r\n  if (rem10 >= 2 && rem10 <= 4) {\r\n    return scheme.twoFour;\r\n  }\r\n\r\n  return scheme.other;\r\n}\r\n\r\nfunction declension(scheme, count, time) {\r\n  const group = declensionGroup(scheme, count);\r\n  const finalText = typeof group === \"string\" ? group : group[time];\r\n  return finalText.replace(\"{{count}}\", String(count));\r\n}\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const scheme = formatDistanceLocale[token];\r\n  if (!options?.addSuffix) {\r\n    return declension(scheme, count, \"regular\");\r\n  }\r\n\r\n  if (options.comparison && options.comparison > 0) {\r\n    return \"za \" + declension(scheme, count, \"future\");\r\n  } else {\r\n    return declension(scheme, count, \"past\") + \" temu\";\r\n  }\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"do MMM y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst adjectivesLastWeek = {\r\n  masculine: \"ostatni\",\r\n  feminine: \"ostatnia\",\r\n};\r\n\r\nconst adjectivesThisWeek = {\r\n  masculine: \"ten\",\r\n  feminine: \"ta\",\r\n};\r\n\r\nconst adjectivesNextWeek = {\r\n  masculine: \"następny\",\r\n  feminine: \"następna\",\r\n};\r\n\r\nconst dayGrammaticalGender = {\r\n  0: \"feminine\",\r\n  1: \"masculine\",\r\n  2: \"masculine\",\r\n  3: \"feminine\",\r\n  4: \"masculine\",\r\n  5: \"masculine\",\r\n  6: \"feminine\",\r\n};\r\n\r\nfunction dayAndTimeWithAdjective(token, date, baseDate, options) {\r\n  let adjectives;\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    adjectives = adjectivesThisWeek;\r\n  } else if (token === \"lastWeek\") {\r\n    adjectives = adjectivesLastWeek;\r\n  } else if (token === \"nextWeek\") {\r\n    adjectives = adjectivesNextWeek;\r\n  } else {\r\n    throw new Error(`Cannot determine adjectives for token ${token}`);\r\n  }\r\n\r\n  const day = date.getDay();\r\n  const grammaticalGender = dayGrammaticalGender[day];\r\n\r\n  const adjective = adjectives[grammaticalGender];\r\n\r\n  return `'${adjective}' eeee 'o' p`;\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: dayAndTimeWithAdjective,\r\n  yesterday: \"'wczoraj o' p\",\r\n  today: \"'dzisiaj o' p\",\r\n  tomorrow: \"'jutro o' p\",\r\n  nextWeek: dayAndTimeWithAdjective,\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(token, date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"p.n.e.\", \"n.e.\"],\r\n  abbreviated: [\"p.n.e.\", \"n.e.\"],\r\n  wide: [\"przed naszą erą\", \"naszej ery\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"I kw.\", \"II kw.\", \"III kw.\", \"IV kw.\"],\r\n  wide: [\"I kwartał\", \"II kwartał\", \"III kwartał\", \"IV kwartał\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"S\", \"L\", \"M\", \"K\", \"M\", \"C\", \"L\", \"S\", \"W\", \"P\", \"L\", \"G\"],\r\n  abbreviated: [\r\n    \"sty\",\r\n    \"lut\",\r\n    \"mar\",\r\n    \"kwi\",\r\n    \"maj\",\r\n    \"cze\",\r\n    \"lip\",\r\n    \"sie\",\r\n    \"wrz\",\r\n    \"paź\",\r\n    \"lis\",\r\n    \"gru\",\r\n  ],\r\n\r\n  wide: [\r\n    \"styczeń\",\r\n    \"luty\",\r\n    \"marzec\",\r\n    \"kwiecień\",\r\n    \"maj\",\r\n    \"czerwiec\",\r\n    \"lipiec\",\r\n    \"sierpień\",\r\n    \"wrzesień\",\r\n    \"październik\",\r\n    \"listopad\",\r\n    \"grudzień\",\r\n  ],\r\n};\r\nconst monthFormattingValues = {\r\n  narrow: [\"s\", \"l\", \"m\", \"k\", \"m\", \"c\", \"l\", \"s\", \"w\", \"p\", \"l\", \"g\"],\r\n  abbreviated: [\r\n    \"sty\",\r\n    \"lut\",\r\n    \"mar\",\r\n    \"kwi\",\r\n    \"maj\",\r\n    \"cze\",\r\n    \"lip\",\r\n    \"sie\",\r\n    \"wrz\",\r\n    \"paź\",\r\n    \"lis\",\r\n    \"gru\",\r\n  ],\r\n\r\n  wide: [\r\n    \"stycznia\",\r\n    \"lutego\",\r\n    \"marca\",\r\n    \"kwietnia\",\r\n    \"maja\",\r\n    \"czerwca\",\r\n    \"lipca\",\r\n    \"sierpnia\",\r\n    \"września\",\r\n    \"października\",\r\n    \"listopada\",\r\n    \"grudnia\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"N\", \"P\", \"W\", \"Ś\", \"C\", \"P\", \"S\"],\r\n  short: [\"nie\", \"pon\", \"wto\", \"śro\", \"czw\", \"pią\", \"sob\"],\r\n  abbreviated: [\"niedz.\", \"pon.\", \"wt.\", \"śr.\", \"czw.\", \"pt.\", \"sob.\"],\r\n  wide: [\r\n    \"niedziela\",\r\n    \"poniedziałek\",\r\n    \"wtorek\",\r\n    \"środa\",\r\n    \"czwartek\",\r\n    \"piątek\",\r\n    \"sobota\",\r\n  ],\r\n};\r\nconst dayFormattingValues = {\r\n  narrow: [\"n\", \"p\", \"w\", \"ś\", \"c\", \"p\", \"s\"],\r\n  short: [\"nie\", \"pon\", \"wto\", \"śro\", \"czw\", \"pią\", \"sob\"],\r\n  abbreviated: [\"niedz.\", \"pon.\", \"wt.\", \"śr.\", \"czw.\", \"pt.\", \"sob.\"],\r\n  wide: [\r\n    \"niedziela\",\r\n    \"poniedziałek\",\r\n    \"wtorek\",\r\n    \"środa\",\r\n    \"czwartek\",\r\n    \"piątek\",\r\n    \"sobota\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"półn.\",\r\n    noon: \"poł\",\r\n    morning: \"rano\",\r\n    afternoon: \"popoł.\",\r\n    evening: \"wiecz.\",\r\n    night: \"noc\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"północ\",\r\n    noon: \"południe\",\r\n    morning: \"rano\",\r\n    afternoon: \"popołudnie\",\r\n    evening: \"wieczór\",\r\n    night: \"noc\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"północ\",\r\n    noon: \"południe\",\r\n    morning: \"rano\",\r\n    afternoon: \"popołudnie\",\r\n    evening: \"wieczór\",\r\n    night: \"noc\",\r\n  },\r\n};\r\n\r\nconst dayPeriodFormattingValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"o półn.\",\r\n    noon: \"w poł.\",\r\n    morning: \"rano\",\r\n    afternoon: \"po poł.\",\r\n    evening: \"wiecz.\",\r\n    night: \"w nocy\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"o północy\",\r\n    noon: \"w południe\",\r\n    morning: \"rano\",\r\n    afternoon: \"po południu\",\r\n    evening: \"wieczorem\",\r\n    night: \"w nocy\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"o północy\",\r\n    noon: \"w południe\",\r\n    morning: \"rano\",\r\n    afternoon: \"po południu\",\r\n    evening: \"wieczorem\",\r\n    night: \"w nocy\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: monthFormattingValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: dayFormattingValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: dayPeriodFormattingValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(p\\.?\\s*n\\.?\\s*e\\.?\\s*|n\\.?\\s*e\\.?\\s*)/i,\r\n  abbreviated: /^(p\\.?\\s*n\\.?\\s*e\\.?\\s*|n\\.?\\s*e\\.?\\s*)/i,\r\n  wide: /^(przed\\s*nasz(ą|a)\\s*er(ą|a)|naszej\\s*ery)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^p/i, /^n/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^(I|II|III|IV)\\s*kw\\.?/i,\r\n  wide: /^(I|II|III|IV)\\s*kwarta(ł|l)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  narrow: [/1/i, /2/i, /3/i, /4/i],\r\n  any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[slmkcwpg]/i,\r\n  abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(ź|z)|lis|gru)/i,\r\n  wide: /^(stycznia|stycze(ń|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(ń|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(ń|n)|wrze(ś|s)nia|wrzesie(ń|n)|pa(ź|z)dziernika|pa(ź|z)dziernik|listopada|listopad|grudnia|grudzie(ń|n))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^s/i,\r\n    /^l/i,\r\n    /^m/i,\r\n    /^k/i,\r\n    /^m/i,\r\n    /^c/i,\r\n    /^l/i,\r\n    /^s/i,\r\n    /^w/i,\r\n    /^p/i,\r\n    /^l/i,\r\n    /^g/i,\r\n  ],\r\n\r\n  any: [\r\n    /^st/i,\r\n    /^lu/i,\r\n    /^mar/i,\r\n    /^k/i,\r\n    /^maj/i,\r\n    /^c/i,\r\n    /^lip/i,\r\n    /^si/i,\r\n    /^w/i,\r\n    /^p/i,\r\n    /^lis/i,\r\n    /^g/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npwścs]/i,\r\n  short: /^(nie|pon|wto|(ś|s)ro|czw|pi(ą|a)|sob)/i,\r\n  abbreviated: /^(niedz|pon|wt|(ś|s)r|czw|pt|sob)\\.?/i,\r\n  wide: /^(niedziela|poniedzia(ł|l)ek|wtorek|(ś|s)roda|czwartek|pi(ą|a)tek|sobota)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^n/i, /^p/i, /^w/i, /^ś/i, /^c/i, /^p/i, /^s/i],\r\n  abbreviated: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pt/i, /^so/i],\r\n\r\n  any: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pi/i, /^so/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(^a$|^p$|pó(ł|l)n\\.?|o\\s*pó(ł|l)n\\.?|po(ł|l)\\.?|w\\s*po(ł|l)\\.?|po\\s*po(ł|l)\\.?|rano|wiecz\\.?|noc|w\\s*nocy)/i,\r\n  any: /^(am|pm|pó(ł|l)noc|o\\s*pó(ł|l)nocy|po(ł|l)udnie|w\\s*po(ł|l)udnie|popo(ł|l)udnie|po\\s*po(ł|l)udniu|rano|wieczór|wieczorem|noc|w\\s*nocy)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  narrow: {\r\n    am: /^a$/i,\r\n    pm: /^p$/i,\r\n    midnight: /pó(ł|l)n/i,\r\n    noon: /po(ł|l)/i,\r\n    morning: /rano/i,\r\n    afternoon: /po\\s*po(ł|l)/i,\r\n    evening: /wiecz/i,\r\n    night: /noc/i,\r\n  },\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /pó(ł|l)n/i,\r\n    noon: /po(ł|l)/i,\r\n    morning: /rano/i,\r\n    afternoon: /po\\s*po(ł|l)/i,\r\n    evening: /wiecz/i,\r\n    night: /noc/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./pl/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./pl/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./pl/_lib/formatRelative.js\";\r\nimport { localize } from \"./pl/_lib/localize.js\";\r\nimport { match } from \"./pl/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Polish locale.\r\n * @language Polish\r\n * @iso-639-2 pol\r\n * @author Mateusz Derks [@ertrzyiks](https://github.com/ertrzyiks)\r\n * @author Just RAG [@justrag](https://github.com/justrag)\r\n * @author Mikolaj Grzyb [@mikolajgrzyb](https://github.com/mikolajgrzyb)\r\n * @author Mateusz Tokarski [@mutisz](https://github.com/mutisz)\r\n */\r\nexport const pl = {\r\n  code: \"pl\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default pl;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menos de um segundo\",\r\n    other: \"menos de {{count}} segundos\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundos\",\r\n  },\r\n\r\n  halfAMinute: \"meio minuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menos de um minuto\",\r\n    other: \"menos de {{count}} minutos\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutos\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"aproximadamente 1 hora\",\r\n    other: \"aproximadamente {{count}} horas\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} horas\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dia\",\r\n    other: \"{{count}} dias\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"aproximadamente 1 semana\",\r\n    other: \"aproximadamente {{count}} semanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semana\",\r\n    other: \"{{count}} semanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"aproximadamente 1 mês\",\r\n    other: \"aproximadamente {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mês\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"aproximadamente 1 ano\",\r\n    other: \"aproximadamente {{count}} anos\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ano\",\r\n    other: \"{{count}} anos\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"mais de 1 ano\",\r\n    other: \"mais de {{count}} anos\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"quase 1 ano\",\r\n    other: \"quase {{count}} anos\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"daqui a \" + result;\r\n    } else {\r\n      return \"há \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d 'de' MMMM 'de' y\",\r\n  long: \"d 'de' MMMM 'de' y\",\r\n  medium: \"d 'de' MMM 'de' y\",\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'às' {{time}}\",\r\n  long: \"{{date}} 'às' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    const weekday = date.getDay();\r\n    const last = weekday === 0 || weekday === 6 ? \"último\" : \"última\";\r\n    return \"'\" + last + \"' eeee 'às' p\";\r\n  },\r\n  yesterday: \"'ontem às' p\",\r\n  today: \"'hoje às' p\",\r\n  tomorrow: \"'amanhã às' p\",\r\n  nextWeek: \"eeee 'às' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"aC\", \"dC\"],\r\n  abbreviated: [\"a.C.\", \"d.C.\"],\r\n  wide: [\"antes de Cristo\", \"depois de Cristo\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"fev\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"mai\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"ago\",\r\n    \"set\",\r\n    \"out\",\r\n    \"nov\",\r\n    \"dez\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janeiro\",\r\n    \"fevereiro\",\r\n    \"março\",\r\n    \"abril\",\r\n    \"maio\",\r\n    \"junho\",\r\n    \"julho\",\r\n    \"agosto\",\r\n    \"setembro\",\r\n    \"outubro\",\r\n    \"novembro\",\r\n    \"dezembro\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"d\", \"s\", \"t\", \"q\", \"q\", \"s\", \"s\"],\r\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sáb\"],\r\n  abbreviated: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sáb\"],\r\n  wide: [\r\n    \"domingo\",\r\n    \"segunda-feira\",\r\n    \"terça-feira\",\r\n    \"quarta-feira\",\r\n    \"quinta-feira\",\r\n    \"sexta-feira\",\r\n    \"sábado\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"noite\",\r\n    night: \"madrugada\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"noite\",\r\n    night: \"madrugada\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"noite\",\r\n    night: \"madrugada\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da noite\",\r\n    night: \"da madrugada\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da noite\",\r\n    night: \"da madrugada\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da noite\",\r\n    night: \"da madrugada\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"º\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(º|ª)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ac|dc|a|d)/i,\r\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\r\n  wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ac/i, /^dc/i],\r\n  wide: [\r\n    /^(antes de cristo|antes da era comum)/i,\r\n    /^(depois de cristo|era comum)/i,\r\n  ],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^[1234](º|ª)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\r\n  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ab/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^ag/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dstq]/i,\r\n  short: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,\r\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i,\r\n  wide: /^(domingo|segunda-?\\s?feira|terça-?\\s?feira|quarta-?\\s?feira|quinta-?\\s?feira|sexta-?\\s?feira|s[áa]bado)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i],\r\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[áa]/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(a|p|meia-?\\s?noite|meio-?\\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|meia-?\\s?noite|meio-?\\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^meia/i,\r\n    noon: /^meio/i,\r\n    morning: /manh[ãa]/i,\r\n    afternoon: /tarde/i,\r\n    evening: /noite/i,\r\n    night: /madrugada/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./pt/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./pt/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./pt/_lib/formatRelative.js\";\r\nimport { localize } from \"./pt/_lib/localize.js\";\r\nimport { match } from \"./pt/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Portuguese locale.\r\n * @language Portuguese\r\n * @iso-639-2 por\r\n * @author Dário Freire [@dfreire](https://github.com/dfreire)\r\n * @author Adrián de la Rosa [@adrm](https://github.com/adrm)\r\n */\r\nexport const pt = {\r\n  code: \"pt\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default pt;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"menos de um segundo\",\r\n    other: \"menos de {{count}} segundos\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 segundo\",\r\n    other: \"{{count}} segundos\",\r\n  },\r\n\r\n  halfAMinute: \"meio minuto\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"menos de um minuto\",\r\n    other: \"menos de {{count}} minutos\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minuto\",\r\n    other: \"{{count}} minutos\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"cerca de 1 hora\",\r\n    other: \"cerca de {{count}} horas\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 hora\",\r\n    other: \"{{count}} horas\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 dia\",\r\n    other: \"{{count}} dias\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"cerca de 1 semana\",\r\n    other: \"cerca de {{count}} semanas\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 semana\",\r\n    other: \"{{count}} semanas\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"cerca de 1 mês\",\r\n    other: \"cerca de {{count}} meses\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 mês\",\r\n    other: \"{{count}} meses\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"cerca de 1 ano\",\r\n    other: \"cerca de {{count}} anos\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ano\",\r\n    other: \"{{count}} anos\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"mais de 1 ano\",\r\n    other: \"mais de {{count}} anos\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"quase 1 ano\",\r\n    other: \"quase {{count}} anos\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"em \" + result;\r\n    } else {\r\n      return \"há \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d 'de' MMMM 'de' y\",\r\n  long: \"d 'de' MMMM 'de' y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'às' {{time}}\",\r\n  long: \"{{date}} 'às' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    const weekday = date.getDay();\r\n    const last = weekday === 0 || weekday === 6 ? \"último\" : \"última\";\r\n    return \"'\" + last + \"' eeee 'às' p\";\r\n  },\r\n  yesterday: \"'ontem às' p\",\r\n  today: \"'hoje às' p\",\r\n  tomorrow: \"'amanhã às' p\",\r\n  nextWeek: \"eeee 'às' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"AC\", \"DC\"],\r\n  abbreviated: [\"AC\", \"DC\"],\r\n  wide: [\"antes de cristo\", \"depois de cristo\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"fev\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"mai\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"ago\",\r\n    \"set\",\r\n    \"out\",\r\n    \"nov\",\r\n    \"dez\",\r\n  ],\r\n\r\n  wide: [\r\n    \"janeiro\",\r\n    \"fevereiro\",\r\n    \"março\",\r\n    \"abril\",\r\n    \"maio\",\r\n    \"junho\",\r\n    \"julho\",\r\n    \"agosto\",\r\n    \"setembro\",\r\n    \"outubro\",\r\n    \"novembro\",\r\n    \"dezembro\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\r\n  short: [\"dom\", \"seg\", \"ter\", \"qua\", \"qui\", \"sex\", \"sab\"],\r\n  abbreviated: [\r\n    \"domingo\",\r\n    \"segunda\",\r\n    \"terça\",\r\n    \"quarta\",\r\n    \"quinta\",\r\n    \"sexta\",\r\n    \"sábado\",\r\n  ],\r\n\r\n  wide: [\r\n    \"domingo\",\r\n    \"segunda-feira\",\r\n    \"terça-feira\",\r\n    \"quarta-feira\",\r\n    \"quinta-feira\",\r\n    \"sexta-feira\",\r\n    \"sábado\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noite\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noite\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"manhã\",\r\n    afternoon: \"tarde\",\r\n    evening: \"tarde\",\r\n    night: \"noite\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"md\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tarde\",\r\n    night: \"da noite\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tarde\",\r\n    night: \"da noite\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"meia-noite\",\r\n    noon: \"meio-dia\",\r\n    morning: \"da manhã\",\r\n    afternoon: \"da tarde\",\r\n    evening: \"da tarde\",\r\n    night: \"da noite\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  if (options?.unit === \"week\") {\r\n    return number + \"ª\";\r\n  }\r\n  return number + \"º\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)[ºªo]?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ac|dc|a|d)/i,\r\n  abbreviated: /^(a\\.?\\s?c\\.?|d\\.?\\s?c\\.?)/i,\r\n  wide: /^(antes de cristo|depois de cristo)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ac/i, /^dc/i],\r\n  wide: [/^antes de cristo/i, /^depois de cristo/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^[1234](º)? trimestre/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmajsond]/i,\r\n  abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,\r\n  wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^fev/i,\r\n    /^mar/i,\r\n    /^abr/i,\r\n    /^mai/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^ago/i,\r\n    /^set/i,\r\n    /^out/i,\r\n    /^nov/i,\r\n    /^dez/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(dom|[23456]ª?|s[aá]b)/i,\r\n  short: /^(dom|[23456]ª?|s[aá]b)/i,\r\n  abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i,\r\n  wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\r\n  narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i],\r\n  any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá]b/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|meia[-\\s]noite|meio[-\\s]dia|(da) (manhã|tarde|noite))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mn|^meia[-\\s]noite/i,\r\n    noon: /^md|^meio[-\\s]dia/i,\r\n    morning: /manhã/i,\r\n    afternoon: /tarde/i,\r\n    evening: /tarde/i,\r\n    night: /noite/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./pt-BR/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./pt-BR/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./pt-BR/_lib/formatRelative.js\";\r\nimport { localize } from \"./pt-BR/_lib/localize.js\";\r\nimport { match } from \"./pt-BR/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Portuguese locale (Brazil).\r\n * @language Portuguese\r\n * @iso-639-2 por\r\n * @author Lucas Duailibe [@duailibe](https://github.com/duailibe)\r\n * @author Yago Carballo [@yagocarballo](https://github.com/YagoCarballo)\r\n */\r\nexport const ptBR = {\r\n  code: \"pt-BR\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ptBR;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mai puțin de o secundă\",\r\n    other: \"mai puțin de {{count}} secunde\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 secundă\",\r\n    other: \"{{count}} secunde\",\r\n  },\r\n\r\n  halfAMinute: \"jumătate de minut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mai puțin de un minut\",\r\n    other: \"mai puțin de {{count}} minute\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minut\",\r\n    other: \"{{count}} minute\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"circa 1 oră\",\r\n    other: \"circa {{count}} ore\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 oră\",\r\n    other: \"{{count}} ore\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 zi\",\r\n    other: \"{{count}} zile\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"circa o săptămână\",\r\n    other: \"circa {{count}} săptămâni\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 săptămână\",\r\n    other: \"{{count}} săptămâni\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"circa 1 lună\",\r\n    other: \"circa {{count}} luni\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 lună\",\r\n    other: \"{{count}} luni\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"circa 1 an\",\r\n    other: \"circa {{count}} ani\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 an\",\r\n    other: \"{{count}} ani\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"peste 1 an\",\r\n    other: \"peste {{count}} ani\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"aproape 1 an\",\r\n    other: \"aproape {{count}} ani\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"în \" + result;\r\n    } else {\r\n      return result + \" în urmă\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM yyyy\",\r\n  long: \"d MMMM yyyy\",\r\n  medium: \"d MMM yyyy\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'la' {{time}}\",\r\n  long: \"{{date}} 'la' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'trecută la' p\",\r\n  yesterday: \"'ieri la' p\",\r\n  today: \"'astăzi la' p\",\r\n  tomorrow: \"'mâine la' p\",\r\n  nextWeek: \"eeee 'viitoare la' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"Î\", \"D\"],\r\n  abbreviated: [\"Î.d.C.\", \"D.C.\"],\r\n  wide: [\"Înainte de Cristos\", \"După Cristos\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\r\n  wide: [\r\n    \"primul trimestru\",\r\n    \"al doilea trimestru\",\r\n    \"al treilea trimestru\",\r\n    \"al patrulea trimestru\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"I\", \"F\", \"M\", \"A\", \"M\", \"I\", \"I\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"ian\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"mai\",\r\n    \"iun\",\r\n    \"iul\",\r\n    \"aug\",\r\n    \"sep\",\r\n    \"oct\",\r\n    \"noi\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ianuarie\",\r\n    \"februarie\",\r\n    \"martie\",\r\n    \"aprilie\",\r\n    \"mai\",\r\n    \"iunie\",\r\n    \"iulie\",\r\n    \"august\",\r\n    \"septembrie\",\r\n    \"octombrie\",\r\n    \"noiembrie\",\r\n    \"decembrie\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\r\n  short: [\"du\", \"lu\", \"ma\", \"mi\", \"jo\", \"vi\", \"sâ\"],\r\n  abbreviated: [\"dum\", \"lun\", \"mar\", \"mie\", \"joi\", \"vin\", \"sâm\"],\r\n  wide: [\"duminică\", \"luni\", \"marți\", \"miercuri\", \"joi\", \"vineri\", \"sâmbătă\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"ami\",\r\n    morning: \"dim\",\r\n    afternoon: \"da\",\r\n    evening: \"s\",\r\n    night: \"n\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"miezul nopții\",\r\n    noon: \"amiază\",\r\n    morning: \"dimineață\",\r\n    afternoon: \"după-amiază\",\r\n    evening: \"seară\",\r\n    night: \"noapte\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"miezul nopții\",\r\n    noon: \"amiază\",\r\n    morning: \"dimineață\",\r\n    afternoon: \"după-amiază\",\r\n    evening: \"seară\",\r\n    night: \"noapte\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"mn\",\r\n    noon: \"amiază\",\r\n    morning: \"dimineață\",\r\n    afternoon: \"după-amiază\",\r\n    evening: \"seară\",\r\n    night: \"noapte\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"miezul nopții\",\r\n    noon: \"amiază\",\r\n    morning: \"dimineață\",\r\n    afternoon: \"după-amiază\",\r\n    evening: \"seară\",\r\n    night: \"noapte\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"miezul nopții\",\r\n    noon: \"amiază\",\r\n    morning: \"dimineață\",\r\n    afternoon: \"după-amiază\",\r\n    evening: \"seară\",\r\n    night: \"noapte\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(Î|D)/i,\r\n  abbreviated:\r\n    /^(Î\\.?\\s?d\\.?\\s?C\\.?|Î\\.?\\s?e\\.?\\s?n\\.?|D\\.?\\s?C\\.?|e\\.?\\s?n\\.?)/i,\r\n  wide: /^(Înainte de Cristos|Înaintea erei noastre|După Cristos|Era noastră)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^ÎC/i, /^DC/i],\r\n  wide: [\r\n    /^(Înainte de Cristos|Înaintea erei noastre)/i,\r\n    /^(După Cristos|Era noastră)/i,\r\n  ],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^T[1234]/i,\r\n  wide: /^trimestrul [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[ifmaasond]/i,\r\n  abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,\r\n  wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^i/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^i/i,\r\n    /^i/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ia/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^mai/i,\r\n    /^iun/i,\r\n    /^iul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dlmjvs]/i,\r\n  short: /^(d|l|ma|mi|j|v|s)/i,\r\n  abbreviated: /^(dum|lun|mar|mie|jo|vi|sâ)/i,\r\n  wide: /^(duminica|luni|marţi|miercuri|joi|vineri|sâmbătă)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\r\n  any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|mn|a|(dimineaţa|după-amiaza|seara|noaptea))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|miezul nopții|amiaza|(dimineaţa|după-amiaza|seara|noaptea))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^mn/i,\r\n    noon: /amiaza/i,\r\n    morning: /dimineaţa/i,\r\n    afternoon: /după-amiaza/i,\r\n    evening: /seara/i,\r\n    night: /noaptea/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ro/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ro/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ro/_lib/formatRelative.js\";\r\nimport { localize } from \"./ro/_lib/localize.js\";\r\nimport { match } from \"./ro/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Romanian locale.\r\n * @language Romanian\r\n * @iso-639-2 ron\r\n * @author Sergiu Munteanu [@jsergiu](https://github.com/jsergiu)\r\n * @author Adrian Ocneanu [@aocneanu](https://github.com/aocneanu)\r\n * @author Mihai Ocneanu [@gandesc](https://github.com/gandesc)\r\n */\r\nexport const ro = {\r\n  code: \"ro\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ro;\r\n", "function declension(scheme, count) {\r\n  // scheme for count=1 exists\r\n  if (scheme.one !== undefined && count === 1) {\r\n    return scheme.one;\r\n  }\r\n\r\n  const rem10 = count % 10;\r\n  const rem100 = count % 100;\r\n\r\n  // 1, 21, 31, ...\r\n  if (rem10 === 1 && rem100 !== 11) {\r\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\r\n\r\n    // 2, 3, 4, 22, 23, 24, 32 ...\r\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\r\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\r\n\r\n    // 5, 6, 7, 8, 9, 10, 11, ...\r\n  } else {\r\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\r\n  }\r\n}\r\n\r\nfunction buildLocalizeTokenFn(scheme) {\r\n  return (count, options) => {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        if (scheme.future) {\r\n          return declension(scheme.future, count);\r\n        } else {\r\n          return \"через \" + declension(scheme.regular, count);\r\n        }\r\n      } else {\r\n        if (scheme.past) {\r\n          return declension(scheme.past, count);\r\n        } else {\r\n          return declension(scheme.regular, count) + \" назад\";\r\n        }\r\n      }\r\n    } else {\r\n      return declension(scheme.regular, count);\r\n    }\r\n  };\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"меньше секунды\",\r\n      singularNominative: \"меньше {{count}} секунды\",\r\n      singularGenitive: \"меньше {{count}} секунд\",\r\n      pluralGenitive: \"меньше {{count}} секунд\",\r\n    },\r\n    future: {\r\n      one: \"меньше, чем через секунду\",\r\n      singularNominative: \"меньше, чем через {{count}} секунду\",\r\n      singularGenitive: \"меньше, чем через {{count}} секунды\",\r\n      pluralGenitive: \"меньше, чем через {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  xSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} секунда\",\r\n      singularGenitive: \"{{count}} секунды\",\r\n      pluralGenitive: \"{{count}} секунд\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} секунду назад\",\r\n      singularGenitive: \"{{count}} секунды назад\",\r\n      pluralGenitive: \"{{count}} секунд назад\",\r\n    },\r\n    future: {\r\n      singularNominative: \"через {{count}} секунду\",\r\n      singularGenitive: \"через {{count}} секунды\",\r\n      pluralGenitive: \"через {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  halfAMinute: (_count, options) => {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        return \"через полминуты\";\r\n      } else {\r\n        return \"полминуты назад\";\r\n      }\r\n    }\r\n\r\n    return \"полминуты\";\r\n  },\r\n\r\n  lessThanXMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"меньше минуты\",\r\n      singularNominative: \"меньше {{count}} минуты\",\r\n      singularGenitive: \"меньше {{count}} минут\",\r\n      pluralGenitive: \"меньше {{count}} минут\",\r\n    },\r\n    future: {\r\n      one: \"меньше, чем через минуту\",\r\n      singularNominative: \"меньше, чем через {{count}} минуту\",\r\n      singularGenitive: \"меньше, чем через {{count}} минуты\",\r\n      pluralGenitive: \"меньше, чем через {{count}} минут\",\r\n    },\r\n  }),\r\n\r\n  xMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} минута\",\r\n      singularGenitive: \"{{count}} минуты\",\r\n      pluralGenitive: \"{{count}} минут\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} минуту назад\",\r\n      singularGenitive: \"{{count}} минуты назад\",\r\n      pluralGenitive: \"{{count}} минут назад\",\r\n    },\r\n    future: {\r\n      singularNominative: \"через {{count}} минуту\",\r\n      singularGenitive: \"через {{count}} минуты\",\r\n      pluralGenitive: \"через {{count}} минут\",\r\n    },\r\n  }),\r\n\r\n  aboutXHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"около {{count}} часа\",\r\n      singularGenitive: \"около {{count}} часов\",\r\n      pluralGenitive: \"около {{count}} часов\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизительно через {{count}} час\",\r\n      singularGenitive: \"приблизительно через {{count}} часа\",\r\n      pluralGenitive: \"приблизительно через {{count}} часов\",\r\n    },\r\n  }),\r\n\r\n  xHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} час\",\r\n      singularGenitive: \"{{count}} часа\",\r\n      pluralGenitive: \"{{count}} часов\",\r\n    },\r\n  }),\r\n\r\n  xDays: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} день\",\r\n      singularGenitive: \"{{count}} дня\",\r\n      pluralGenitive: \"{{count}} дней\",\r\n    },\r\n  }),\r\n\r\n  aboutXWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"около {{count}} недели\",\r\n      singularGenitive: \"около {{count}} недель\",\r\n      pluralGenitive: \"около {{count}} недель\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизительно через {{count}} неделю\",\r\n      singularGenitive: \"приблизительно через {{count}} недели\",\r\n      pluralGenitive: \"приблизительно через {{count}} недель\",\r\n    },\r\n  }),\r\n\r\n  xWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} неделя\",\r\n      singularGenitive: \"{{count}} недели\",\r\n      pluralGenitive: \"{{count}} недель\",\r\n    },\r\n  }),\r\n\r\n  aboutXMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"около {{count}} месяца\",\r\n      singularGenitive: \"около {{count}} месяцев\",\r\n      pluralGenitive: \"около {{count}} месяцев\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизительно через {{count}} месяц\",\r\n      singularGenitive: \"приблизительно через {{count}} месяца\",\r\n      pluralGenitive: \"приблизительно через {{count}} месяцев\",\r\n    },\r\n  }),\r\n\r\n  xMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} месяц\",\r\n      singularGenitive: \"{{count}} месяца\",\r\n      pluralGenitive: \"{{count}} месяцев\",\r\n    },\r\n  }),\r\n\r\n  aboutXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"около {{count}} года\",\r\n      singularGenitive: \"около {{count}} лет\",\r\n      pluralGenitive: \"около {{count}} лет\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизительно через {{count}} год\",\r\n      singularGenitive: \"приблизительно через {{count}} года\",\r\n      pluralGenitive: \"приблизительно через {{count}} лет\",\r\n    },\r\n  }),\r\n\r\n  xYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} год\",\r\n      singularGenitive: \"{{count}} года\",\r\n      pluralGenitive: \"{{count}} лет\",\r\n    },\r\n  }),\r\n\r\n  overXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"больше {{count}} года\",\r\n      singularGenitive: \"больше {{count}} лет\",\r\n      pluralGenitive: \"больше {{count}} лет\",\r\n    },\r\n    future: {\r\n      singularNominative: \"больше, чем через {{count}} год\",\r\n      singularGenitive: \"больше, чем через {{count}} года\",\r\n      pluralGenitive: \"больше, чем через {{count}} лет\",\r\n    },\r\n  }),\r\n\r\n  almostXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"почти {{count}} год\",\r\n      singularGenitive: \"почти {{count}} года\",\r\n      pluralGenitive: \"почти {{count}} лет\",\r\n    },\r\n    future: {\r\n      singularNominative: \"почти через {{count}} год\",\r\n      singularGenitive: \"почти через {{count}} года\",\r\n      pluralGenitive: \"почти через {{count}} лет\",\r\n    },\r\n  }),\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  return formatDistanceLocale[token](count, options);\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM y 'г.'\",\r\n  long: \"d MMMM y 'г.'\",\r\n  medium: \"d MMM y 'г.'\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"воскресенье\",\r\n  \"понедельник\",\r\n  \"вторник\",\r\n  \"среду\",\r\n  \"четверг\",\r\n  \"пятницу\",\r\n  \"субботу\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n      return \"'в прошлое \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'в прошлый \" + weekday + \" в' p\";\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'в прошлую \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  if (day === 2 /* Tue */) {\r\n    return \"'во \" + weekday + \" в' p\";\r\n  } else {\r\n    return \"'в \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n      return \"'в следующее \" + weekday + \" в' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'в следующий \" + weekday + \" в' p\";\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'в следующую \" + weekday + \" в' p\";\r\n  }\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'вчера в' p\",\r\n  today: \"'сегодня в' p\",\r\n  tomorrow: \"'завтра в' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"до н.э.\", \"н.э.\"],\r\n  abbreviated: [\"до н. э.\", \"н. э.\"],\r\n  wide: [\"до нашей эры\", \"нашей эры\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-й кв.\", \"2-й кв.\", \"3-й кв.\", \"4-й кв.\"],\r\n  wide: [\"1-й квартал\", \"2-й квартал\", \"3-й квартал\", \"4-й квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\r\n  abbreviated: [\r\n    \"янв.\",\r\n    \"фев.\",\r\n    \"март\",\r\n    \"апр.\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"авг.\",\r\n    \"сент.\",\r\n    \"окт.\",\r\n    \"нояб.\",\r\n    \"дек.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"январь\",\r\n    \"февраль\",\r\n    \"март\",\r\n    \"апрель\",\r\n    \"май\",\r\n    \"июнь\",\r\n    \"июль\",\r\n    \"август\",\r\n    \"сентябрь\",\r\n    \"октябрь\",\r\n    \"ноябрь\",\r\n    \"декабрь\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\r\n  abbreviated: [\r\n    \"янв.\",\r\n    \"фев.\",\r\n    \"мар.\",\r\n    \"апр.\",\r\n    \"мая\",\r\n    \"июн.\",\r\n    \"июл.\",\r\n    \"авг.\",\r\n    \"сент.\",\r\n    \"окт.\",\r\n    \"нояб.\",\r\n    \"дек.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"января\",\r\n    \"февраля\",\r\n    \"марта\",\r\n    \"апреля\",\r\n    \"мая\",\r\n    \"июня\",\r\n    \"июля\",\r\n    \"августа\",\r\n    \"сентября\",\r\n    \"октября\",\r\n    \"ноября\",\r\n    \"декабря\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"В\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\r\n  abbreviated: [\"вск\", \"пнд\", \"втр\", \"срд\", \"чтв\", \"птн\", \"суб\"],\r\n  wide: [\r\n    \"воскресенье\",\r\n    \"понедельник\",\r\n    \"вторник\",\r\n    \"среда\",\r\n    \"четверг\",\r\n    \"пятница\",\r\n    \"суббота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полн.\",\r\n    noon: \"полд.\",\r\n    morning: \"утро\",\r\n    afternoon: \"день\",\r\n    evening: \"веч.\",\r\n    night: \"ночь\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полн.\",\r\n    noon: \"полд.\",\r\n    morning: \"утро\",\r\n    afternoon: \"день\",\r\n    evening: \"веч.\",\r\n    night: \"ночь\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полночь\",\r\n    noon: \"полдень\",\r\n    morning: \"утро\",\r\n    afternoon: \"день\",\r\n    evening: \"вечер\",\r\n    night: \"ночь\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полн.\",\r\n    noon: \"полд.\",\r\n    morning: \"утра\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночи\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полн.\",\r\n    noon: \"полд.\",\r\n    morning: \"утра\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночи\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"полночь\",\r\n    noon: \"полдень\",\r\n    morning: \"утра\",\r\n    afternoon: \"дня\",\r\n    evening: \"вечера\",\r\n    night: \"ночи\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n\r\n  let suffix;\r\n  if (unit === \"date\") {\r\n    suffix = \"-е\";\r\n  } else if (unit === \"week\" || unit === \"minute\" || unit === \"second\") {\r\n    suffix = \"-я\";\r\n  } else {\r\n    suffix = \"-й\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((до )?н\\.?\\s?э\\.?)/i,\r\n  abbreviated: /^((до )?н\\.?\\s?э\\.?)/i,\r\n  wide: /^(до нашей эры|нашей эры|наша эра)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^д/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,\r\n  wide: /^[1234](-?[ыои]?й?)? квартал/i,\r\n};\r\n\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[яфмаисонд]/i,\r\n  abbreviated:\r\n    /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\\.?/i,\r\n  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i,\r\n};\r\n\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^я/i,\r\n    /^ф/i,\r\n    /^м/i,\r\n    /^а/i,\r\n    /^м/i,\r\n    /^и/i,\r\n    /^и/i,\r\n    /^а/i,\r\n    /^с/i,\r\n    /^о/i,\r\n    /^н/i,\r\n    /^я/i,\r\n  ],\r\n\r\n  any: [\r\n    /^я/i,\r\n    /^ф/i,\r\n    /^мар/i,\r\n    /^ап/i,\r\n    /^ма[йя]/i,\r\n    /^июн/i,\r\n    /^июл/i,\r\n    /^ав/i,\r\n    /^с/i,\r\n    /^о/i,\r\n    /^н/i,\r\n    /^д/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[впсч]/i,\r\n  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\\.?/i,\r\n  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,\r\n  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i,\r\n};\r\n\r\nconst parseDayPatterns = {\r\n  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\r\n  abbreviated: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\r\n  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i,\r\n};\r\n\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^дп/i,\r\n    pm: /^пп/i,\r\n    midnight: /^полн/i,\r\n    noon: /^полд/i,\r\n    morning: /^у/i,\r\n    afternoon: /^д[ен]/i,\r\n    evening: /^в/i,\r\n    night: /^н/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ru/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ru/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ru/_lib/formatRelative.js\";\r\nimport { localize } from \"./ru/_lib/localize.js\";\r\nimport { match } from \"./ru/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Russian locale.\r\n * @language Russian\r\n * @iso-639-2 rus\r\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\r\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\r\n */\r\nexport const ru = {\r\n  code: \"ru\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ru;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"unnit go ovtta sekundda\",\r\n    other: \"unnit go {{count}} sekundda\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"sekundda\",\r\n    other: \"{{count}} sekundda\",\r\n  },\r\n\r\n  halfAMinute: \"bealle minuhta\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"unnit go bealle minuhta\",\r\n    other: \"unnit go {{count}} minuhta\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"minuhta\",\r\n    other: \"{{count}} minuhta\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"sullii ovtta diimmu\",\r\n    other: \"sullii {{count}} diimmu\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"diimmu\",\r\n    other: \"{{count}} diimmu\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"beaivvi\",\r\n    other: \"{{count}} beaivvi\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"sullii ovtta vahku\",\r\n    other: \"sullii {{count}} vahku\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"vahku\",\r\n    other: \"{{count}} vahku\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"sullii ovtta mánu\",\r\n    other: \"sullii {{count}} mánu\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"mánu\",\r\n    other: \"{{count}} mánu\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"sullii ovtta jagi\",\r\n    other: \"sullii {{count}} jagi\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"jagi\",\r\n    other: \"{{count}} jagi\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"guhkit go jagi\",\r\n    other: \"guhkit go {{count}} jagi\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"measta jagi\",\r\n    other: \"measta {{count}} jagi\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"geahčen \" + result;\r\n    } else {\r\n      return result + \" áigi\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE MMMM d. 'b.' y\",\r\n  long: \"MMMM d. 'b.' y\",\r\n  medium: \"MMM d. 'b.' y\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"'dii.' HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'dii.' {{time}}\",\r\n  long: \"{{date}} 'dii.' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ovddit' eeee 'dii.' p\",\r\n  yesterday: \"'ikte dii.' p\",\r\n  today: \"'odne dii.' p\",\r\n  tomorrow: \"'ihtin dii.' p\",\r\n  nextWeek: \"EEEE 'dii.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"o.Kr.\", \"m.Kr.\"],\r\n  abbreviated: [\"o.Kr.\", \"m.Kr.\"],\r\n  wide: [\"ovdal Kristusa\", \"maŋŋel Kristusa\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. kvartála\", \"2. kvartála\", \"3. kvartála\", \"4. kvartála\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"O\", \"G\", \"N\", \"C\", \"M\", \"G\", \"S\", \"B\", \"Č\", \"G\", \"S\", \"J\"],\r\n  abbreviated: [\r\n    \"ođđa\",\r\n    \"guov\",\r\n    \"njuk\",\r\n    \"cuo\",\r\n    \"mies\",\r\n    \"geas\",\r\n    \"suoi\",\r\n    \"borg\",\r\n    \"čakč\",\r\n    \"golg\",\r\n    \"skáb\",\r\n    \"juov\",\r\n  ],\r\n\r\n  wide: [\r\n    \"ođđajagemánnu\",\r\n    \"guovvamánnu\",\r\n    \"njukčamánnu\",\r\n    \"cuoŋománnu\",\r\n    \"miessemánnu\",\r\n    \"geassemánnu\",\r\n    \"suoidnemánnu\",\r\n    \"borgemánnu\",\r\n    \"čakčamánnu\",\r\n    \"golggotmánnu\",\r\n    \"skábmamánnu\",\r\n    \"juovlamánnu\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"V\", \"M\", \"G\", \"D\", \"B\", \"L\"],\r\n  short: [\"sotn\", \"vuos\", \"maŋ\", \"gask\", \"duor\", \"bear\", \"láv\"],\r\n  abbreviated: [\"sotn\", \"vuos\", \"maŋ\", \"gask\", \"duor\", \"bear\", \"láv\"],\r\n  wide: [\r\n    \"sotnabeaivi\",\r\n    \"vuossárga\",\r\n    \"maŋŋebárga\",\r\n    \"gaskavahkku\",\r\n    \"duorastat\",\r\n    \"bearjadat\",\r\n    \"lávvardat\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"gaskaidja\",\r\n    noon: \"gaskabeaivi\",\r\n    morning: \"iđđes\",\r\n    afternoon: \"maŋŋel gaska.\",\r\n    evening: \"eahkes\",\r\n    night: \"ihkku\",\r\n  },\r\n  abbreviated: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gaskaidja\",\r\n    noon: \"gaskabeaivvi\",\r\n    morning: \"iđđes\",\r\n    afternoon: \"maŋŋel gaskabea.\",\r\n    evening: \"eahkes\",\r\n    night: \"ihkku\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"gaskaidja\",\r\n    noon: \"gaskabeavvi\",\r\n    morning: \"iđđes\",\r\n    afternoon: \"maŋŋel gaskabeaivvi\",\r\n    evening: \"eahkes\",\r\n    night: \"ihkku\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(o\\.? ?Kr\\.?|m\\.? ?Kr\\.?)/i,\r\n  abbreviated: /^(o\\.? ?Kr\\.?|m\\.? ?Kr\\.?)/i,\r\n  wide: /^(ovdal Kristusa|ovdal min áiggi|maŋŋel Kristusa|min áigi)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^o/i, /^m/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](\\.)? kvartála/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[ogncmsbčj]/i,\r\n  abbreviated:\r\n    /^(ođđa|guov|njuk|cuo|mies|geas|suoi|borg|čakč|golg|skáb|juov)\\.?/i,\r\n  wide: /^(ođđajagemánnu|guovvamánnu|njukčamánnu|cuoŋománnu|miessemánnu|geassemánnu|suoidnemánnu|borgemánnu|čakčamánnu|golggotmánnu|skábmamánnu|juovlamánnu)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^o/i,\r\n    /^g/i,\r\n    /^n/i,\r\n    /^c/i,\r\n    /^m/i,\r\n    /^g/i,\r\n    /^s/i,\r\n    /^b/i,\r\n    /^č/i,\r\n    /^g/i,\r\n    /^s/i,\r\n    /^j/i,\r\n  ],\r\n\r\n  any: [\r\n    /^o/i,\r\n    /^gu/i,\r\n    /^n/i,\r\n    /^c/i,\r\n    /^m/i,\r\n    /^ge/i,\r\n    /^su/i,\r\n    /^b/i,\r\n    /^č/i,\r\n    /^go/i,\r\n    /^sk/i,\r\n    /^j/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[svmgdbl]/i,\r\n  short: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i,\r\n  abbreviated: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i,\r\n  wide: /^(sotnabeaivi|vuossárga|maŋŋebárga|gaskavahkku|duorastat|bearjadat|lávvardat)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^s/i, /^v/i, /^m/i, /^g/i, /^d/i, /^b/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku)|[ap])/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a(\\.?\\s?m\\.?)?$/i,\r\n    pm: /^p(\\.?\\s?m\\.?)?$/i,\r\n    midnight: /^gaskai/i,\r\n    noon: /^gaskab/i,\r\n    morning: /iđđes/i,\r\n    afternoon: /maŋŋel gaskabeaivvi/i,\r\n    evening: /eahkes/i,\r\n    night: /ihkku/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./se/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./se/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./se/_lib/formatRelative.js\";\r\nimport { localize } from \"./se/_lib/localize.js\";\r\nimport { match } from \"./se/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Northern Sámi locale.\r\n * @language Northern Sámi\r\n * @iso-639-2 sme\r\n * @author Audun Rundberg [@audunru](https://github.com/audunru)\r\n */\r\nexport const se = {\r\n  code: \"se\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default se;\r\n", "function declensionGroup(scheme, count) {\r\n  if (count === 1 && scheme.one) {\r\n    return scheme.one;\r\n  }\r\n\r\n  if (count >= 2 && count <= 4 && scheme.twoFour) {\r\n    return scheme.twoFour;\r\n  }\r\n\r\n  // if count === null || count === 0 || count >= 5\r\n  return scheme.other;\r\n}\r\n\r\nfunction declension(scheme, count, time) {\r\n  const group = declensionGroup(scheme, count);\r\n  const finalText = group[time];\r\n  return finalText.replace(\"{{count}}\", String(count));\r\n}\r\n\r\nfunction extractPreposition(token) {\r\n  const result = [\"lessThan\", \"about\", \"over\", \"almost\"].filter(\r\n    function (preposition) {\r\n      return !!token.match(new RegExp(\"^\" + preposition));\r\n    },\r\n  );\r\n\r\n  return result[0];\r\n}\r\n\r\nfunction prefixPreposition(preposition) {\r\n  let translation = \"\";\r\n\r\n  if (preposition === \"almost\") {\r\n    translation = \"takmer\";\r\n  }\r\n\r\n  if (preposition === \"about\") {\r\n    translation = \"približne\";\r\n  }\r\n\r\n  return translation.length > 0 ? translation + \" \" : \"\";\r\n}\r\n\r\nfunction suffixPreposition(preposition) {\r\n  let translation = \"\";\r\n\r\n  if (preposition === \"lessThan\") {\r\n    translation = \"menej než\";\r\n  }\r\n\r\n  if (preposition === \"over\") {\r\n    translation = \"viac než\";\r\n  }\r\n\r\n  return translation.length > 0 ? translation + \" \" : \"\";\r\n}\r\n\r\nfunction lowercaseFirstLetter(string) {\r\n  return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  xSeconds: {\r\n    one: {\r\n      present: \"sekunda\",\r\n      past: \"sekundou\",\r\n      future: \"sekundu\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} sekundy\",\r\n      past: \"{{count}} sekundami\",\r\n      future: \"{{count}} sekundy\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} sekúnd\",\r\n      past: \"{{count}} sekundami\",\r\n      future: \"{{count}} sekúnd\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    other: {\r\n      present: \"pol minúty\",\r\n      past: \"pol minútou\",\r\n      future: \"pol minúty\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      present: \"minúta\",\r\n      past: \"minútou\",\r\n      future: \"minútu\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} minúty\",\r\n      past: \"{{count}} minútami\",\r\n      future: \"{{count}} minúty\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} minút\",\r\n      past: \"{{count}} minútami\",\r\n      future: \"{{count}} minút\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      present: \"hodina\",\r\n      past: \"hodinou\",\r\n      future: \"hodinu\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} hodiny\",\r\n      past: \"{{count}} hodinami\",\r\n      future: \"{{count}} hodiny\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} hodín\",\r\n      past: \"{{count}} hodinami\",\r\n      future: \"{{count}} hodín\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      present: \"deň\",\r\n      past: \"dňom\",\r\n      future: \"deň\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} dni\",\r\n      past: \"{{count}} dňami\",\r\n      future: \"{{count}} dni\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} dní\",\r\n      past: \"{{count}} dňami\",\r\n      future: \"{{count}} dní\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      present: \"týždeň\",\r\n      past: \"týždňom\",\r\n      future: \"týždeň\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} týždne\",\r\n      past: \"{{count}} týždňami\",\r\n      future: \"{{count}} týždne\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} týždňov\",\r\n      past: \"{{count}} týždňami\",\r\n      future: \"{{count}} týždňov\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      present: \"mesiac\",\r\n      past: \"mesiacom\",\r\n      future: \"mesiac\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} mesiace\",\r\n      past: \"{{count}} mesiacmi\",\r\n      future: \"{{count}} mesiace\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} mesiacov\",\r\n      past: \"{{count}} mesiacmi\",\r\n      future: \"{{count}} mesiacov\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      present: \"rok\",\r\n      past: \"rokom\",\r\n      future: \"rok\",\r\n    },\r\n    twoFour: {\r\n      present: \"{{count}} roky\",\r\n      past: \"{{count}} rokmi\",\r\n      future: \"{{count}} roky\",\r\n    },\r\n    other: {\r\n      present: \"{{count}} rokov\",\r\n      past: \"{{count}} rokmi\",\r\n      future: \"{{count}} rokov\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const preposition = extractPreposition(token) || \"\";\r\n  const key = lowercaseFirstLetter(token.substring(preposition.length));\r\n  const scheme = formatDistanceLocale[key];\r\n\r\n  if (!options?.addSuffix) {\r\n    return (\r\n      prefixPreposition(preposition) +\r\n      suffixPreposition(preposition) +\r\n      declension(scheme, count, \"present\")\r\n    );\r\n  }\r\n\r\n  if (options.comparison && options.comparison > 0) {\r\n    return (\r\n      prefixPreposition(preposition) +\r\n      \"o \" +\r\n      suffixPreposition(preposition) +\r\n      declension(scheme, count, \"future\")\r\n    );\r\n  } else {\r\n    return (\r\n      prefixPreposition(preposition) +\r\n      \"pred \" +\r\n      suffixPreposition(preposition) +\r\n      declension(scheme, count, \"past\")\r\n    );\r\n  }\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1986\r\nconst dateFormats = {\r\n  full: \"EEEE d. MMMM y\",\r\n  long: \"d. MMMM y\",\r\n  medium: \"d. M. y\",\r\n  short: \"d. M. y\",\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#2149\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1994\r\nconst dateTimeFormats = {\r\n  full: \"{{date}}, {{time}}\",\r\n  long: \"{{date}}, {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308\r\nconst accusativeWeekdays = [\r\n  \"nedeľu\",\r\n  \"pondelok\",\r\n  \"utorok\",\r\n  \"stredu\",\r\n  \"štvrtok\",\r\n  \"piatok\",\r\n  \"sobotu\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0: /* Sun */\r\n    case 3: /* Wed */\r\n    case 6 /* Sat */:\r\n      return \"'minulú \" + weekday + \" o' p\";\r\n    default:\r\n      return \"'minulý' eeee 'o' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  if (day === 4 /* Thu */) {\r\n    return \"'vo' eeee 'o' p\";\r\n  } else {\r\n    return \"'v \" + weekday + \" o' p\";\r\n  }\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0: /* Sun */\r\n    case 4: /* Wed */\r\n    case 6 /* Sat */:\r\n      return \"'budúcu \" + weekday + \" o' p\";\r\n    default:\r\n      return \"'budúci' eeee 'o' p\";\r\n  }\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return lastWeek(day);\r\n    }\r\n  },\r\n  yesterday: \"'včera o' p\",\r\n  today: \"'dnes o' p\",\r\n  tomorrow: \"'zajtra o' p\",\r\n  nextWeek: (date, baseDate, options) => {\r\n    const day = date.getDay();\r\n    if (isSameWeek(date, baseDate, options)) {\r\n      return thisWeek(day);\r\n    } else {\r\n      return nextWeek(day);\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1772\r\nconst eraValues = {\r\n  narrow: [\"pred Kr.\", \"po Kr.\"],\r\n  abbreviated: [\"pred Kr.\", \"po Kr.\"],\r\n  wide: [\"pred Kristom\", \"po Kristovi\"],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1780\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1. štvrťrok\", \"2. štvrťrok\", \"3. štvrťrok\", \"4. štvrťrok\"],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1804\r\nconst monthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"máj\",\r\n    \"jún\",\r\n    \"júl\",\r\n    \"aug\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"január\",\r\n    \"február\",\r\n    \"marec\",\r\n    \"apríl\",\r\n    \"máj\",\r\n    \"jún\",\r\n    \"júl\",\r\n    \"august\",\r\n    \"september\",\r\n    \"október\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\nconst formattingMonthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"máj\",\r\n    \"jún\",\r\n    \"júl\",\r\n    \"aug\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januára\",\r\n    \"februára\",\r\n    \"marca\",\r\n    \"apríla\",\r\n    \"mája\",\r\n    \"júna\",\r\n    \"júla\",\r\n    \"augusta\",\r\n    \"septembra\",\r\n    \"októbra\",\r\n    \"novembra\",\r\n    \"decembra\",\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1876\r\nconst dayValues = {\r\n  narrow: [\"n\", \"p\", \"u\", \"s\", \"š\", \"p\", \"s\"],\r\n  short: [\"ne\", \"po\", \"ut\", \"st\", \"št\", \"pi\", \"so\"],\r\n  abbreviated: [\"ne\", \"po\", \"ut\", \"st\", \"št\", \"pi\", \"so\"],\r\n  wide: [\r\n    \"nedeľa\",\r\n    \"pondelok\",\r\n    \"utorok\",\r\n    \"streda\",\r\n    \"štvrtok\",\r\n    \"piatok\",\r\n    \"sobota\",\r\n  ],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sk.html#1932\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"poln.\",\r\n    noon: \"pol.\",\r\n    morning: \"ráno\",\r\n    afternoon: \"pop.\",\r\n    evening: \"več.\",\r\n    night: \"noc\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"poln.\",\r\n    noon: \"pol.\",\r\n    morning: \"ráno\",\r\n    afternoon: \"popol.\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"polnoc\",\r\n    noon: \"poludnie\",\r\n    morning: \"ráno\",\r\n    afternoon: \"popoludnie\",\r\n    evening: \"večer\",\r\n    night: \"noc\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"o poln.\",\r\n    noon: \"nap.\",\r\n    morning: \"ráno\",\r\n    afternoon: \"pop.\",\r\n    evening: \"več.\",\r\n    night: \"v n.\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"o poln.\",\r\n    noon: \"napol.\",\r\n    morning: \"ráno\",\r\n    afternoon: \"popol.\",\r\n    evening: \"večer\",\r\n    night: \"v noci\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"o polnoci\",\r\n    noon: \"napoludnie\",\r\n    morning: \"ráno\",\r\n    afternoon: \"popoludní\",\r\n    evening: \"večer\",\r\n    night: \"v noci\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\.?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(pred Kr\\.|pred n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\r\n  abbreviated: /^(pred Kr\\.|pred n\\. l\\.|po Kr\\.|n\\. l\\.)/i,\r\n  wide: /^(pred Kristom|pred na[šs][íi]m letopo[čc]tom|po Kristovi|n[áa][šs]ho letopo[čc]tu)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^pr/i, /^(po|n)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234]\\. [šs]tvr[ťt]rok/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated: /^(jan|feb|mar|apr|m[áa]j|j[úu]n|j[úu]l|aug|sep|okt|nov|dec)/i,\r\n  wide: /^(janu[áa]ra?|febru[áa]ra?|(marec|marca)|apr[íi]la?|m[áa]ja?|j[úu]na?|j[úu]la?|augusta?|(september|septembra)|(okt[óo]ber|okt[óo]bra)|(november|novembra)|(december|decembra))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^m[áa]j/i,\r\n    /^j[úu]n/i,\r\n    /^j[úu]l/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npusšp]/i,\r\n  short: /^(ne|po|ut|st|št|pi|so)/i,\r\n  abbreviated: /^(ne|po|ut|st|št|pi|so)/i,\r\n  wide: /^(nede[ľl]a|pondelok|utorok|streda|[šs]tvrtok|piatok|sobota])/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^š/i, /^p/i, /^s/i],\r\n  any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(št|stv)/i, /^pi/i, /^so/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(am|pm|(o )?poln\\.?|(nap\\.?|pol\\.?)|r[áa]no|pop\\.?|ve[čc]\\.?|(v n\\.?|noc))/i,\r\n  abbreviated:\r\n    /^(am|pm|(o )?poln\\.?|(napol\\.?|pol\\.?)|r[áa]no|pop\\.?|ve[čc]er|(v )?noci?)/i,\r\n  any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[áa]no|popoludn(ie|í|i)|ve[čc]er|(v )?noci?)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^am/i,\r\n    pm: /^pm/i,\r\n    midnight: /poln/i,\r\n    noon: /^(nap|(na)?pol(\\.|u))/i,\r\n    morning: /^r[áa]no/i,\r\n    afternoon: /^pop/i,\r\n    evening: /^ve[čc]/i,\r\n    night: /^(noc|v n\\.)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sk/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sk/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sk/_lib/formatRelative.js\";\r\nimport { localize } from \"./sk/_lib/localize.js\";\r\nimport { match } from \"./sk/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Slovak locale.\r\n * @language Slovak\r\n * @iso-639-2 slk\r\n * @author Marek Suscak [@mareksuscak](https://github.com/mareksuscak)\r\n */\r\nexport const sk = {\r\n  code: \"sk\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default sk;\r\n", "function isPluralType(val) {\r\n  return val.one !== undefined;\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    present: {\r\n      one: \"manj kot {{count}} sekunda\",\r\n      two: \"manj kot {{count}} sekundi\",\r\n      few: \"manj kot {{count}} sekunde\",\r\n      other: \"manj kot {{count}} sekund\",\r\n    },\r\n    past: {\r\n      one: \"manj kot {{count}} sekundo\",\r\n      two: \"manj kot {{count}} sekundama\",\r\n      few: \"manj kot {{count}} sekundami\",\r\n      other: \"manj kot {{count}} sekundami\",\r\n    },\r\n    future: {\r\n      one: \"manj kot {{count}} sekundo\",\r\n      two: \"manj kot {{count}} sekundi\",\r\n      few: \"manj kot {{count}} sekunde\",\r\n      other: \"manj kot {{count}} sekund\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    present: {\r\n      one: \"{{count}} sekunda\",\r\n      two: \"{{count}} sekundi\",\r\n      few: \"{{count}} sekunde\",\r\n      other: \"{{count}} sekund\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} sekundo\",\r\n      two: \"{{count}} sekundama\",\r\n      few: \"{{count}} sekundami\",\r\n      other: \"{{count}} sekundami\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} sekundo\",\r\n      two: \"{{count}} sekundi\",\r\n      few: \"{{count}} sekunde\",\r\n      other: \"{{count}} sekund\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: \"pol minute\",\r\n\r\n  lessThanXMinutes: {\r\n    present: {\r\n      one: \"manj kot {{count}} minuta\",\r\n      two: \"manj kot {{count}} minuti\",\r\n      few: \"manj kot {{count}} minute\",\r\n      other: \"manj kot {{count}} minut\",\r\n    },\r\n    past: {\r\n      one: \"manj kot {{count}} minuto\",\r\n      two: \"manj kot {{count}} minutama\",\r\n      few: \"manj kot {{count}} minutami\",\r\n      other: \"manj kot {{count}} minutami\",\r\n    },\r\n    future: {\r\n      one: \"manj kot {{count}} minuto\",\r\n      two: \"manj kot {{count}} minuti\",\r\n      few: \"manj kot {{count}} minute\",\r\n      other: \"manj kot {{count}} minut\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    present: {\r\n      one: \"{{count}} minuta\",\r\n      two: \"{{count}} minuti\",\r\n      few: \"{{count}} minute\",\r\n      other: \"{{count}} minut\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} minuto\",\r\n      two: \"{{count}} minutama\",\r\n      few: \"{{count}} minutami\",\r\n      other: \"{{count}} minutami\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} minuto\",\r\n      two: \"{{count}} minuti\",\r\n      few: \"{{count}} minute\",\r\n      other: \"{{count}} minut\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    present: {\r\n      one: \"približno {{count}} ura\",\r\n      two: \"približno {{count}} uri\",\r\n      few: \"približno {{count}} ure\",\r\n      other: \"približno {{count}} ur\",\r\n    },\r\n    past: {\r\n      one: \"približno {{count}} uro\",\r\n      two: \"približno {{count}} urama\",\r\n      few: \"približno {{count}} urami\",\r\n      other: \"približno {{count}} urami\",\r\n    },\r\n    future: {\r\n      one: \"približno {{count}} uro\",\r\n      two: \"približno {{count}} uri\",\r\n      few: \"približno {{count}} ure\",\r\n      other: \"približno {{count}} ur\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    present: {\r\n      one: \"{{count}} ura\",\r\n      two: \"{{count}} uri\",\r\n      few: \"{{count}} ure\",\r\n      other: \"{{count}} ur\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} uro\",\r\n      two: \"{{count}} urama\",\r\n      few: \"{{count}} urami\",\r\n      other: \"{{count}} urami\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} uro\",\r\n      two: \"{{count}} uri\",\r\n      few: \"{{count}} ure\",\r\n      other: \"{{count}} ur\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    present: {\r\n      one: \"{{count}} dan\",\r\n      two: \"{{count}} dni\",\r\n      few: \"{{count}} dni\",\r\n      other: \"{{count}} dni\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} dnem\",\r\n      two: \"{{count}} dnevoma\",\r\n      few: \"{{count}} dnevi\",\r\n      other: \"{{count}} dnevi\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} dan\",\r\n      two: \"{{count}} dni\",\r\n      few: \"{{count}} dni\",\r\n      other: \"{{count}} dni\",\r\n    },\r\n  },\r\n\r\n  // no tenses for weeks?\r\n  aboutXWeeks: {\r\n    one: \"približno {{count}} teden\",\r\n    two: \"približno {{count}} tedna\",\r\n    few: \"približno {{count}} tedne\",\r\n    other: \"približno {{count}} tednov\",\r\n  },\r\n\r\n  // no tenses for weeks?\r\n  xWeeks: {\r\n    one: \"{{count}} teden\",\r\n    two: \"{{count}} tedna\",\r\n    few: \"{{count}} tedne\",\r\n    other: \"{{count}} tednov\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    present: {\r\n      one: \"približno {{count}} mesec\",\r\n      two: \"približno {{count}} meseca\",\r\n      few: \"približno {{count}} mesece\",\r\n      other: \"približno {{count}} mesecev\",\r\n    },\r\n    past: {\r\n      one: \"približno {{count}} mesecem\",\r\n      two: \"približno {{count}} mesecema\",\r\n      few: \"približno {{count}} meseci\",\r\n      other: \"približno {{count}} meseci\",\r\n    },\r\n    future: {\r\n      one: \"približno {{count}} mesec\",\r\n      two: \"približno {{count}} meseca\",\r\n      few: \"približno {{count}} mesece\",\r\n      other: \"približno {{count}} mesecev\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    present: {\r\n      one: \"{{count}} mesec\",\r\n      two: \"{{count}} meseca\",\r\n      few: \"{{count}} meseci\",\r\n      other: \"{{count}} mesecev\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} mesecem\",\r\n      two: \"{{count}} mesecema\",\r\n      few: \"{{count}} meseci\",\r\n      other: \"{{count}} meseci\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} mesec\",\r\n      two: \"{{count}} meseca\",\r\n      few: \"{{count}} mesece\",\r\n      other: \"{{count}} mesecev\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    present: {\r\n      one: \"približno {{count}} leto\",\r\n      two: \"približno {{count}} leti\",\r\n      few: \"približno {{count}} leta\",\r\n      other: \"približno {{count}} let\",\r\n    },\r\n    past: {\r\n      one: \"približno {{count}} letom\",\r\n      two: \"približno {{count}} letoma\",\r\n      few: \"približno {{count}} leti\",\r\n      other: \"približno {{count}} leti\",\r\n    },\r\n    future: {\r\n      one: \"približno {{count}} leto\",\r\n      two: \"približno {{count}} leti\",\r\n      few: \"približno {{count}} leta\",\r\n      other: \"približno {{count}} let\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    present: {\r\n      one: \"{{count}} leto\",\r\n      two: \"{{count}} leti\",\r\n      few: \"{{count}} leta\",\r\n      other: \"{{count}} let\",\r\n    },\r\n    past: {\r\n      one: \"{{count}} letom\",\r\n      two: \"{{count}} letoma\",\r\n      few: \"{{count}} leti\",\r\n      other: \"{{count}} leti\",\r\n    },\r\n    future: {\r\n      one: \"{{count}} leto\",\r\n      two: \"{{count}} leti\",\r\n      few: \"{{count}} leta\",\r\n      other: \"{{count}} let\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    present: {\r\n      one: \"več kot {{count}} leto\",\r\n      two: \"več kot {{count}} leti\",\r\n      few: \"več kot {{count}} leta\",\r\n      other: \"več kot {{count}} let\",\r\n    },\r\n    past: {\r\n      one: \"več kot {{count}} letom\",\r\n      two: \"več kot {{count}} letoma\",\r\n      few: \"več kot {{count}} leti\",\r\n      other: \"več kot {{count}} leti\",\r\n    },\r\n    future: {\r\n      one: \"več kot {{count}} leto\",\r\n      two: \"več kot {{count}} leti\",\r\n      few: \"več kot {{count}} leta\",\r\n      other: \"več kot {{count}} let\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    present: {\r\n      one: \"skoraj {{count}} leto\",\r\n      two: \"skoraj {{count}} leti\",\r\n      few: \"skoraj {{count}} leta\",\r\n      other: \"skoraj {{count}} let\",\r\n    },\r\n    past: {\r\n      one: \"skoraj {{count}} letom\",\r\n      two: \"skoraj {{count}} letoma\",\r\n      few: \"skoraj {{count}} leti\",\r\n      other: \"skoraj {{count}} leti\",\r\n    },\r\n    future: {\r\n      one: \"skoraj {{count}} leto\",\r\n      two: \"skoraj {{count}} leti\",\r\n      few: \"skoraj {{count}} leta\",\r\n      other: \"skoraj {{count}} let\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction getFormFromCount(count) {\r\n  switch (count % 100) {\r\n    case 1:\r\n      return \"one\";\r\n    case 2:\r\n      return \"two\";\r\n    case 3:\r\n    case 4:\r\n      return \"few\";\r\n    default:\r\n      return \"other\";\r\n  }\r\n}\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result = \"\";\r\n  let tense = \"present\";\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      tense = \"future\";\r\n      result = \"čez \";\r\n    } else {\r\n      tense = \"past\";\r\n      result = \"pred \";\r\n    }\r\n  }\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  if (typeof tokenValue === \"string\") {\r\n    result += tokenValue;\r\n  } else {\r\n    const form = getFormFromCount(count);\r\n    if (isPluralType(tokenValue)) {\r\n      result += tokenValue[form].replace(\"{{count}}\", String(count));\r\n    } else {\r\n      result += tokenValue[tense][form].replace(\"{{count}}\", String(count));\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, dd. MMMM y\",\r\n  long: \"dd. MMMM y\",\r\n  medium: \"d. MMM y\",\r\n  short: \"d. MM. yy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    const day = date.getDay();\r\n\r\n    switch (day) {\r\n      case 0:\r\n        return \"'prejšnjo nedeljo ob' p\";\r\n      case 3:\r\n        return \"'prejšnjo sredo ob' p\";\r\n      case 6:\r\n        return \"'prejšnjo soboto ob' p\";\r\n      default:\r\n        return \"'prejšnji' EEEE 'ob' p\";\r\n    }\r\n  },\r\n  yesterday: \"'včeraj ob' p\",\r\n  today: \"'danes ob' p\",\r\n  tomorrow: \"'jutri ob' p\",\r\n  nextWeek: (date) => {\r\n    const day = date.getDay();\r\n\r\n    switch (day) {\r\n      case 0:\r\n        return \"'naslednjo nedeljo ob' p\";\r\n      case 3:\r\n        return \"'naslednjo sredo ob' p\";\r\n      case 6:\r\n        return \"'naslednjo soboto ob' p\";\r\n      default:\r\n        return \"'naslednji' EEEE 'ob' p\";\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"pr. n. št.\", \"po n. št.\"],\r\n  abbreviated: [\"pr. n. št.\", \"po n. št.\"],\r\n  wide: [\"pred našim štetjem\", \"po našem štetju\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1. čet.\", \"2. čet.\", \"3. čet.\", \"4. čet.\"],\r\n  wide: [\"1. četrtletje\", \"2. četrtletje\", \"3. četrtletje\", \"4. četrtletje\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"j\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mar.\",\r\n    \"apr.\",\r\n    \"maj\",\r\n    \"jun.\",\r\n    \"jul.\",\r\n    \"avg.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"marec\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"junij\",\r\n    \"julij\",\r\n    \"avgust\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"n\", \"p\", \"t\", \"s\", \"č\", \"p\", \"s\"],\r\n  short: [\"ned.\", \"pon.\", \"tor.\", \"sre.\", \"čet.\", \"pet.\", \"sob.\"],\r\n  abbreviated: [\"ned.\", \"pon.\", \"tor.\", \"sre.\", \"čet.\", \"pet.\", \"sob.\"],\r\n\r\n  wide: [\r\n    \"nedelja\",\r\n    \"ponedeljek\",\r\n    \"torek\",\r\n    \"sreda\",\r\n    \"četrtek\",\r\n    \"petek\",\r\n    \"sobota\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"d\",\r\n    pm: \"p\",\r\n    midnight: \"24.00\",\r\n    noon: \"12.00\",\r\n    morning: \"j\",\r\n    afternoon: \"p\",\r\n    evening: \"v\",\r\n    night: \"n\",\r\n  },\r\n  abbreviated: {\r\n    am: \"dop.\",\r\n    pm: \"pop.\",\r\n    midnight: \"poln.\",\r\n    noon: \"pold.\",\r\n    morning: \"jut.\",\r\n    afternoon: \"pop.\",\r\n    evening: \"več.\",\r\n    night: \"noč\",\r\n  },\r\n  wide: {\r\n    am: \"dop.\",\r\n    pm: \"pop.\",\r\n    midnight: \"polnoč\",\r\n    noon: \"poldne\",\r\n    morning: \"jutro\",\r\n    afternoon: \"popoldne\",\r\n    evening: \"večer\",\r\n    night: \"noč\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"d\",\r\n    pm: \"p\",\r\n    midnight: \"24.00\",\r\n    noon: \"12.00\",\r\n    morning: \"zj\",\r\n    afternoon: \"p\",\r\n    evening: \"zv\",\r\n    night: \"po\",\r\n  },\r\n  abbreviated: {\r\n    am: \"dop.\",\r\n    pm: \"pop.\",\r\n    midnight: \"opoln.\",\r\n    noon: \"opold.\",\r\n    morning: \"zjut.\",\r\n    afternoon: \"pop.\",\r\n    evening: \"zveč.\",\r\n    night: \"ponoči\",\r\n  },\r\n  wide: {\r\n    am: \"dop.\",\r\n    pm: \"pop.\",\r\n    midnight: \"opolnoči\",\r\n    noon: \"opoldne\",\r\n    morning: \"zjutraj\",\r\n    afternoon: \"popoldan\",\r\n    evening: \"zvečer\",\r\n    night: \"ponoči\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  abbreviated: /^(pr\\. n\\. št\\.|po n\\. št\\.)/i,\r\n  wide: /^(pred Kristusom|pred na[sš]im [sš]tetjem|po Kristusu|po na[sš]em [sš]tetju|na[sš]ega [sš]tetja)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^pr/i, /^(po|na[sš]em)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\.\\s?[čc]et\\.?/i,\r\n  wide: /^[1234]\\. [čc]etrtletje/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(jan\\.|feb\\.|mar\\.|apr\\.|maj|jun\\.|jul\\.|avg\\.|sep\\.|okt\\.|nov\\.|dec\\.)/i,\r\n  wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^ja/i,\r\n    /^fe/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^av/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^ja/i,\r\n    /^fe/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^av/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[nptsčc]/i,\r\n  short: /^(ned\\.|pon\\.|tor\\.|sre\\.|[cč]et\\.|pet\\.|sob\\.)/i,\r\n  abbreviated: /^(ned\\.|pon\\.|tor\\.|sre\\.|[cč]et\\.|pet\\.|sob\\.)/i,\r\n  wide: /^(nedelja|ponedeljek|torek|sreda|[cč]etrtek|petek|sobota)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[cč]/i, /^p/i, /^s/i],\r\n  any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[cč]/i, /^pe/i, /^so/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(d|po?|z?v|n|z?j|24\\.00|12\\.00)/i,\r\n  any: /^(dop\\.|pop\\.|o?poln(\\.|o[cč]i?)|o?pold(\\.|ne)|z?ve[cč](\\.|er)|(po)?no[cč]i?|popold(ne|an)|jut(\\.|ro)|zjut(\\.|raj))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  narrow: {\r\n    am: /^d/i,\r\n    pm: /^p/i,\r\n    midnight: /^24/i,\r\n    noon: /^12/i,\r\n    morning: /^(z?j)/i,\r\n    afternoon: /^p/i,\r\n    evening: /^(z?v)/i,\r\n    night: /^(n|po)/i,\r\n  },\r\n  any: {\r\n    am: /^dop\\./i,\r\n    pm: /^pop\\./i,\r\n    midnight: /^o?poln/i,\r\n    noon: /^o?pold/i,\r\n    morning: /j/i,\r\n    afternoon: /^pop\\./i,\r\n    evening: /^z?ve/i,\r\n    night: /(po)?no/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sl/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sl/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sl/_lib/formatRelative.js\";\r\nimport { localize } from \"./sl/_lib/localize.js\";\r\nimport { match } from \"./sl/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Slovenian locale.\r\n * @language Slovenian\r\n * @iso-639-2 slv\r\n * @author Adam Stradovnik [@Neoglyph](https://github.com/Neoglyph)\r\n * @author Mato Žgajner [@mzgajner](https://github.com/mzgajner)\r\n */\r\nexport const sl = {\r\n  code: \"sl\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default sl;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"më pak se një sekondë\",\r\n    other: \"më pak se {{count}} sekonda\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekondë\",\r\n    other: \"{{count}} sekonda\",\r\n  },\r\n\r\n  halfAMinute: \"gjysëm minuti\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"më pak se një minute\",\r\n    other: \"më pak se {{count}} minuta\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minutë\",\r\n    other: \"{{count}} minuta\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"rreth 1 orë\",\r\n    other: \"rreth {{count}} orë\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 orë\",\r\n    other: \"{{count}} orë\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ditë\",\r\n    other: \"{{count}} ditë\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"rreth 1 javë\",\r\n    other: \"rreth {{count}} javë\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 javë\",\r\n    other: \"{{count}} javë\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"rreth 1 muaj\",\r\n    other: \"rreth {{count}} muaj\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 muaj\",\r\n    other: \"{{count}} muaj\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"rreth 1 vit\",\r\n    other: \"rreth {{count}} vite\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 vit\",\r\n    other: \"{{count}} vite\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"mbi 1 vit\",\r\n    other: \"mbi {{count}} vite\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"pothuajse 1 vit\",\r\n    other: \"pothuajse {{count}} vite\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"në \" + result;\r\n    } else {\r\n      return result + \" më parë\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'në' {{time}}\",\r\n  long: \"{{date}} 'në' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'të' eeee 'e shkuar në' p\",\r\n  yesterday: \"'dje në' p\",\r\n  today: \"'sot në' p\",\r\n  tomorrow: \"'nesër në' p\",\r\n  nextWeek: \"eeee 'at' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"P\", \"M\"],\r\n  abbreviated: [\"PK\", \"MK\"],\r\n  wide: [\"Para Krishtit\", \"Mbas Krishtit\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"4-mujori I\", \"4-mujori II\", \"4-mujori III\", \"4-mujori IV\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"J\", \"S\", \"M\", \"P\", \"M\", \"Q\", \"K\", \"G\", \"S\", \"T\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Jan\",\r\n    \"Shk\",\r\n    \"Mar\",\r\n    \"Pri\",\r\n    \"Maj\",\r\n    \"Qer\",\r\n    \"Kor\",\r\n    \"Gus\",\r\n    \"Sht\",\r\n    \"Tet\",\r\n    \"Nën\",\r\n    \"Dhj\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Janar\",\r\n    \"Shkurt\",\r\n    \"Mars\",\r\n    \"Prill\",\r\n    \"Maj\",\r\n    \"Qershor\",\r\n    \"Korrik\",\r\n    \"Gusht\",\r\n    \"Shtator\",\r\n    \"Tetor\",\r\n    \"Nëntor\",\r\n    \"Dhjetor\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"D\", \"H\", \"M\", \"M\", \"E\", \"P\", \"S\"],\r\n  short: [\"Di\", \"Hë\", \"Ma\", \"Më\", \"En\", \"Pr\", \"Sh\"],\r\n  abbreviated: [\"Die\", \"Hën\", \"Mar\", \"Mër\", \"Enj\", \"Pre\", \"Sht\"],\r\n  wide: [\"Dielë\", \"Hënë\", \"Martë\", \"Mërkurë\", \"Enjte\", \"Premte\", \"Shtunë\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"p\",\r\n    pm: \"m\",\r\n    midnight: \"m\",\r\n    noon: \"d\",\r\n    morning: \"mëngjes\",\r\n    afternoon: \"dite\",\r\n    evening: \"mbrëmje\",\r\n    night: \"natë\",\r\n  },\r\n  abbreviated: {\r\n    am: \"PD\",\r\n    pm: \"MD\",\r\n    midnight: \"mesnëtë\",\r\n    noon: \"drek\",\r\n    morning: \"mëngjes\",\r\n    afternoon: \"mbasdite\",\r\n    evening: \"mbrëmje\",\r\n    night: \"natë\",\r\n  },\r\n  wide: {\r\n    am: \"p.d.\",\r\n    pm: \"m.d.\",\r\n    midnight: \"mesnëtë\",\r\n    noon: \"drek\",\r\n    morning: \"mëngjes\",\r\n    afternoon: \"mbasdite\",\r\n    evening: \"mbrëmje\",\r\n    night: \"natë\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"p\",\r\n    pm: \"m\",\r\n    midnight: \"m\",\r\n    noon: \"d\",\r\n    morning: \"në mëngjes\",\r\n    afternoon: \"në mbasdite\",\r\n    evening: \"në mbrëmje\",\r\n    night: \"në mesnatë\",\r\n  },\r\n  abbreviated: {\r\n    am: \"PD\",\r\n    pm: \"MD\",\r\n    midnight: \"mesnatë\",\r\n    noon: \"drek\",\r\n    morning: \"në mëngjes\",\r\n    afternoon: \"në mbasdite\",\r\n    evening: \"në mbrëmje\",\r\n    night: \"në mesnatë\",\r\n  },\r\n  wide: {\r\n    am: \"p.d.\",\r\n    pm: \"m.d.\",\r\n    midnight: \"mesnatë\",\r\n    noon: \"drek\",\r\n    morning: \"në mëngjes\",\r\n    afternoon: \"në mbasdite\",\r\n    evening: \"në mbrëmje\",\r\n    night: \"në mesnatë\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  if (options?.unit === \"hour\") return String(number);\r\n\r\n  if (number === 1) return number + \"-rë\";\r\n  if (number === 4) return number + \"t\";\r\n\r\n  return number + \"-të\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-rë|-të|t|)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(p|m)/i,\r\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\r\n  wide: /^(para krishtit|mbas krishtit)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^b/i, /^(p|m)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234]-mujori (i{1,3}|iv)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jsmpqkftnd]/i,\r\n  abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|nën|dhj)/i,\r\n  wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|nëntor|dhjetor)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^s/i,\r\n    /^m/i,\r\n    /^p/i,\r\n    /^m/i,\r\n    /^q/i,\r\n    /^k/i,\r\n    /^g/i,\r\n    /^s/i,\r\n    /^t/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^shk/i,\r\n    /^mar/i,\r\n    /^pri/i,\r\n    /^maj/i,\r\n    /^qer/i,\r\n    /^kor/i,\r\n    /^gu/i,\r\n    /^sht/i,\r\n    /^tet/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[dhmeps]/i,\r\n  short: /^(di|hë|ma|më|en|pr|sh)/i,\r\n  abbreviated: /^(die|hën|mar|mër|enj|pre|sht)/i,\r\n  wide: /^(dielë|hënë|martë|mërkurë|enjte|premte|shtunë)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i],\r\n  any: [/^d/i, /^h/i, /^ma/i, /^më/i, /^e/i, /^p/i, /^s/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(p|m|me|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i,\r\n  any: /^([pm]\\.?\\s?d\\.?|drek|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^p/i,\r\n    pm: /^m/i,\r\n    midnight: /^me/i,\r\n    noon: /^dr/i,\r\n    morning: /mëngjes/i,\r\n    afternoon: /mbasdite/i,\r\n    evening: /mbrëmje/i,\r\n    night: /natë/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sq/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sq/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sq/_lib/formatRelative.js\";\r\nimport { localize } from \"./sq/_lib/localize.js\";\r\nimport { match } from \"./sq/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Albanian locale.\r\n * @language Shqip\r\n * @iso-639-2 sqi\r\n * @author Ardit Dine [@arditdine](https://github.com/arditdine)\r\n */\r\nexport const sq = {\r\n  code: \"sq\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default sq;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      standalone: \"мање од 1 секунде\",\r\n      withPrepositionAgo: \"мање од 1 секунде\",\r\n      withPrepositionIn: \"мање од 1 секунду\",\r\n    },\r\n    dual: \"мање од {{count}} секунде\",\r\n    other: \"мање од {{count}} секунди\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      standalone: \"1 секунда\",\r\n      withPrepositionAgo: \"1 секунде\",\r\n      withPrepositionIn: \"1 секунду\",\r\n    },\r\n    dual: \"{{count}} секунде\",\r\n    other: \"{{count}} секунди\",\r\n  },\r\n\r\n  halfAMinute: \"пола минуте\",\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      standalone: \"мање од 1 минуте\",\r\n      withPrepositionAgo: \"мање од 1 минуте\",\r\n      withPrepositionIn: \"мање од 1 минуту\",\r\n    },\r\n    dual: \"мање од {{count}} минуте\",\r\n    other: \"мање од {{count}} минута\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      standalone: \"1 минута\",\r\n      withPrepositionAgo: \"1 минуте\",\r\n      withPrepositionIn: \"1 минуту\",\r\n    },\r\n    dual: \"{{count}} минуте\",\r\n    other: \"{{count}} минута\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      standalone: \"око 1 сат\",\r\n      withPrepositionAgo: \"око 1 сат\",\r\n      withPrepositionIn: \"око 1 сат\",\r\n    },\r\n    dual: \"око {{count}} сата\",\r\n    other: \"око {{count}} сати\",\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      standalone: \"1 сат\",\r\n      withPrepositionAgo: \"1 сат\",\r\n      withPrepositionIn: \"1 сат\",\r\n    },\r\n    dual: \"{{count}} сата\",\r\n    other: \"{{count}} сати\",\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      standalone: \"1 дан\",\r\n      withPrepositionAgo: \"1 дан\",\r\n      withPrepositionIn: \"1 дан\",\r\n    },\r\n    dual: \"{{count}} дана\",\r\n    other: \"{{count}} дана\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      standalone: \"око 1 недељу\",\r\n      withPrepositionAgo: \"око 1 недељу\",\r\n      withPrepositionIn: \"око 1 недељу\",\r\n    },\r\n    dual: \"око {{count}} недеље\",\r\n    other: \"око {{count}} недеље\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      standalone: \"1 недељу\",\r\n      withPrepositionAgo: \"1 недељу\",\r\n      withPrepositionIn: \"1 недељу\",\r\n    },\r\n    dual: \"{{count}} недеље\",\r\n    other: \"{{count}} недеље\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      standalone: \"око 1 месец\",\r\n      withPrepositionAgo: \"око 1 месец\",\r\n      withPrepositionIn: \"око 1 месец\",\r\n    },\r\n    dual: \"око {{count}} месеца\",\r\n    other: \"око {{count}} месеци\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      standalone: \"1 месец\",\r\n      withPrepositionAgo: \"1 месец\",\r\n      withPrepositionIn: \"1 месец\",\r\n    },\r\n    dual: \"{{count}} месеца\",\r\n    other: \"{{count}} месеци\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      standalone: \"око 1 годину\",\r\n      withPrepositionAgo: \"око 1 годину\",\r\n      withPrepositionIn: \"око 1 годину\",\r\n    },\r\n    dual: \"око {{count}} године\",\r\n    other: \"око {{count}} година\",\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      standalone: \"1 година\",\r\n      withPrepositionAgo: \"1 године\",\r\n      withPrepositionIn: \"1 годину\",\r\n    },\r\n    dual: \"{{count}} године\",\r\n    other: \"{{count}} година\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      standalone: \"преко 1 годину\",\r\n      withPrepositionAgo: \"преко 1 годину\",\r\n      withPrepositionIn: \"преко 1 годину\",\r\n    },\r\n    dual: \"преко {{count}} године\",\r\n    other: \"преко {{count}} година\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      standalone: \"готово 1 годину\",\r\n      withPrepositionAgo: \"готово 1 годину\",\r\n      withPrepositionIn: \"готово 1 годину\",\r\n    },\r\n    dual: \"готово {{count}} године\",\r\n    other: \"готово {{count}} година\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        result = tokenValue.one.withPrepositionIn;\r\n      } else {\r\n        result = tokenValue.one.withPrepositionAgo;\r\n      }\r\n    } else {\r\n      result = tokenValue.one.standalone;\r\n    }\r\n  } else if (\r\n    count % 10 > 1 &&\r\n    count % 10 < 5 && // if last digit is between 2 and 4\r\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\r\n  ) {\r\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"за \" + result;\r\n    } else {\r\n      return \"пре \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM yyyy.\",\r\n  long: \"d. MMMM yyyy.\",\r\n  medium: \"d. MMM yy.\",\r\n  short: \"dd. MM. yy.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss (zzzz)\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'у' {{time}}\",\r\n  long: \"{{date}} 'у' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    const day = date.getDay();\r\n\r\n    switch (day) {\r\n      case 0:\r\n        return \"'прошле недеље у' p\";\r\n      case 3:\r\n        return \"'прошле среде у' p\";\r\n      case 6:\r\n        return \"'прошле суботе у' p\";\r\n      default:\r\n        return \"'прошли' EEEE 'у' p\";\r\n    }\r\n  },\r\n  yesterday: \"'јуче у' p\",\r\n  today: \"'данас у' p\",\r\n  tomorrow: \"'сутра у' p\",\r\n  nextWeek: (date) => {\r\n    const day = date.getDay();\r\n\r\n    switch (day) {\r\n      case 0:\r\n        return \"'следеће недеље у' p\";\r\n      case 3:\r\n        return \"'следећу среду у' p\";\r\n      case 6:\r\n        return \"'следећу суботу у' p\";\r\n      default:\r\n        return \"'следећи' EEEE 'у' p\";\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"пр.н.е.\", \"АД\"],\r\n  abbreviated: [\"пр. Хр.\", \"по. Хр.\"],\r\n  wide: [\"Пре Христа\", \"После Христа\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\r\n  abbreviated: [\"1. кв.\", \"2. кв.\", \"3. кв.\", \"4. кв.\"],\r\n  wide: [\"1. квартал\", \"2. квартал\", \"3. квартал\", \"4. квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"јан\",\r\n    \"феб\",\r\n    \"мар\",\r\n    \"апр\",\r\n    \"мај\",\r\n    \"јун\",\r\n    \"јул\",\r\n    \"авг\",\r\n    \"сеп\",\r\n    \"окт\",\r\n    \"нов\",\r\n    \"дец\",\r\n  ],\r\n\r\n  wide: [\r\n    \"јануар\",\r\n    \"фебруар\",\r\n    \"март\",\r\n    \"април\",\r\n    \"мај\",\r\n    \"јун\",\r\n    \"јул\",\r\n    \"август\",\r\n    \"септембар\",\r\n    \"октобар\",\r\n    \"новембар\",\r\n    \"децембар\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"јан\",\r\n    \"феб\",\r\n    \"мар\",\r\n    \"апр\",\r\n    \"мај\",\r\n    \"јун\",\r\n    \"јул\",\r\n    \"авг\",\r\n    \"сеп\",\r\n    \"окт\",\r\n    \"нов\",\r\n    \"дец\",\r\n  ],\r\n\r\n  wide: [\r\n    \"јануар\",\r\n    \"фебруар\",\r\n    \"март\",\r\n    \"април\",\r\n    \"мај\",\r\n    \"јун\",\r\n    \"јул\",\r\n    \"август\",\r\n    \"септембар\",\r\n    \"октобар\",\r\n    \"новембар\",\r\n    \"децембар\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"У\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"нед\", \"пон\", \"уто\", \"сре\", \"чет\", \"пет\", \"суб\"],\r\n  abbreviated: [\"нед\", \"пон\", \"уто\", \"сре\", \"чет\", \"пет\", \"суб\"],\r\n  wide: [\r\n    \"недеља\",\r\n    \"понедељак\",\r\n    \"уторак\",\r\n    \"среда\",\r\n    \"четвртак\",\r\n    \"петак\",\r\n    \"субота\",\r\n  ],\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"АМ\",\r\n    pm: \"ПМ\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"поподне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n  abbreviated: {\r\n    am: \"АМ\",\r\n    pm: \"ПМ\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"поподне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"после подне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"поподне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"поподне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"поноћ\",\r\n    noon: \"подне\",\r\n    morning: \"ујутру\",\r\n    afternoon: \"после подне\",\r\n    evening: \"увече\",\r\n    night: \"ноћу\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(пр\\.н\\.е\\.|АД)/i,\r\n  abbreviated: /^(пр\\.\\s?Хр\\.|по\\.\\s?Хр\\.)/i,\r\n  wide: /^(Пре Христа|пре нове ере|После Христа|нова ера)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^пр/i, /^(по|нова)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\.\\s?кв\\.?/i,\r\n  wide: /^[1234]\\. квартал/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(10|11|12|[123456789])\\./i,\r\n  abbreviated: /^(јан|феб|мар|апр|мај|јун|јул|авг|сеп|окт|нов|дец)/i,\r\n  wide: /^((јануар|јануара)|(фебруар|фебруара)|(март|марта)|(април|априла)|(мја|маја)|(јун|јуна)|(јул|јула)|(август|августа)|(септембар|септембра)|(октобар|октобра)|(новембар|новембра)|(децембар|децембра))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^1/i,\r\n    /^2/i,\r\n    /^3/i,\r\n    /^4/i,\r\n    /^5/i,\r\n    /^6/i,\r\n    /^7/i,\r\n    /^8/i,\r\n    /^9/i,\r\n    /^10/i,\r\n    /^11/i,\r\n    /^12/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ја/i,\r\n    /^ф/i,\r\n    /^мар/i,\r\n    /^ап/i,\r\n    /^мај/i,\r\n    /^јун/i,\r\n    /^јул/i,\r\n    /^авг/i,\r\n    /^с/i,\r\n    /^о/i,\r\n    /^н/i,\r\n    /^д/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[пусчн]/i,\r\n  short: /^(нед|пон|уто|сре|чет|пет|суб)/i,\r\n  abbreviated: /^(нед|пон|уто|сре|чет|пет|суб)/i,\r\n  wide: /^(недеља|понедељак|уторак|среда|четвртак|петак|субота)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^п/i, /^у/i, /^с/i, /^ч/i, /^п/i, /^с/i, /^н/i],\r\n  any: [/^нед/i, /^пон/i, /^уто/i, /^сре/i, /^чет/i, /^пет/i, /^суб/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(ам|пм|поноћ|(по)?подне|увече|ноћу|после подне|ујутру)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^поно/i,\r\n    noon: /^под/i,\r\n    morning: /ујутру/i,\r\n    afternoon: /(после\\s|по)+подне/i,\r\n    evening: /(увече)/i,\r\n    night: /(ноћу)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sr/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sr/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sr/_lib/formatRelative.js\";\r\nimport { localize } from \"./sr/_lib/localize.js\";\r\nimport { match } from \"./sr/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Serbian cyrillic locale.\r\n * @language Serbian\r\n * @iso-639-2 srp\r\n * @author Igor Radivojević [@rogyvoje](https://github.com/rogyvoje)\r\n */\r\nexport const sr = {\r\n  code: \"sr\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default sr;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      standalone: \"manje od 1 sekunde\",\r\n      withPrepositionAgo: \"manje od 1 sekunde\",\r\n      withPrepositionIn: \"manje od 1 sekundu\",\r\n    },\r\n    dual: \"manje od {{count}} sekunde\",\r\n    other: \"manje od {{count}} sekundi\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      standalone: \"1 sekunda\",\r\n      withPrepositionAgo: \"1 sekunde\",\r\n      withPrepositionIn: \"1 sekundu\",\r\n    },\r\n    dual: \"{{count}} sekunde\",\r\n    other: \"{{count}} sekundi\",\r\n  },\r\n\r\n  halfAMinute: \"pola minute\",\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      standalone: \"manje od 1 minute\",\r\n      withPrepositionAgo: \"manje od 1 minute\",\r\n      withPrepositionIn: \"manje od 1 minutu\",\r\n    },\r\n    dual: \"manje od {{count}} minute\",\r\n    other: \"manje od {{count}} minuta\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      standalone: \"1 minuta\",\r\n      withPrepositionAgo: \"1 minute\",\r\n      withPrepositionIn: \"1 minutu\",\r\n    },\r\n    dual: \"{{count}} minute\",\r\n    other: \"{{count}} minuta\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      standalone: \"oko 1 sat\",\r\n      withPrepositionAgo: \"oko 1 sat\",\r\n      withPrepositionIn: \"oko 1 sat\",\r\n    },\r\n    dual: \"oko {{count}} sata\",\r\n    other: \"oko {{count}} sati\",\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      standalone: \"1 sat\",\r\n      withPrepositionAgo: \"1 sat\",\r\n      withPrepositionIn: \"1 sat\",\r\n    },\r\n    dual: \"{{count}} sata\",\r\n    other: \"{{count}} sati\",\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      standalone: \"1 dan\",\r\n      withPrepositionAgo: \"1 dan\",\r\n      withPrepositionIn: \"1 dan\",\r\n    },\r\n    dual: \"{{count}} dana\",\r\n    other: \"{{count}} dana\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      standalone: \"oko 1 nedelju\",\r\n      withPrepositionAgo: \"oko 1 nedelju\",\r\n      withPrepositionIn: \"oko 1 nedelju\",\r\n    },\r\n    dual: \"oko {{count}} nedelje\",\r\n    other: \"oko {{count}} nedelje\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      standalone: \"1 nedelju\",\r\n      withPrepositionAgo: \"1 nedelju\",\r\n      withPrepositionIn: \"1 nedelju\",\r\n    },\r\n    dual: \"{{count}} nedelje\",\r\n    other: \"{{count}} nedelje\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      standalone: \"oko 1 mesec\",\r\n      withPrepositionAgo: \"oko 1 mesec\",\r\n      withPrepositionIn: \"oko 1 mesec\",\r\n    },\r\n    dual: \"oko {{count}} meseca\",\r\n    other: \"oko {{count}} meseci\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      standalone: \"1 mesec\",\r\n      withPrepositionAgo: \"1 mesec\",\r\n      withPrepositionIn: \"1 mesec\",\r\n    },\r\n    dual: \"{{count}} meseca\",\r\n    other: \"{{count}} meseci\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      standalone: \"oko 1 godinu\",\r\n      withPrepositionAgo: \"oko 1 godinu\",\r\n      withPrepositionIn: \"oko 1 godinu\",\r\n    },\r\n    dual: \"oko {{count}} godine\",\r\n    other: \"oko {{count}} godina\",\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      standalone: \"1 godina\",\r\n      withPrepositionAgo: \"1 godine\",\r\n      withPrepositionIn: \"1 godinu\",\r\n    },\r\n    dual: \"{{count}} godine\",\r\n    other: \"{{count}} godina\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      standalone: \"preko 1 godinu\",\r\n      withPrepositionAgo: \"preko 1 godinu\",\r\n      withPrepositionIn: \"preko 1 godinu\",\r\n    },\r\n    dual: \"preko {{count}} godine\",\r\n    other: \"preko {{count}} godina\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      standalone: \"gotovo 1 godinu\",\r\n      withPrepositionAgo: \"gotovo 1 godinu\",\r\n      withPrepositionIn: \"gotovo 1 godinu\",\r\n    },\r\n    dual: \"gotovo {{count}} godine\",\r\n    other: \"gotovo {{count}} godina\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    if (options?.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        result = tokenValue.one.withPrepositionIn;\r\n      } else {\r\n        result = tokenValue.one.withPrepositionAgo;\r\n      }\r\n    } else {\r\n      result = tokenValue.one.standalone;\r\n    }\r\n  } else if (\r\n    count % 10 > 1 &&\r\n    count % 10 < 5 && // if last digit is between 2 and 4\r\n    String(count).substr(-2, 1) !== \"1\" // unless the 2nd to last digit is \"1\"\r\n  ) {\r\n    result = tokenValue.dual.replace(\"{{count}}\", String(count));\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"za \" + result;\r\n    } else {\r\n      return \"pre \" + result;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, d. MMMM yyyy.\",\r\n  long: \"d. MMMM yyyy.\",\r\n  medium: \"d. MMM yy.\",\r\n  short: \"dd. MM. yy.\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss (zzzz)\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'u' {{time}}\",\r\n  long: \"{{date}} 'u' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'prošle nedelje u' p\";\r\n      case 3:\r\n        return \"'prošle srede u' p\";\r\n      case 6:\r\n        return \"'prošle subote u' p\";\r\n      default:\r\n        return \"'prošli' EEEE 'u' p\";\r\n    }\r\n  },\r\n  yesterday: \"'juče u' p\",\r\n  today: \"'danas u' p\",\r\n  tomorrow: \"'sutra u' p\",\r\n  nextWeek: (date) => {\r\n    switch (date.getDay()) {\r\n      case 0:\r\n        return \"'sledeće nedelje u' p\";\r\n      case 3:\r\n        return \"'sledeću sredu u' p\";\r\n      case 6:\r\n        return \"'sledeću subotu u' p\";\r\n      default:\r\n        return \"'sledeći' EEEE 'u' p\";\r\n    }\r\n  },\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, _baseDate, _options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"pr.n.e.\", \"AD\"],\r\n  abbreviated: [\"pr. Hr.\", \"po. Hr.\"],\r\n  wide: [\"Pre Hrista\", \"Posle Hrista\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1.\", \"2.\", \"3.\", \"4.\"],\r\n  abbreviated: [\"1. kv.\", \"2. kv.\", \"3. kv.\", \"4. kv.\"],\r\n  wide: [\"1. kvartal\", \"2. kvartal\", \"3. kvartal\", \"4. kvartal\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avg\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mart\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avgust\",\r\n    \"septembar\",\r\n    \"oktobar\",\r\n    \"novembar\",\r\n    \"decembar\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"1.\",\r\n    \"2.\",\r\n    \"3.\",\r\n    \"4.\",\r\n    \"5.\",\r\n    \"6.\",\r\n    \"7.\",\r\n    \"8.\",\r\n    \"9.\",\r\n    \"10.\",\r\n    \"11.\",\r\n    \"12.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avg\",\r\n    \"sep\",\r\n    \"okt\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januar\",\r\n    \"februar\",\r\n    \"mart\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"avgust\",\r\n    \"septembar\",\r\n    \"oktobar\",\r\n    \"novembar\",\r\n    \"decembar\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"N\", \"P\", \"U\", \"S\", \"Č\", \"P\", \"S\"],\r\n  short: [\"ned\", \"pon\", \"uto\", \"sre\", \"čet\", \"pet\", \"sub\"],\r\n  abbreviated: [\"ned\", \"pon\", \"uto\", \"sre\", \"čet\", \"pet\", \"sub\"],\r\n  wide: [\r\n    \"nedelja\",\r\n    \"ponedeljak\",\r\n    \"utorak\",\r\n    \"sreda\",\r\n    \"četvrtak\",\r\n    \"petak\",\r\n    \"subota\",\r\n  ],\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"posle podne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"popodne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n  wide: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"ponoć\",\r\n    noon: \"podne\",\r\n    morning: \"ujutru\",\r\n    afternoon: \"posle podne\",\r\n    evening: \"uveče\",\r\n    night: \"noću\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)\\./i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(pr\\.n\\.e\\.|AD)/i,\r\n  abbreviated: /^(pr\\.\\s?Hr\\.|po\\.\\s?Hr\\.)/i,\r\n  wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^pr/i, /^(po|nova)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]\\.\\s?kv\\.?/i,\r\n  wide: /^[1234]\\. kvartal/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(10|11|12|[123456789])\\./i,\r\n  abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,\r\n  wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^1/i,\r\n    /^2/i,\r\n    /^3/i,\r\n    /^4/i,\r\n    /^5/i,\r\n    /^6/i,\r\n    /^7/i,\r\n    /^8/i,\r\n    /^9/i,\r\n    /^10/i,\r\n    /^11/i,\r\n    /^12/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^avg/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[npusčc]/i,\r\n  short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,\r\n  abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i,\r\n  wide: /^(nedelja|ponedeljak|utorak|sreda|(četvrtak|cetvrtak)|petak|subota)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\r\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|posle podne|ujutru)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^pono/i,\r\n    noon: /^pod/i,\r\n    morning: /jutro/i,\r\n    afternoon: /(posle\\s|po)+podne/i,\r\n    evening: /(uvece|uveče)/i,\r\n    night: /(nocu|noću)/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sr-Latn/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sr-Latn/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sr-Latn/_lib/formatRelative.js\";\r\nimport { localize } from \"./sr-Latn/_lib/localize.js\";\r\nimport { match } from \"./sr-Latn/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Serbian latin locale.\r\n * @language Serbian\r\n * @iso-639-2 srp\r\n * @author Igor Radivojević [@rogyvoje](https://github.com/rogyvoje)\r\n */\r\nexport const srLatn = {\r\n  code: \"sr-Latn\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default srLatn;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"mindre än en sekund\",\r\n    other: \"mindre än {{count}} sekunder\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"en sekund\",\r\n    other: \"{{count}} sekunder\",\r\n  },\r\n\r\n  halfAMinute: \"en halv minut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"mindre än en minut\",\r\n    other: \"mindre än {{count}} minuter\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"en minut\",\r\n    other: \"{{count}} minuter\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ungefär en timme\",\r\n    other: \"ungefär {{count}} timmar\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"en timme\",\r\n    other: \"{{count}} timmar\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"en dag\",\r\n    other: \"{{count}} dagar\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ungefär en vecka\",\r\n    other: \"ungefär {{count}} veckor\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"en vecka\",\r\n    other: \"{{count}} veckor\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ungefär en månad\",\r\n    other: \"ungefär {{count}} månader\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"en månad\",\r\n    other: \"{{count}} månader\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ungefär ett år\",\r\n    other: \"ungefär {{count}} år\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"ett år\",\r\n    other: \"{{count}} år\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"över ett år\",\r\n    other: \"över {{count}} år\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"nästan ett år\",\r\n    other: \"nästan {{count}} år\",\r\n  },\r\n};\r\n\r\nconst wordMapping = [\r\n  \"noll\",\r\n  \"en\",\r\n  \"två\",\r\n  \"tre\",\r\n  \"fyra\",\r\n  \"fem\",\r\n  \"sex\",\r\n  \"sju\",\r\n  \"åtta\",\r\n  \"nio\",\r\n  \"tio\",\r\n  \"elva\",\r\n  \"tolv\",\r\n];\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\r\n      \"{{count}}\",\r\n      count < 13 ? wordMapping[count] : String(count),\r\n    );\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"om \" + result;\r\n    } else {\r\n      return result + \" sedan\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE d MMMM y\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"y-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"'kl'. HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'kl.' {{time}}\",\r\n  long: \"{{date}} 'kl.' {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'i' EEEE's kl.' p\",\r\n  yesterday: \"'igår kl.' p\",\r\n  today: \"'idag kl.' p\",\r\n  tomorrow: \"'imorgon kl.' p\",\r\n  nextWeek: \"EEEE 'kl.' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"f.Kr.\", \"e.Kr.\"],\r\n  abbreviated: [\"f.Kr.\", \"e.Kr.\"],\r\n  wide: [\"före Kristus\", \"efter Kristus\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"1:a kvartalet\", \"2:a kvartalet\", \"3:e kvartalet\", \"4:e kvartalet\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"jan.\",\r\n    \"feb.\",\r\n    \"mars\",\r\n    \"apr.\",\r\n    \"maj\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"aug.\",\r\n    \"sep.\",\r\n    \"okt.\",\r\n    \"nov.\",\r\n    \"dec.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"januari\",\r\n    \"februari\",\r\n    \"mars\",\r\n    \"april\",\r\n    \"maj\",\r\n    \"juni\",\r\n    \"juli\",\r\n    \"augusti\",\r\n    \"september\",\r\n    \"oktober\",\r\n    \"november\",\r\n    \"december\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"S\", \"M\", \"T\", \"O\", \"T\", \"F\", \"L\"],\r\n  short: [\"sö\", \"må\", \"ti\", \"on\", \"to\", \"fr\", \"lö\"],\r\n  abbreviated: [\"sön\", \"mån\", \"tis\", \"ons\", \"tors\", \"fre\", \"lör\"],\r\n  wide: [\"söndag\", \"måndag\", \"tisdag\", \"onsdag\", \"torsdag\", \"fredag\", \"lördag\"],\r\n};\r\n\r\n// https://www.unicode.org/cldr/charts/32/summary/sv.html#1888\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"fm\",\r\n    pm: \"em\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"morg.\",\r\n    afternoon: \"efterm.\",\r\n    evening: \"kväll\",\r\n    night: \"natt\",\r\n  },\r\n  abbreviated: {\r\n    am: \"f.m.\",\r\n    pm: \"e.m.\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"morgon\",\r\n    afternoon: \"efterm.\",\r\n    evening: \"kväll\",\r\n    night: \"natt\",\r\n  },\r\n  wide: {\r\n    am: \"förmiddag\",\r\n    pm: \"eftermiddag\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"morgon\",\r\n    afternoon: \"eftermiddag\",\r\n    evening: \"kväll\",\r\n    night: \"natt\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"fm\",\r\n    pm: \"em\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på efterm.\",\r\n    evening: \"på kvällen\",\r\n    night: \"på natten\",\r\n  },\r\n  abbreviated: {\r\n    am: \"fm\",\r\n    pm: \"em\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morg.\",\r\n    afternoon: \"på efterm.\",\r\n    evening: \"på kvällen\",\r\n    night: \"på natten\",\r\n  },\r\n  wide: {\r\n    am: \"fm\",\r\n    pm: \"em\",\r\n    midnight: \"midnatt\",\r\n    noon: \"middag\",\r\n    morning: \"på morgonen\",\r\n    afternoon: \"på eftermiddagen\",\r\n    evening: \"på kvällen\",\r\n    night: \"på natten\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  const rem100 = number % 100;\r\n  if (rem100 > 20 || rem100 < 10) {\r\n    switch (rem100 % 10) {\r\n      case 1:\r\n      case 2:\r\n        return number + \":a\";\r\n    }\r\n  }\r\n  return number + \":e\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(:a|:e)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(f\\.? ?Kr\\.?|f\\.? ?v\\.? ?t\\.?|e\\.? ?Kr\\.?|v\\.? ?t\\.?)/i,\r\n  abbreviated: /^(f\\.? ?Kr\\.?|f\\.? ?v\\.? ?t\\.?|e\\.? ?Kr\\.?|v\\.? ?t\\.?)/i,\r\n  wide: /^(före Kristus|före vår tid|efter Kristus|vår tid)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^f/i, /^[ev]/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](:a|:e)? kvartalet/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[jfmasond]/i,\r\n  abbreviated:\r\n    /^(jan|feb|mar[s]?|apr|maj|jun[i]?|jul[i]?|aug|sep|okt|nov|dec)\\.?/i,\r\n  wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^j/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^j/i,\r\n    /^j/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ja/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^maj/i,\r\n    /^jun/i,\r\n    /^jul/i,\r\n    /^au/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[smtofl]/i,\r\n  short: /^(sö|må|ti|on|to|fr|lö)/i,\r\n  abbreviated: /^(sön|mån|tis|ons|tors|fre|lör)/i,\r\n  wide: /^(söndag|måndag|tisdag|onsdag|torsdag|fredag|lördag)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^([fe]\\.?\\s?m\\.?|midn(att)?|midd(ag)?|(på) (morgonen|eftermiddagen|kvällen|natten))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^f/i,\r\n    pm: /^e/i,\r\n    midnight: /^midn/i,\r\n    noon: /^midd/i,\r\n    morning: /morgon/i,\r\n    afternoon: /eftermiddag/i,\r\n    evening: /kväll/i,\r\n    night: /natt/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./sv/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./sv/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./sv/_lib/formatRelative.js\";\r\nimport { localize } from \"./sv/_lib/localize.js\";\r\nimport { match } from \"./sv/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Swedish locale.\r\n * @language Swedish\r\n * @iso-639-2 swe\r\n * @author Johannes Ulén [@ejulen](https://github.com/ejulen)\r\n * @author Alexander Nanberg [@alexandernanberg](https://github.com/alexandernanberg)\r\n * @author Henrik Andersson [@limelights](https://github.com/limelights)\r\n */\r\nexport const sv = {\r\n  code: \"sv\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default sv;\r\n", "function isPluralType(val) {\r\n  return val.one !== undefined;\r\n}\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: {\r\n      default: \"ஒரு வினாடிக்கு குறைவாக\",\r\n      in: \"ஒரு வினாடிக்குள்\",\r\n      ago: \"ஒரு வினாடிக்கு முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} வினாடிகளுக்கு குறைவாக\",\r\n      in: \"{{count}} வினாடிகளுக்குள்\",\r\n      ago: \"{{count}} வினாடிகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    one: {\r\n      default: \"1 வினாடி\",\r\n      in: \"1 வினாடியில்\",\r\n      ago: \"1 வினாடி முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} விநாடிகள்\",\r\n      in: \"{{count}} வினாடிகளில்\",\r\n      ago: \"{{count}} விநாடிகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    default: \"அரை நிமிடம்\",\r\n    in: \"அரை நிமிடத்தில்\",\r\n    ago: \"அரை நிமிடம் முன்பு\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    one: {\r\n      default: \"ஒரு நிமிடத்திற்கும் குறைவாக\",\r\n      in: \"ஒரு நிமிடத்திற்குள்\",\r\n      ago: \"ஒரு நிமிடத்திற்கு முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} நிமிடங்களுக்கும் குறைவாக\",\r\n      in: \"{{count}} நிமிடங்களுக்குள்\",\r\n      ago: \"{{count}} நிமிடங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    one: {\r\n      default: \"1 நிமிடம்\",\r\n      in: \"1 நிமிடத்தில்\",\r\n      ago: \"1 நிமிடம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} நிமிடங்கள்\",\r\n      in: \"{{count}} நிமிடங்களில்\",\r\n      ago: \"{{count}} நிமிடங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: {\r\n      default: \"சுமார் 1 மணி நேரம்\",\r\n      in: \"சுமார் 1 மணி நேரத்தில்\",\r\n      ago: \"சுமார் 1 மணி நேரத்திற்கு முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"சுமார் {{count}} மணி நேரம்\",\r\n      in: \"சுமார் {{count}} மணி நேரத்திற்கு முன்பு\",\r\n      ago: \"சுமார் {{count}} மணி நேரத்தில்\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    one: {\r\n      default: \"1 மணி நேரம்\",\r\n      in: \"1 மணி நேரத்தில்\",\r\n      ago: \"1 மணி நேரத்திற்கு முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} மணி நேரம்\",\r\n      in: \"{{count}} மணி நேரத்தில்\",\r\n      ago: \"{{count}} மணி நேரத்திற்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    one: {\r\n      default: \"1 நாள்\",\r\n      in: \"1 நாளில்\",\r\n      ago: \"1 நாள் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} நாட்கள்\",\r\n      in: \"{{count}} நாட்களில்\",\r\n      ago: \"{{count}} நாட்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: {\r\n      default: \"சுமார் 1 வாரம்\",\r\n      in: \"சுமார் 1 வாரத்தில்\",\r\n      ago: \"சுமார் 1 வாரம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"சுமார் {{count}} வாரங்கள்\",\r\n      in: \"சுமார் {{count}} வாரங்களில்\",\r\n      ago: \"சுமார் {{count}} வாரங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    one: {\r\n      default: \"1 வாரம்\",\r\n      in: \"1 வாரத்தில்\",\r\n      ago: \"1 வாரம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} வாரங்கள்\",\r\n      in: \"{{count}} வாரங்களில்\",\r\n      ago: \"{{count}} வாரங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: {\r\n      default: \"சுமார் 1 மாதம்\",\r\n      in: \"சுமார் 1 மாதத்தில்\",\r\n      ago: \"சுமார் 1 மாதத்திற்கு முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"சுமார் {{count}} மாதங்கள்\",\r\n      in: \"சுமார் {{count}} மாதங்களில்\",\r\n      ago: \"சுமார் {{count}} மாதங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    one: {\r\n      default: \"1 மாதம்\",\r\n      in: \"1 மாதத்தில்\",\r\n      ago: \"1 மாதம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} மாதங்கள்\",\r\n      in: \"{{count}} மாதங்களில்\",\r\n      ago: \"{{count}} மாதங்களுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: {\r\n      default: \"சுமார் 1 வருடம்\",\r\n      in: \"சுமார் 1 ஆண்டில்\",\r\n      ago: \"சுமார் 1 வருடம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"சுமார் {{count}} ஆண்டுகள்\",\r\n      in: \"சுமார் {{count}} ஆண்டுகளில்\",\r\n      ago: \"சுமார் {{count}} ஆண்டுகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    one: {\r\n      default: \"1 வருடம்\",\r\n      in: \"1 ஆண்டில்\",\r\n      ago: \"1 வருடம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ஆண்டுகள்\",\r\n      in: \"{{count}} ஆண்டுகளில்\",\r\n      ago: \"{{count}} ஆண்டுகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    one: {\r\n      default: \"1 வருடத்திற்கு மேல்\",\r\n      in: \"1 வருடத்திற்கும் மேலாக\",\r\n      ago: \"1 வருடம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"{{count}} ஆண்டுகளுக்கும் மேலாக\",\r\n      in: \"{{count}} ஆண்டுகளில்\",\r\n      ago: \"{{count}} ஆண்டுகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    one: {\r\n      default: \"கிட்டத்தட்ட 1 வருடம்\",\r\n      in: \"கிட்டத்தட்ட 1 ஆண்டில்\",\r\n      ago: \"கிட்டத்தட்ட 1 வருடம் முன்பு\",\r\n    },\r\n    other: {\r\n      default: \"கிட்டத்தட்ட {{count}} ஆண்டுகள்\",\r\n      in: \"கிட்டத்தட்ட {{count}} ஆண்டுகளில்\",\r\n      ago: \"கிட்டத்தட்ட {{count}} ஆண்டுகளுக்கு முன்பு\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  const tense = options?.addSuffix\r\n    ? options.comparison && options.comparison > 0\r\n      ? \"in\"\r\n      : \"ago\"\r\n    : \"default\";\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n\r\n  if (!isPluralType(tokenValue)) return tokenValue[tense];\r\n\r\n  if (count === 1) {\r\n    return tokenValue.one[tense];\r\n  } else {\r\n    return tokenValue.other[tense].replace(\"{{count}}\", String(count));\r\n  }\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html\r\n\r\n// CLDR #1846 - #1849\r\nconst dateFormats = {\r\n  full: \"EEEE, d MMMM, y\",\r\n  long: \"d MMMM, y\",\r\n  medium: \"d MMM, y\",\r\n  short: \"d/M/yy\",\r\n};\r\n\r\n// CLDR #1850 - #1853\r\nconst timeFormats = {\r\n  full: \"a h:mm:ss zzzz\",\r\n  long: \"a h:mm:ss z\",\r\n  medium: \"a h:mm:ss\",\r\n  short: \"a h:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'கடந்த' eeee p 'மணிக்கு'\",\r\n  yesterday: \"'நேற்று ' p 'மணிக்கு'\",\r\n  today: \"'இன்று ' p 'மணிக்கு'\",\r\n  tomorrow: \"'நாளை ' p 'மணிக்கு'\",\r\n  nextWeek: \"eeee p 'மணிக்கு'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html\r\n\r\nconst eraValues = {\r\n  narrow: [\"கி.மு.\", \"கி.பி.\"],\r\n  abbreviated: [\"கி.மு.\", \"கி.பி.\"], // CLDR #1624, #1626\r\n  wide: [\"கிறிஸ்துவுக்கு முன்\", \"அன்னோ டோமினி\"], // CLDR #1620, #1622\r\n};\r\n\r\nconst quarterValues = {\r\n  // CLDR #1644 - #1647\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  // CLDR #1636 - #1639\r\n  abbreviated: [\"காலா.1\", \"காலா.2\", \"காலா.3\", \"காலா.4\"],\r\n  // CLDR #1628 - #1631\r\n  wide: [\r\n    \"ஒன்றாம் காலாண்டு\",\r\n    \"இரண்டாம் காலாண்டு\",\r\n    \"மூன்றாம் காலாண்டு\",\r\n    \"நான்காம் காலாண்டு\",\r\n  ],\r\n};\r\n\r\nconst monthValues = {\r\n  // CLDR #700 - #711\r\n  narrow: [\"ஜ\", \"பி\", \"மா\", \"ஏ\", \"மே\", \"ஜூ\", \"ஜூ\", \"ஆ\", \"செ\", \"அ\", \"ந\", \"டி\"],\r\n\r\n  // CLDR #1676 - #1687\r\n  abbreviated: [\r\n    \"ஜன.\",\r\n    \"பிப்.\",\r\n    \"மார்.\",\r\n    \"ஏப்.\",\r\n    \"மே\",\r\n    \"ஜூன்\",\r\n    \"ஜூலை\",\r\n    \"ஆக.\",\r\n    \"செப்.\",\r\n    \"அக்.\",\r\n    \"நவ.\",\r\n    \"டிச.\",\r\n  ],\r\n\r\n  // CLDR #1652 - #1663\r\n  wide: [\r\n    \"ஜனவரி\", // January\r\n    \"பிப்ரவரி\", // February\r\n    \"மார்ச்\", // March\r\n    \"ஏப்ரல்\", // April\r\n    \"மே\", // May\r\n    \"ஜூன்\", // June\r\n    \"ஜூலை\", // July\r\n    \"ஆகஸ்ட்\", // August\r\n    \"செப்டம்பர்\", // September\r\n    \"அக்டோபர்\", // October\r\n    \"நவம்பர்\", // November\r\n    \"டிசம்பர்\", // December\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  // CLDR #1766 - #1772\r\n  narrow: [\"ஞா\", \"தி\", \"செ\", \"பு\", \"வி\", \"வெ\", \"ச\"],\r\n  // CLDR #1752 - #1758\r\n  short: [\"ஞா\", \"தி\", \"செ\", \"பு\", \"வி\", \"வெ\", \"ச\"],\r\n  // CLDR #1738 - #1744\r\n  abbreviated: [\"ஞாயி.\", \"திங்.\", \"செவ்.\", \"புத.\", \"வியா.\", \"வெள்.\", \"சனி\"],\r\n\r\n  // CLDR #1724 - #1730\r\n  wide: [\r\n    \"ஞாயிறு\", // Sunday\r\n    \"திங்கள்\", // Monday\r\n    \"செவ்வாய்\", // Tuesday\r\n    \"புதன்\", // Wednesday\r\n    \"வியாழன்\", // Thursday\r\n    \"வெள்ளி\", // Friday\r\n    \"சனி\", // Saturday\r\n  ],\r\n};\r\n\r\n// CLDR #1780 - #1845\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"மு.ப\",\r\n    pm: \"பி.ப\",\r\n    midnight: \"நள்.\",\r\n    noon: \"நண்.\",\r\n    morning: \"கா.\",\r\n    afternoon: \"மதி.\",\r\n    evening: \"மா.\",\r\n    night: \"இர.\",\r\n  },\r\n  abbreviated: {\r\n    am: \"முற்பகல்\",\r\n    pm: \"பிற்பகல்\",\r\n    midnight: \"நள்ளிரவு\",\r\n    noon: \"நண்பகல்\",\r\n    morning: \"காலை\",\r\n    afternoon: \"மதியம்\",\r\n    evening: \"மாலை\",\r\n    night: \"இரவு\",\r\n  },\r\n  wide: {\r\n    am: \"முற்பகல்\",\r\n    pm: \"பிற்பகல்\",\r\n    midnight: \"நள்ளிரவு\",\r\n    noon: \"நண்பகல்\",\r\n    morning: \"காலை\",\r\n    afternoon: \"மதியம்\",\r\n    evening: \"மாலை\",\r\n    night: \"இரவு\",\r\n  },\r\n};\r\n\r\n// CLDR #1780 - #1845\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"மு.ப\",\r\n    pm: \"பி.ப\",\r\n    midnight: \"நள்.\",\r\n    noon: \"நண்.\",\r\n    morning: \"கா.\",\r\n    afternoon: \"மதி.\",\r\n    evening: \"மா.\",\r\n    night: \"இர.\",\r\n  },\r\n  abbreviated: {\r\n    am: \"முற்பகல்\",\r\n    pm: \"பிற்பகல்\",\r\n    midnight: \"நள்ளிரவு\",\r\n    noon: \"நண்பகல்\",\r\n    morning: \"காலை\",\r\n    afternoon: \"மதியம்\",\r\n    evening: \"மாலை\",\r\n    night: \"இரவு\",\r\n  },\r\n  wide: {\r\n    am: \"முற்பகல்\",\r\n    pm: \"பிற்பகல்\",\r\n    midnight: \"நள்ளிரவு\",\r\n    noon: \"நண்பகல்\",\r\n    morning: \"காலை\",\r\n    afternoon: \"மதியம்\",\r\n    evening: \"மாலை\",\r\n    night: \"இரவு\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(வது)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(கி.மு.|கி.பி.)/i,\r\n  abbreviated: /^(கி\\.?\\s?மு\\.?|கி\\.?\\s?பி\\.?)/,\r\n  wide: /^(கிறிஸ்துவுக்கு\\sமுன்|அன்னோ\\sடோமினி)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/கி\\.?\\s?மு\\.?/, /கி\\.?\\s?பி\\.?/],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^காலா.[1234]/i,\r\n  wide: /^(ஒன்றாம்|இரண்டாம்|மூன்றாம்|நான்காம்) காலாண்டு/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  narrow: [/1/i, /2/i, /3/i, /4/i],\r\n  any: [\r\n    /(1|காலா.1|ஒன்றாம்)/i,\r\n    /(2|காலா.2|இரண்டாம்)/i,\r\n    /(3|காலா.3|மூன்றாம்)/i,\r\n    /(4|காலா.4|நான்காம்)/i,\r\n  ],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(ஜ|பி|மா|ஏ|மே|ஜூ|ஆ|செ|அ|ந|டி)$/i,\r\n  abbreviated: /^(ஜன.|பிப்.|மார்.|ஏப்.|மே|ஜூன்|ஜூலை|ஆக.|செப்.|அக்.|நவ.|டிச.)/i,\r\n  wide: /^(ஜனவரி|பிப்ரவரி|மார்ச்|ஏப்ரல்|மே|ஜூன்|ஜூலை|ஆகஸ்ட்|செப்டம்பர்|அக்டோபர்|நவம்பர்|டிசம்பர்)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ஜ$/i,\r\n    /^பி/i,\r\n    /^மா/i,\r\n    /^ஏ/i,\r\n    /^மே/i,\r\n    /^ஜூ/i,\r\n    /^ஜூ/i,\r\n    /^ஆ/i,\r\n    /^செ/i,\r\n    /^அ/i,\r\n    /^ந/i,\r\n    /^டி/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ஜன/i,\r\n    /^பி/i,\r\n    /^மா/i,\r\n    /^ஏ/i,\r\n    /^மே/i,\r\n    /^ஜூன்/i,\r\n    /^ஜூலை/i,\r\n    /^ஆ/i,\r\n    /^செ/i,\r\n    /^அ/i,\r\n    /^ந/i,\r\n    /^டி/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,\r\n  short: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i,\r\n  abbreviated: /^(ஞாயி.|திங்.|செவ்.|புத.|வியா.|வெள்.|சனி)/i,\r\n  wide: /^(ஞாயிறு|திங்கள்|செவ்வாய்|புதன்|வியாழன்|வெள்ளி|சனி)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i],\r\n  any: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(மு.ப|பி.ப|நள்|நண்|காலை|மதியம்|மாலை|இரவு)/i,\r\n  any: /^(மு.ப|பி.ப|முற்பகல்|பிற்பகல்|நள்ளிரவு|நண்பகல்|காலை|மதியம்|மாலை|இரவு)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^மு/i,\r\n    pm: /^பி/i,\r\n    midnight: /^நள்/i,\r\n    noon: /^நண்/i,\r\n    morning: /காலை/i,\r\n    afternoon: /மதியம்/i,\r\n    evening: /மாலை/i,\r\n    night: /இரவு/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ta/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ta/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ta/_lib/formatRelative.js\";\r\nimport { localize } from \"./ta/_lib/localize.js\";\r\nimport { match } from \"./ta/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Tamil locale (India).\r\n * @language Tamil\r\n * @iso-639-2 tam\r\n * @author Sibiraj [@sibiraj-s](https://github.com/sibiraj-s)\r\n */\r\nexport const ta = {\r\n  code: \"ta\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ta;\r\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    standalone: {\r\n      one: \"సెకను కన్నా తక్కువ\",\r\n      other: \"{{count}} సెకన్ల కన్నా తక్కువ\",\r\n    },\r\n    withPreposition: {\r\n      one: \"సెకను\",\r\n      other: \"{{count}} సెకన్ల\",\r\n    },\r\n  },\r\n\r\n  xSeconds: {\r\n    standalone: {\r\n      one: \"ఒక సెకను\", // CLDR #1314\r\n      other: \"{{count}} సెకన్ల\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక సెకను\",\r\n      other: \"{{count}} సెకన్ల\",\r\n    },\r\n  },\r\n\r\n  halfAMinute: {\r\n    standalone: \"అర నిమిషం\",\r\n    withPreposition: \"అర నిమిషం\",\r\n  },\r\n\r\n  lessThanXMinutes: {\r\n    standalone: {\r\n      one: \"ఒక నిమిషం కన్నా తక్కువ\",\r\n      other: \"{{count}} నిమిషాల కన్నా తక్కువ\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక నిమిషం\",\r\n      other: \"{{count}} నిమిషాల\",\r\n    },\r\n  },\r\n\r\n  xMinutes: {\r\n    standalone: {\r\n      one: \"ఒక నిమిషం\", // CLDR #1311\r\n      other: \"{{count}} నిమిషాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక నిమిషం\", // CLDR #1311\r\n      other: \"{{count}} నిమిషాల\",\r\n    },\r\n  },\r\n\r\n  aboutXHours: {\r\n    standalone: {\r\n      one: \"సుమారు ఒక గంట\",\r\n      other: \"సుమారు {{count}} గంటలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"సుమారు ఒక గంట\",\r\n      other: \"సుమారు {{count}} గంటల\",\r\n    },\r\n  },\r\n\r\n  xHours: {\r\n    standalone: {\r\n      one: \"ఒక గంట\", // CLDR #1308\r\n      other: \"{{count}} గంటలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక గంట\",\r\n      other: \"{{count}} గంటల\",\r\n    },\r\n  },\r\n\r\n  xDays: {\r\n    standalone: {\r\n      one: \"ఒక రోజు\", // CLDR #1292\r\n      other: \"{{count}} రోజులు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక రోజు\",\r\n      other: \"{{count}} రోజుల\",\r\n    },\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    standalone: {\r\n      one: \"సుమారు ఒక వారం\",\r\n      other: \"సుమారు {{count}} వారాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"సుమారు ఒక వారం\",\r\n      other: \"సుమారు {{count}} వారాలల\",\r\n    },\r\n  },\r\n\r\n  xWeeks: {\r\n    standalone: {\r\n      one: \"ఒక వారం\",\r\n      other: \"{{count}} వారాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక వారం\",\r\n      other: \"{{count}} వారాలల\",\r\n    },\r\n  },\r\n\r\n  aboutXMonths: {\r\n    standalone: {\r\n      one: \"సుమారు ఒక నెల\",\r\n      other: \"సుమారు {{count}} నెలలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"సుమారు ఒక నెల\",\r\n      other: \"సుమారు {{count}} నెలల\",\r\n    },\r\n  },\r\n\r\n  xMonths: {\r\n    standalone: {\r\n      one: \"ఒక నెల\", // CLDR #1281\r\n      other: \"{{count}} నెలలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక నెల\",\r\n      other: \"{{count}} నెలల\",\r\n    },\r\n  },\r\n\r\n  aboutXYears: {\r\n    standalone: {\r\n      one: \"సుమారు ఒక సంవత్సరం\",\r\n      other: \"సుమారు {{count}} సంవత్సరాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"సుమారు ఒక సంవత్సరం\",\r\n      other: \"సుమారు {{count}} సంవత్సరాల\",\r\n    },\r\n  },\r\n\r\n  xYears: {\r\n    standalone: {\r\n      one: \"ఒక సంవత్సరం\", // CLDR #1275\r\n      other: \"{{count}} సంవత్సరాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక సంవత్సరం\",\r\n      other: \"{{count}} సంవత్సరాల\",\r\n    },\r\n  },\r\n\r\n  overXYears: {\r\n    standalone: {\r\n      one: \"ఒక సంవత్సరం పైగా\",\r\n      other: \"{{count}} సంవత్సరాలకు పైగా\",\r\n    },\r\n    withPreposition: {\r\n      one: \"ఒక సంవత్సరం\",\r\n      other: \"{{count}} సంవత్సరాల\",\r\n    },\r\n  },\r\n\r\n  almostXYears: {\r\n    standalone: {\r\n      one: \"దాదాపు ఒక సంవత్సరం\",\r\n      other: \"దాదాపు {{count}} సంవత్సరాలు\",\r\n    },\r\n    withPreposition: {\r\n      one: \"దాదాపు ఒక సంవత్సరం\",\r\n      other: \"దాదాపు {{count}} సంవత్సరాల\",\r\n    },\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = options?.addSuffix\r\n    ? formatDistanceLocale[token].withPreposition\r\n    : formatDistanceLocale[token].standalone;\r\n\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"లో\";\r\n    } else {\r\n      return result + \" క్రితం\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\n// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\r\n\r\n// CLDR #1807 - #1811\r\nconst dateFormats = {\r\n  full: \"d, MMMM y, EEEE\",\r\n  long: \"d MMMM, y\",\r\n  medium: \"d MMM, y\",\r\n  short: \"dd-MM-yy\",\r\n};\r\n\r\n// CLDR #1807 - #1811\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\n// CLDR #1815 - #1818\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}'కి'\",\r\n  long: \"{{date}} {{time}}'కి'\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: \"'గత' eeee p\", // CLDR #1384\r\n  yesterday: \"'నిన్న' p\", // CLDR #1393\r\n  today: \"'ఈ రోజు' p\", // CLDR #1394\r\n  tomorrow: \"'రేపు' p\", // CLDR #1395\r\n  nextWeek: \"'తదుపరి' eeee p\", // CLDR #1386\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// Source: https://www.unicode.org/cldr/charts/32/summary/te.html\r\n// Source: https://dsal.uchicago.edu/dictionaries/brown/\r\n\r\n// CLDR #1605 - #1608\r\nconst eraValues = {\r\n  narrow: [\"క్రీ.పూ.\", \"క్రీ.శ.\"],\r\n  abbreviated: [\"క్రీ.పూ.\", \"క్రీ.శ.\"],\r\n  wide: [\"క్రీస్తు పూర్వం\", \"క్రీస్తుశకం\"],\r\n};\r\n\r\n// CLDR #1613 - #1628\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"త్రై1\", \"త్రై2\", \"త్రై3\", \"త్రై4\"],\r\n  wide: [\"1వ త్రైమాసికం\", \"2వ త్రైమాసికం\", \"3వ త్రైమాసికం\", \"4వ త్రైమాసికం\"],\r\n};\r\n\r\n// CLDR #1637 - #1708\r\nconst monthValues = {\r\n  narrow: [\"జ\", \"ఫి\", \"మా\", \"ఏ\", \"మే\", \"జూ\", \"జు\", \"ఆ\", \"సె\", \"అ\", \"న\", \"డి\"],\r\n\r\n  abbreviated: [\r\n    \"జన\",\r\n    \"ఫిబ్ర\",\r\n    \"మార్చి\",\r\n    \"ఏప్రి\",\r\n    \"మే\",\r\n    \"జూన్\",\r\n    \"జులై\",\r\n    \"ఆగ\",\r\n    \"సెప్టెం\",\r\n    \"అక్టో\",\r\n    \"నవం\",\r\n    \"డిసెం\",\r\n  ],\r\n\r\n  wide: [\r\n    \"జనవరి\",\r\n    \"ఫిబ్రవరి\",\r\n    \"మార్చి\",\r\n    \"ఏప్రిల్\",\r\n    \"మే\",\r\n    \"జూన్\",\r\n    \"జులై\",\r\n    \"ఆగస్టు\",\r\n    \"సెప్టెంబర్\",\r\n    \"అక్టోబర్\",\r\n    \"నవంబర్\",\r\n    \"డిసెంబర్\",\r\n  ],\r\n};\r\n\r\n// CLDR #1709 - #1764\r\nconst dayValues = {\r\n  narrow: [\"ఆ\", \"సో\", \"మ\", \"బు\", \"గు\", \"శు\", \"శ\"],\r\n  short: [\"ఆది\", \"సోమ\", \"మంగళ\", \"బుధ\", \"గురు\", \"శుక్ర\", \"శని\"],\r\n  abbreviated: [\"ఆది\", \"సోమ\", \"మంగళ\", \"బుధ\", \"గురు\", \"శుక్ర\", \"శని\"],\r\n  wide: [\r\n    \"ఆదివారం\",\r\n    \"సోమవారం\",\r\n    \"మంగళవారం\",\r\n    \"బుధవారం\",\r\n    \"గురువారం\",\r\n    \"శుక్రవారం\",\r\n    \"శనివారం\",\r\n  ],\r\n};\r\n\r\n// CLDR #1767 - #1806\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n  abbreviated: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n  wide: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n  abbreviated: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n  wide: {\r\n    am: \"పూర్వాహ్నం\",\r\n    pm: \"అపరాహ్నం\",\r\n    midnight: \"అర్ధరాత్రి\",\r\n    noon: \"మిట్టమధ్యాహ్నం\",\r\n    morning: \"ఉదయం\",\r\n    afternoon: \"మధ్యాహ్నం\",\r\n    evening: \"సాయంత్రం\",\r\n    night: \"రాత్రి\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \"వ\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(వ)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(క్రీ\\.పూ\\.|క్రీ\\.శ\\.)/i,\r\n  abbreviated:\r\n    /^(క్రీ\\.?\\s?పూ\\.?|ప్ర\\.?\\s?శ\\.?\\s?పూ\\.?|క్రీ\\.?\\s?శ\\.?|సా\\.?\\s?శ\\.?)/i,\r\n  wide: /^(క్రీస్తు పూర్వం|ప్రస్తుత శకానికి పూర్వం|క్రీస్తు శకం|ప్రస్తుత శకం)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(పూ|శ)/i, /^సా/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^త్రై[1234]/i,\r\n  wide: /^[1234](వ)? త్రైమాసికం/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(జూ|జు|జ|ఫి|మా|ఏ|మే|ఆ|సె|అ|న|డి)/i,\r\n  abbreviated: /^(జన|ఫిబ్ర|మార్చి|ఏప్రి|మే|జూన్|జులై|ఆగ|సెప్|అక్టో|నవ|డిసె)/i,\r\n  wide: /^(జనవరి|ఫిబ్రవరి|మార్చి|ఏప్రిల్|మే|జూన్|జులై|ఆగస్టు|సెప్టెంబర్|అక్టోబర్|నవంబర్|డిసెంబర్)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^జ/i,\r\n    /^ఫి/i,\r\n    /^మా/i,\r\n    /^ఏ/i,\r\n    /^మే/i,\r\n    /^జూ/i,\r\n    /^జు/i,\r\n    /^ఆ/i,\r\n    /^సె/i,\r\n    /^అ/i,\r\n    /^న/i,\r\n    /^డి/i,\r\n  ],\r\n\r\n  any: [\r\n    /^జన/i,\r\n    /^ఫి/i,\r\n    /^మా/i,\r\n    /^ఏ/i,\r\n    /^మే/i,\r\n    /^జూన్/i,\r\n    /^జులై/i,\r\n    /^ఆగ/i,\r\n    /^సె/i,\r\n    /^అ/i,\r\n    /^న/i,\r\n    /^డి/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(ఆ|సో|మ|బు|గు|శు|శ)/i,\r\n  short: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,\r\n  abbreviated: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i,\r\n  wide: /^(ఆదివారం|సోమవారం|మంగళవారం|బుధవారం|గురువారం|శుక్రవారం|శనివారం)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ఆ/i, /^సో/i, /^మ/i, /^బు/i, /^గు/i, /^శు/i, /^శ/i],\r\n  any: [/^ఆది/i, /^సోమ/i, /^మం/i, /^బుధ/i, /^గురు/i, /^శుక్ర/i, /^శని/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow:\r\n    /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i,\r\n  any: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^పూర్వాహ్నం/i,\r\n    pm: /^అపరాహ్నం/i,\r\n    midnight: /^అర్ధ/i,\r\n    noon: /^మిట్ట/i,\r\n    morning: /ఉదయం/i,\r\n    afternoon: /మధ్యాహ్నం/i,\r\n    evening: /సాయంత్రం/i,\r\n    night: /రాత్రి/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./te/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./te/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./te/_lib/formatRelative.js\";\r\nimport { localize } from \"./te/_lib/localize.js\";\r\nimport { match } from \"./te/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Telugu locale\r\n * @language Telugu\r\n * @iso-639-2 tel\r\n * @author Kranthi Lakum [@kranthilakum](https://github.com/kranthilakum)\r\n */\r\nexport const te = {\r\n  code: \"te\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default te;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"น้อยกว่า 1 วินาที\",\r\n    other: \"น้อยกว่า {{count}} วินาที\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 วินาที\",\r\n    other: \"{{count}} วินาที\",\r\n  },\r\n\r\n  halfAMinute: \"ครึ่งนาที\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"น้อยกว่า 1 นาที\",\r\n    other: \"น้อยกว่า {{count}} นาที\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 นาที\",\r\n    other: \"{{count}} นาที\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"ประมาณ 1 ชั่วโมง\",\r\n    other: \"ประมาณ {{count}} ชั่วโมง\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 ชั่วโมง\",\r\n    other: \"{{count}} ชั่วโมง\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 วัน\",\r\n    other: \"{{count}} วัน\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"ประมาณ 1 สัปดาห์\",\r\n    other: \"ประมาณ {{count}} สัปดาห์\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 สัปดาห์\",\r\n    other: \"{{count}} สัปดาห์\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"ประมาณ 1 เดือน\",\r\n    other: \"ประมาณ {{count}} เดือน\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 เดือน\",\r\n    other: \"{{count}} เดือน\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"ประมาณ 1 ปี\",\r\n    other: \"ประมาณ {{count}} ปี\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 ปี\",\r\n    other: \"{{count}} ปี\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"มากกว่า 1 ปี\",\r\n    other: \"มากกว่า {{count}} ปี\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"เกือบ 1 ปี\",\r\n    other: \"เกือบ {{count}} ปี\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      if (token === \"halfAMinute\") {\r\n        return \"ใน\" + result;\r\n      } else {\r\n        return \"ใน \" + result;\r\n      }\r\n    } else {\r\n      return result + \"ที่ผ่านมา\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"วันEEEEที่ do MMMM y\",\r\n  long: \"do MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss น. zzzz\",\r\n  long: \"H:mm:ss น. z\",\r\n  medium: \"H:mm:ss น.\",\r\n  short: \"H:mm น.\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'เวลา' {{time}}\",\r\n  long: \"{{date}} 'เวลา' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"medium\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee'ที่แล้วเวลา' p\",\r\n  yesterday: \"'เมื่อวานนี้เวลา' p\",\r\n  today: \"'วันนี้เวลา' p\",\r\n  tomorrow: \"'พรุ่งนี้เวลา' p\",\r\n  nextWeek: \"eeee 'เวลา' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"B\", \"คศ\"],\r\n  abbreviated: [\"BC\", \"ค.ศ.\"],\r\n  wide: [\"ปีก่อนคริสตกาล\", \"คริสต์ศักราช\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"ไตรมาสแรก\", \"ไตรมาสที่สอง\", \"ไตรมาสที่สาม\", \"ไตรมาสที่สี่\"],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"อา.\", \"จ.\", \"อ.\", \"พ.\", \"พฤ.\", \"ศ.\", \"ส.\"],\r\n  short: [\"อา.\", \"จ.\", \"อ.\", \"พ.\", \"พฤ.\", \"ศ.\", \"ส.\"],\r\n  abbreviated: [\"อา.\", \"จ.\", \"อ.\", \"พ.\", \"พฤ.\", \"ศ.\", \"ส.\"],\r\n  wide: [\"อาทิตย์\", \"จันทร์\", \"อังคาร\", \"พุธ\", \"พฤหัสบดี\", \"ศุกร์\", \"เสาร์\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"ม.ค.\",\r\n    \"ก.พ.\",\r\n    \"มี.ค.\",\r\n    \"เม.ย.\",\r\n    \"พ.ค.\",\r\n    \"มิ.ย.\",\r\n    \"ก.ค.\",\r\n    \"ส.ค.\",\r\n    \"ก.ย.\",\r\n    \"ต.ค.\",\r\n    \"พ.ย.\",\r\n    \"ธ.ค.\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"ม.ค.\",\r\n    \"ก.พ.\",\r\n    \"มี.ค.\",\r\n    \"เม.ย.\",\r\n    \"พ.ค.\",\r\n    \"มิ.ย.\",\r\n    \"ก.ค.\",\r\n    \"ส.ค.\",\r\n    \"ก.ย.\",\r\n    \"ต.ค.\",\r\n    \"พ.ย.\",\r\n    \"ธ.ค.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"มกราคม\",\r\n    \"กุมภาพันธ์\",\r\n    \"มีนาคม\",\r\n    \"เมษายน\",\r\n    \"พฤษภาคม\",\r\n    \"มิถุนายน\",\r\n    \"กรกฎาคม\",\r\n    \"สิงหาคม\",\r\n    \"กันยายน\",\r\n    \"ตุลาคม\",\r\n    \"พฤศจิกายน\",\r\n    \"ธันวาคม\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"เช้า\",\r\n    afternoon: \"บ่าย\",\r\n    evening: \"เย็น\",\r\n    night: \"กลางคืน\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"เช้า\",\r\n    afternoon: \"บ่าย\",\r\n    evening: \"เย็น\",\r\n    night: \"กลางคืน\",\r\n  },\r\n  wide: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"เช้า\",\r\n    afternoon: \"บ่าย\",\r\n    evening: \"เย็น\",\r\n    night: \"กลางคืน\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"ตอนเช้า\",\r\n    afternoon: \"ตอนกลางวัน\",\r\n    evening: \"ตอนเย็น\",\r\n    night: \"ตอนกลางคืน\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"ตอนเช้า\",\r\n    afternoon: \"ตอนกลางวัน\",\r\n    evening: \"ตอนเย็น\",\r\n    night: \"ตอนกลางคืน\",\r\n  },\r\n  wide: {\r\n    am: \"ก่อนเที่ยง\",\r\n    pm: \"หลังเที่ยง\",\r\n    midnight: \"เที่ยงคืน\",\r\n    noon: \"เที่ยง\",\r\n    morning: \"ตอนเช้า\",\r\n    afternoon: \"ตอนกลางวัน\",\r\n    evening: \"ตอนเย็น\",\r\n    night: \"ตอนกลางคืน\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^\\d+/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^([bB]|[aA]|คศ)/i,\r\n  abbreviated:\r\n    /^([bB]\\.?\\s?[cC]\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?|ค\\.?ศ\\.?)/i,\r\n  wide: /^(ก่อนคริสตกาล|คริสต์ศักราช|คริสตกาล)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^[bB]/i, /^(^[aA]|ค\\.?ศ\\.?|คริสตกาล|คริสต์ศักราช|)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^ไตรมาส(ที่)? ?[1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|แรก|หนึ่ง)/i, /(2|สอง)/i, /(3|สาม)/i, /(4|สี่)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow:\r\n    /^(ม\\.?ค\\.?|ก\\.?พ\\.?|มี\\.?ค\\.?|เม\\.?ย\\.?|พ\\.?ค\\.?|มิ\\.?ย\\.?|ก\\.?ค\\.?|ส\\.?ค\\.?|ก\\.?ย\\.?|ต\\.?ค\\.?|พ\\.?ย\\.?|ธ\\.?ค\\.?)/i,\r\n  abbreviated:\r\n    /^(ม\\.?ค\\.?|ก\\.?พ\\.?|มี\\.?ค\\.?|เม\\.?ย\\.?|พ\\.?ค\\.?|มิ\\.?ย\\.?|ก\\.?ค\\.?|ส\\.?ค\\.?|ก\\.?ย\\.?|ต\\.?ค\\.?|พ\\.?ย\\.?|ธ\\.?ค\\.?')/i,\r\n  wide: /^(มกราคม|กุมภาพันธ์|มีนาคม|เมษายน|พฤษภาคม|มิถุนายน|กรกฎาคม|สิงหาคม|กันยายน|ตุลาคม|พฤศจิกายน|ธันวาคม)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  wide: [\r\n    /^มก/i,\r\n    /^กุม/i,\r\n    /^มี/i,\r\n    /^เม/i,\r\n    /^พฤษ/i,\r\n    /^มิ/i,\r\n    /^กรก/i,\r\n    /^ส/i,\r\n    /^กัน/i,\r\n    /^ต/i,\r\n    /^พฤศ/i,\r\n    /^ธ/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ม\\.?ค\\.?/i,\r\n    /^ก\\.?พ\\.?/i,\r\n    /^มี\\.?ค\\.?/i,\r\n    /^เม\\.?ย\\.?/i,\r\n    /^พ\\.?ค\\.?/i,\r\n    /^มิ\\.?ย\\.?/i,\r\n    /^ก\\.?ค\\.?/i,\r\n    /^ส\\.?ค\\.?/i,\r\n    /^ก\\.?ย\\.?/i,\r\n    /^ต\\.?ค\\.?/i,\r\n    /^พ\\.?ย\\.?/i,\r\n    /^ธ\\.?ค\\.?/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(อา\\.?|จ\\.?|อ\\.?|พฤ\\.?|พ\\.?|ศ\\.?|ส\\.?)/i,\r\n  short: /^(อา\\.?|จ\\.?|อ\\.?|พฤ\\.?|พ\\.?|ศ\\.?|ส\\.?)/i,\r\n  abbreviated: /^(อา\\.?|จ\\.?|อ\\.?|พฤ\\.?|พ\\.?|ศ\\.?|ส\\.?)/i,\r\n  wide: /^(อาทิตย์|จันทร์|อังคาร|พุธ|พฤหัสบดี|ศุกร์|เสาร์)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  wide: [/^อา/i, /^จั/i, /^อั/i, /^พุธ/i, /^พฤ/i, /^ศ/i, /^เส/i],\r\n  any: [/^อา/i, /^จ/i, /^อ/i, /^พ(?!ฤ)/i, /^พฤ/i, /^ศ/i, /^ส/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(ก่อนเที่ยง|หลังเที่ยง|เที่ยงคืน|เที่ยง|(ตอน.*?)?.*(เที่ยง|เช้า|บ่าย|เย็น|กลางคืน))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ก่อนเที่ยง/i,\r\n    pm: /^หลังเที่ยง/i,\r\n    midnight: /^เที่ยงคืน/i,\r\n    noon: /^เที่ยง/i,\r\n    morning: /เช้า/i,\r\n    afternoon: /บ่าย/i,\r\n    evening: /เย็น/i,\r\n    night: /กลางคืน/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./th/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./th/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./th/_lib/formatRelative.js\";\r\nimport { localize } from \"./th/_lib/localize.js\";\r\nimport { match } from \"./th/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Thai locale.\r\n * @language Thai\r\n * @iso-639-2 tha\r\n * @author Athiwat Hirunworawongkun [@athivvat](https://github.com/athivvat)\r\n * @author [@hawkup](https://github.com/hawkup)\r\n * @author  Jirawat I. [@nodtem66](https://github.com/nodtem66)\r\n */\r\nexport const th = {\r\n  code: \"th\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default th;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"bir saniyeden az\",\r\n    other: \"{{count}} saniyeden az\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 saniye\",\r\n    other: \"{{count}} saniye\",\r\n  },\r\n\r\n  halfAMinute: \"yarım dakika\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"bir dakikadan az\",\r\n    other: \"{{count}} dakikadan az\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 dakika\",\r\n    other: \"{{count}} dakika\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"yaklaşık 1 saat\",\r\n    other: \"yaklaşık {{count}} saat\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 saat\",\r\n    other: \"{{count}} saat\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 gün\",\r\n    other: \"{{count}} gün\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"yaklaşık 1 hafta\",\r\n    other: \"yaklaşık {{count}} hafta\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 hafta\",\r\n    other: \"{{count}} hafta\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"yaklaşık 1 ay\",\r\n    other: \"yaklaşık {{count}} ay\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 ay\",\r\n    other: \"{{count}} ay\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"yaklaşık 1 yıl\",\r\n    other: \"yaklaşık {{count}} yıl\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 yıl\",\r\n    other: \"{{count}} yıl\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 yıldan fazla\",\r\n    other: \"{{count}} yıldan fazla\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"neredeyse 1 yıl\",\r\n    other: \"neredeyse {{count}} yıl\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" sonra\";\r\n    } else {\r\n      return result + \" önce\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"d MMMM y EEEE\",\r\n  long: \"d MMMM y\",\r\n  medium: \"d MMM y\",\r\n  short: \"dd.MM.yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'saat' {{time}}\",\r\n  long: \"{{date}} 'saat' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'geçen hafta' eeee 'saat' p\",\r\n  yesterday: \"'dün saat' p\",\r\n  today: \"'bugün saat' p\",\r\n  tomorrow: \"'yarın saat' p\",\r\n  nextWeek: \"eeee 'saat' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"MÖ\", \"MS\"],\r\n  abbreviated: [\"MÖ\", \"MS\"],\r\n  wide: [\"Milattan Önce\", \"Milattan Sonra\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1Ç\", \"2Ç\", \"3Ç\", \"4Ç\"],\r\n  wide: [\"İlk çeyrek\", \"İkinci Çeyrek\", \"Üçüncü çeyrek\", \"Son çeyrek\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"O\", \"Ş\", \"M\", \"N\", \"M\", \"H\", \"T\", \"A\", \"E\", \"E\", \"K\", \"A\"],\r\n  abbreviated: [\r\n    \"Oca\",\r\n    \"Şub\",\r\n    \"Mar\",\r\n    \"Nis\",\r\n    \"May\",\r\n    \"Haz\",\r\n    \"Tem\",\r\n    \"Ağu\",\r\n    \"Eyl\",\r\n    \"Eki\",\r\n    \"Kas\",\r\n    \"Ara\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Ocak\",\r\n    \"Şubat\",\r\n    \"Mart\",\r\n    \"Nisan\",\r\n    \"Mayıs\",\r\n    \"Haziran\",\r\n    \"Temmuz\",\r\n    \"Ağustos\",\r\n    \"Eylül\",\r\n    \"Ekim\",\r\n    \"Kasım\",\r\n    \"Aralık\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"P\", \"P\", \"S\", \"Ç\", \"P\", \"C\", \"C\"],\r\n  short: [\"Pz\", \"Pt\", \"Sa\", \"Ça\", \"Pe\", \"Cu\", \"Ct\"],\r\n  abbreviated: [\"Paz\", \"Pzt\", \"Sal\", \"Çar\", \"Per\", \"Cum\", \"Cts\"],\r\n  wide: [\r\n    \"Pazar\",\r\n    \"Pazartesi\",\r\n    \"Salı\",\r\n    \"Çarşamba\",\r\n    \"Perşembe\",\r\n    \"Cuma\",\r\n    \"Cumartesi\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"öö\",\r\n    pm: \"ös\",\r\n    midnight: \"gy\",\r\n    noon: \"ö\",\r\n    morning: \"sa\",\r\n    afternoon: \"ös\",\r\n    evening: \"ak\",\r\n    night: \"ge\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ÖÖ\",\r\n    pm: \"ÖS\",\r\n    midnight: \"gece yarısı\",\r\n    noon: \"öğle\",\r\n    morning: \"sabah\",\r\n    afternoon: \"öğleden sonra\",\r\n    evening: \"akşam\",\r\n    night: \"gece\",\r\n  },\r\n  wide: {\r\n    am: \"Ö.Ö.\",\r\n    pm: \"Ö.S.\",\r\n    midnight: \"gece yarısı\",\r\n    noon: \"öğle\",\r\n    morning: \"sabah\",\r\n    afternoon: \"öğleden sonra\",\r\n    evening: \"akşam\",\r\n    night: \"gece\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"öö\",\r\n    pm: \"ös\",\r\n    midnight: \"gy\",\r\n    noon: \"ö\",\r\n    morning: \"sa\",\r\n    afternoon: \"ös\",\r\n    evening: \"ak\",\r\n    night: \"ge\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ÖÖ\",\r\n    pm: \"ÖS\",\r\n    midnight: \"gece yarısı\",\r\n    noon: \"öğlen\",\r\n    morning: \"sabahleyin\",\r\n    afternoon: \"öğleden sonra\",\r\n    evening: \"akşamleyin\",\r\n    night: \"geceleyin\",\r\n  },\r\n  wide: {\r\n    am: \"ö.ö.\",\r\n    pm: \"ö.s.\",\r\n    midnight: \"gece yarısı\",\r\n    noon: \"öğlen\",\r\n    morning: \"sabahleyin\",\r\n    afternoon: \"öğleden sonra\",\r\n    evening: \"akşamleyin\",\r\n    night: \"geceleyin\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  const number = Number(dirtyNumber);\r\n  return number + \".\";\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => Number(quarter) - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(mö|ms)/i,\r\n  abbreviated: /^(mö|ms)/i,\r\n  wide: /^(milattan önce|milattan sonra)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/(^mö|^milattan önce)/i, /(^ms|^milattan sonra)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]ç/i,\r\n  wide: /^((i|İ)lk|(i|İ)kinci|üçüncü|son) çeyrek/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n  abbreviated: [/1ç/i, /2ç/i, /3ç/i, /4ç/i],\r\n  wide: [\r\n    /^(i|İ)lk çeyrek/i,\r\n    /(i|İ)kinci çeyrek/i,\r\n    /üçüncü çeyrek/i,\r\n    /son çeyrek/i,\r\n  ],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[oşmnhtaek]/i,\r\n  abbreviated: /^(oca|şub|mar|nis|may|haz|tem|ağu|eyl|eki|kas|ara)/i,\r\n  wide: /^(ocak|şubat|mart|nisan|mayıs|haziran|temmuz|ağustos|eylül|ekim|kasım|aralık)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^o/i,\r\n    /^ş/i,\r\n    /^m/i,\r\n    /^n/i,\r\n    /^m/i,\r\n    /^h/i,\r\n    /^t/i,\r\n    /^a/i,\r\n    /^e/i,\r\n    /^e/i,\r\n    /^k/i,\r\n    /^a/i,\r\n  ],\r\n\r\n  any: [\r\n    /^o/i,\r\n    /^ş/i,\r\n    /^mar/i,\r\n    /^n/i,\r\n    /^may/i,\r\n    /^h/i,\r\n    /^t/i,\r\n    /^ağ/i,\r\n    /^ey/i,\r\n    /^ek/i,\r\n    /^k/i,\r\n    /^ar/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[psçc]/i,\r\n  short: /^(pz|pt|sa|ça|pe|cu|ct)/i,\r\n  abbreviated: /^(paz|pzt|sal|çar|per|cum|cts)/i,\r\n  wide: /^(pazar(?!tesi)|pazartesi|salı|çarşamba|perşembe|cuma(?!rtesi)|cumartesi)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^p/i, /^p/i, /^s/i, /^ç/i, /^p/i, /^c/i, /^c/i],\r\n  any: [/^pz/i, /^pt/i, /^sa/i, /^ça/i, /^pe/i, /^cu/i, /^ct/i],\r\n  wide: [\r\n    /^pazar(?!tesi)/i,\r\n    /^pazartesi/i,\r\n    /^salı/i,\r\n    /^çarşamba/i,\r\n    /^perşembe/i,\r\n    /^cuma(?!rtesi)/i,\r\n    /^cumartesi/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(öö|ös|gy|ö|sa|ös|ak|ge)/i,\r\n  any: /^(ö\\.?\\s?[ös]\\.?|öğleden sonra|gece yarısı|öğle|(sabah|öğ|akşam|gece)(leyin))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ö\\.?ö\\.?/i,\r\n    pm: /^ö\\.?s\\.?/i,\r\n    midnight: /^(gy|gece yarısı)/i,\r\n    noon: /^öğ/i,\r\n    morning: /^sa/i,\r\n    afternoon: /^öğleden sonra/i,\r\n    evening: /^ak/i,\r\n    night: /^ge/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: function (value) {\r\n      return parseInt(value, 10);\r\n    },\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./tr/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./tr/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./tr/_lib/formatRelative.js\";\r\nimport { localize } from \"./tr/_lib/localize.js\";\r\nimport { match } from \"./tr/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Turkish locale.\r\n * @language Turkish\r\n * @iso-639-2 tur\r\n * @author Alpcan Aydın [@alpcanaydin](https://github.com/alpcanaydin)\r\n * @author Berkay Sargın [@berkaey](https://github.com/berkaey)\r\n * @author Fatih Bulut [@bulutfatih](https://github.com/bulutfatih)\r\n * @author Ismail Demirbilek [@dbtek](https://github.com/dbtek)\r\n * @author İsmail Kayar [@ikayar](https://github.com/ikayar)\r\n *\r\n *\r\n */\r\nexport const tr = {\r\n  code: \"tr\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default tr;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"بىر سىكۇنت ئىچىدە\",\r\n    other: \"سىكۇنت ئىچىدە {{count}}\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"بىر سىكۇنت\",\r\n    other: \"سىكۇنت {{count}}\",\r\n  },\r\n\r\n  halfAMinute: \"يىرىم مىنۇت\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"بىر مىنۇت ئىچىدە\",\r\n    other: \"مىنۇت ئىچىدە {{count}}\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"بىر مىنۇت\",\r\n    other: \"مىنۇت {{count}}\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"تەخمىنەن بىر سائەت\",\r\n    other: \"سائەت {{count}} تەخمىنەن\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"بىر سائەت\",\r\n    other: \"سائەت {{count}}\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"بىر كۈن\",\r\n    other: \"كۈن {{count}}\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"تەخمىنەن بىرھەپتە\",\r\n    other: \"ھەپتە {{count}} تەخمىنەن\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"بىرھەپتە\",\r\n    other: \"ھەپتە {{count}}\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"تەخمىنەن بىر ئاي\",\r\n    other: \"ئاي {{count}} تەخمىنەن\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"بىر ئاي\",\r\n    other: \"ئاي {{count}}\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"تەخمىنەن بىر يىل\",\r\n    other: \"يىل {{count}} تەخمىنەن\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"بىر يىل\",\r\n    other: \"يىل {{count}}\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"بىر يىلدىن ئارتۇق\",\r\n    other: \"يىلدىن ئارتۇق {{count}}\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"ئاساسەن بىر يىل\",\r\n    other: \"يىل {{count}} ئاساسەن\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result;\r\n    } else {\r\n      return result + \" بولدى\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, MMMM do, y\",\r\n  long: \"MMMM do, y\",\r\n  medium: \"MMM d, y\",\r\n  short: \"MM/dd/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss a zzzz\",\r\n  long: \"h:mm:ss a z\",\r\n  medium: \"h:mm:ss a\",\r\n  short: \"h:mm a\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'دە' {{time}}\",\r\n  long: \"{{date}} 'دە' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ئ‍ۆتكەن' eeee 'دە' p\",\r\n  yesterday: \"'تۈنۈگۈن دە' p\",\r\n  today: \"'بۈگۈن دە' p\",\r\n  tomorrow: \"'ئەتە دە' p\",\r\n  nextWeek: \"eeee 'دە' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"ب\", \"ك\"],\r\n  abbreviated: [\"ب\", \"ك\"],\r\n  wide: [\"مىيلادىدىن بۇرۇن\", \"مىيلادىدىن كىيىن\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1\", \"2\", \"3\", \"4\"],\r\n  wide: [\"بىرىنجى چارەك\", \"ئىككىنجى چارەك\", \"ئۈچىنجى چارەك\", \"تۆتىنجى چارەك\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"ي\", \"ف\", \"م\", \"ا\", \"م\", \"ى\", \"ى\", \"ا\", \"س\", \"ۆ\", \"ن\", \"د\"],\r\n  abbreviated: [\r\n    \"يانۋار\",\r\n    \"فېۋىرال\",\r\n    \"مارت\",\r\n    \"ئاپرىل\",\r\n    \"ماي\",\r\n    \"ئىيۇن\",\r\n    \"ئىيول\",\r\n    \"ئاۋغۇست\",\r\n    \"سىنتەبىر\",\r\n    \"ئۆكتەبىر\",\r\n    \"نويابىر\",\r\n    \"دىكابىر\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يانۋار\",\r\n    \"فېۋىرال\",\r\n    \"مارت\",\r\n    \"ئاپرىل\",\r\n    \"ماي\",\r\n    \"ئىيۇن\",\r\n    \"ئىيول\",\r\n    \"ئاۋغۇست\",\r\n    \"سىنتەبىر\",\r\n    \"ئۆكتەبىر\",\r\n    \"نويابىر\",\r\n    \"دىكابىر\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"ي\", \"د\", \"س\", \"چ\", \"پ\", \"ج\", \"ش\"],\r\n  short: [\"ي\", \"د\", \"س\", \"چ\", \"پ\", \"ج\", \"ش\"],\r\n  abbreviated: [\r\n    \"يەكشەنبە\",\r\n    \"دۈشەنبە\",\r\n    \"سەيشەنبە\",\r\n    \"چارشەنبە\",\r\n    \"پەيشەنبە\",\r\n    \"جۈمە\",\r\n    \"شەنبە\",\r\n  ],\r\n\r\n  wide: [\r\n    \"يەكشەنبە\",\r\n    \"دۈشەنبە\",\r\n    \"سەيشەنبە\",\r\n    \"چارشەنبە\",\r\n    \"پەيشەنبە\",\r\n    \"جۈمە\",\r\n    \"شەنبە\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەن\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشىم\",\r\n    night: \"كىچە\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەن\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشىم\",\r\n    night: \"كىچە\",\r\n  },\r\n  wide: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەن\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشىم\",\r\n    night: \"كىچە\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەندە\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشامدا\",\r\n    night: \"كىچىدە\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەندە\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشامدا\",\r\n    night: \"كىچىدە\",\r\n  },\r\n  wide: {\r\n    am: \"ئە\",\r\n    pm: \"چ\",\r\n    midnight: \"ك\",\r\n    noon: \"چ\",\r\n    morning: \"ئەتىگەندە\",\r\n    afternoon: \"چۈشتىن كىيىن\",\r\n    evening: \"ئاخشامدا\",\r\n    night: \"كىچىدە\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(ب|ك)/i,\r\n  wide: /^(مىيلادىدىن بۇرۇن|مىيلادىدىن كىيىن)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^بۇرۇن/i, /^كىيىن/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^چ[1234]/i,\r\n  wide: /^چارەك [1234]/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  // eslint-disable-next-line no-misleading-character-class\r\n  narrow: /^[يفمئامئ‍ئاسۆند]/i,\r\n  abbreviated:\r\n    /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i,\r\n  wide: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^ي/i,\r\n    /^ف/i,\r\n    /^م/i,\r\n    /^ا/i,\r\n    /^م/i,\r\n    /^ى‍/i,\r\n    /^ى‍/i,\r\n    /^ا‍/i,\r\n    /^س/i,\r\n    /^ۆ/i,\r\n    /^ن/i,\r\n    /^د/i,\r\n  ],\r\n\r\n  any: [\r\n    /^يان/i,\r\n    /^فېۋ/i,\r\n    /^مار/i,\r\n    /^ئاپ/i,\r\n    /^ماي/i,\r\n    /^ئىيۇن/i,\r\n    /^ئىيول/i,\r\n    /^ئاۋ/i,\r\n    /^سىن/i,\r\n    /^ئۆك/i,\r\n    /^نوي/i,\r\n    /^دىك/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[دسچپجشي]/i,\r\n  short: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,\r\n  abbreviated: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i,\r\n  wide: /^(يەكشەنبە|دۈشەنبە|سەيشەنبە|چارشەنبە|پەيشەنبە|جۈمە|شەنبە)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],\r\n  any: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i,\r\n  any: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^ئە/i,\r\n    pm: /^چ/i,\r\n    midnight: /^ك/i,\r\n    noon: /^چ/i,\r\n    morning: /ئەتىگەن/i,\r\n    afternoon: /چۈشتىن كىيىن/i,\r\n    evening: /ئاخشىم/i,\r\n    night: /كىچە/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./ug/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./ug/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./ug/_lib/formatRelative.js\";\r\nimport { localize } from \"./ug/_lib/localize.js\";\r\nimport { match } from \"./ug/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Uighur locale\r\n * @language Uighur\r\n * @iso-639-2 uig\r\n * @author Abduwaly M. [@abduwaly](https://github.com/abduwaly)\r\n */\r\nexport const ug = {\r\n  code: \"ug\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default ug;\r\n", "function declension(scheme, count) {\r\n  // scheme for count=1 exists\r\n  if (scheme.one !== undefined && count === 1) {\r\n    return scheme.one;\r\n  }\r\n\r\n  const rem10 = count % 10;\r\n  const rem100 = count % 100;\r\n\r\n  // 1, 21, 31, ...\r\n  if (rem10 === 1 && rem100 !== 11) {\r\n    return scheme.singularNominative.replace(\"{{count}}\", String(count));\r\n\r\n    // 2, 3, 4, 22, 23, 24, 32 ...\r\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\r\n    return scheme.singularGenitive.replace(\"{{count}}\", String(count));\r\n\r\n    // 5, 6, 7, 8, 9, 10, 11, ...\r\n  } else {\r\n    return scheme.pluralGenitive.replace(\"{{count}}\", String(count));\r\n  }\r\n}\r\n\r\nfunction buildLocalizeTokenFn(scheme) {\r\n  return (count, options) => {\r\n    if (options && options.addSuffix) {\r\n      if (options.comparison && options.comparison > 0) {\r\n        if (scheme.future) {\r\n          return declension(scheme.future, count);\r\n        } else {\r\n          return \"за \" + declension(scheme.regular, count);\r\n        }\r\n      } else {\r\n        if (scheme.past) {\r\n          return declension(scheme.past, count);\r\n        } else {\r\n          return declension(scheme.regular, count) + \" тому\";\r\n        }\r\n      }\r\n    } else {\r\n      return declension(scheme.regular, count);\r\n    }\r\n  };\r\n}\r\n\r\nconst halfAtMinute = (_, options) => {\r\n  if (options && options.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return \"за півхвилини\";\r\n    } else {\r\n      return \"півхвилини тому\";\r\n    }\r\n  }\r\n\r\n  return \"півхвилини\";\r\n};\r\n\r\nconst formatDistanceLocale = {\r\n  lessThanXSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менше секунди\",\r\n      singularNominative: \"менше {{count}} секунди\",\r\n      singularGenitive: \"менше {{count}} секунд\",\r\n      pluralGenitive: \"менше {{count}} секунд\",\r\n    },\r\n    future: {\r\n      one: \"менше, ніж за секунду\",\r\n      singularNominative: \"менше, ніж за {{count}} секунду\",\r\n      singularGenitive: \"менше, ніж за {{count}} секунди\",\r\n      pluralGenitive: \"менше, ніж за {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  xSeconds: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} секунда\",\r\n      singularGenitive: \"{{count}} секунди\",\r\n      pluralGenitive: \"{{count}} секунд\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} секунду тому\",\r\n      singularGenitive: \"{{count}} секунди тому\",\r\n      pluralGenitive: \"{{count}} секунд тому\",\r\n    },\r\n    future: {\r\n      singularNominative: \"за {{count}} секунду\",\r\n      singularGenitive: \"за {{count}} секунди\",\r\n      pluralGenitive: \"за {{count}} секунд\",\r\n    },\r\n  }),\r\n\r\n  halfAMinute: halfAtMinute,\r\n\r\n  lessThanXMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      one: \"менше хвилини\",\r\n      singularNominative: \"менше {{count}} хвилини\",\r\n      singularGenitive: \"менше {{count}} хвилин\",\r\n      pluralGenitive: \"менше {{count}} хвилин\",\r\n    },\r\n    future: {\r\n      one: \"менше, ніж за хвилину\",\r\n      singularNominative: \"менше, ніж за {{count}} хвилину\",\r\n      singularGenitive: \"менше, ніж за {{count}} хвилини\",\r\n      pluralGenitive: \"менше, ніж за {{count}} хвилин\",\r\n    },\r\n  }),\r\n\r\n  xMinutes: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} хвилина\",\r\n      singularGenitive: \"{{count}} хвилини\",\r\n      pluralGenitive: \"{{count}} хвилин\",\r\n    },\r\n    past: {\r\n      singularNominative: \"{{count}} хвилину тому\",\r\n      singularGenitive: \"{{count}} хвилини тому\",\r\n      pluralGenitive: \"{{count}} хвилин тому\",\r\n    },\r\n    future: {\r\n      singularNominative: \"за {{count}} хвилину\",\r\n      singularGenitive: \"за {{count}} хвилини\",\r\n      pluralGenitive: \"за {{count}} хвилин\",\r\n    },\r\n  }),\r\n\r\n  aboutXHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"близько {{count}} години\",\r\n      singularGenitive: \"близько {{count}} годин\",\r\n      pluralGenitive: \"близько {{count}} годин\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизно за {{count}} годину\",\r\n      singularGenitive: \"приблизно за {{count}} години\",\r\n      pluralGenitive: \"приблизно за {{count}} годин\",\r\n    },\r\n  }),\r\n\r\n  xHours: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} годину\",\r\n      singularGenitive: \"{{count}} години\",\r\n      pluralGenitive: \"{{count}} годин\",\r\n    },\r\n  }),\r\n\r\n  xDays: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} день\",\r\n      singularGenitive: \"{{count}} днi\",\r\n      pluralGenitive: \"{{count}} днів\",\r\n    },\r\n  }),\r\n\r\n  aboutXWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"близько {{count}} тижня\",\r\n      singularGenitive: \"близько {{count}} тижнів\",\r\n      pluralGenitive: \"близько {{count}} тижнів\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизно за {{count}} тиждень\",\r\n      singularGenitive: \"приблизно за {{count}} тижні\",\r\n      pluralGenitive: \"приблизно за {{count}} тижнів\",\r\n    },\r\n  }),\r\n\r\n  xWeeks: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} тиждень\",\r\n      singularGenitive: \"{{count}} тижні\",\r\n      pluralGenitive: \"{{count}} тижнів\",\r\n    },\r\n  }),\r\n\r\n  aboutXMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"близько {{count}} місяця\",\r\n      singularGenitive: \"близько {{count}} місяців\",\r\n      pluralGenitive: \"близько {{count}} місяців\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизно за {{count}} місяць\",\r\n      singularGenitive: \"приблизно за {{count}} місяці\",\r\n      pluralGenitive: \"приблизно за {{count}} місяців\",\r\n    },\r\n  }),\r\n\r\n  xMonths: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} місяць\",\r\n      singularGenitive: \"{{count}} місяці\",\r\n      pluralGenitive: \"{{count}} місяців\",\r\n    },\r\n  }),\r\n\r\n  aboutXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"близько {{count}} року\",\r\n      singularGenitive: \"близько {{count}} років\",\r\n      pluralGenitive: \"близько {{count}} років\",\r\n    },\r\n    future: {\r\n      singularNominative: \"приблизно за {{count}} рік\",\r\n      singularGenitive: \"приблизно за {{count}} роки\",\r\n      pluralGenitive: \"приблизно за {{count}} років\",\r\n    },\r\n  }),\r\n\r\n  xYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"{{count}} рік\",\r\n      singularGenitive: \"{{count}} роки\",\r\n      pluralGenitive: \"{{count}} років\",\r\n    },\r\n  }),\r\n\r\n  overXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"більше {{count}} року\",\r\n      singularGenitive: \"більше {{count}} років\",\r\n      pluralGenitive: \"більше {{count}} років\",\r\n    },\r\n    future: {\r\n      singularNominative: \"більше, ніж за {{count}} рік\",\r\n      singularGenitive: \"більше, ніж за {{count}} роки\",\r\n      pluralGenitive: \"більше, ніж за {{count}} років\",\r\n    },\r\n  }),\r\n\r\n  almostXYears: buildLocalizeTokenFn({\r\n    regular: {\r\n      singularNominative: \"майже {{count}} рік\",\r\n      singularGenitive: \"майже {{count}} роки\",\r\n      pluralGenitive: \"майже {{count}} років\",\r\n    },\r\n    future: {\r\n      singularNominative: \"майже за {{count}} рік\",\r\n      singularGenitive: \"майже за {{count}} роки\",\r\n      pluralGenitive: \"майже за {{count}} років\",\r\n    },\r\n  }),\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  options = options || {};\r\n\r\n  return formatDistanceLocale[token](count, options);\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM y 'р.'\",\r\n  long: \"do MMMM y 'р.'\",\r\n  medium: \"d MMM y 'р.'\",\r\n  short: \"dd.MM.y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} 'о' {{time}}\",\r\n  long: \"{{date}} 'о' {{time}}\",\r\n  medium: \"{{date}}, {{time}}\",\r\n  short: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\nimport { toDate } from \"../../../toDate.js\";\r\n\r\nconst accusativeWeekdays = [\r\n  \"неділю\",\r\n  \"понеділок\",\r\n  \"вівторок\",\r\n  \"середу\",\r\n  \"четвер\",\r\n  \"п’ятницю\",\r\n  \"суботу\",\r\n];\r\n\r\nfunction lastWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у минулу \" + weekday + \" о' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у минулий \" + weekday + \" о' p\";\r\n  }\r\n}\r\n\r\nfunction thisWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  return \"'у \" + weekday + \" о' p\";\r\n}\r\n\r\nfunction nextWeek(day) {\r\n  const weekday = accusativeWeekdays[day];\r\n\r\n  switch (day) {\r\n    case 0:\r\n    case 3:\r\n    case 5:\r\n    case 6:\r\n      return \"'у наступну \" + weekday + \" о' p\";\r\n    case 1:\r\n    case 2:\r\n    case 4:\r\n      return \"'у наступний \" + weekday + \" о' p\";\r\n  }\r\n}\r\n\r\nconst lastWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return lastWeek(day);\r\n  }\r\n};\r\n\r\nconst nextWeekFormat = (dirtyDate, baseDate, options) => {\r\n  const date = toDate(dirtyDate);\r\n  const day = date.getDay();\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return thisWeek(day);\r\n  } else {\r\n    return nextWeek(day);\r\n  }\r\n};\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: lastWeekFormat,\r\n  yesterday: \"'вчора о' p\",\r\n  today: \"'сьогодні о' p\",\r\n  tomorrow: \"'завтра о' p\",\r\n  nextWeek: nextWeekFormat,\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"до н.е.\", \"н.е.\"],\r\n  abbreviated: [\"до н. е.\", \"н. е.\"],\r\n  wide: [\"до нашої ери\", \"нашої ери\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-й кв.\", \"2-й кв.\", \"3-й кв.\", \"4-й кв.\"],\r\n  wide: [\"1-й квартал\", \"2-й квартал\", \"3-й квартал\", \"4-й квартал\"],\r\n};\r\n\r\nconst monthValues = {\r\n  // ДСТУ 3582:2013\r\n  narrow: [\"С\", \"Л\", \"Б\", \"К\", \"Т\", \"Ч\", \"Л\", \"С\", \"В\", \"Ж\", \"Л\", \"Г\"],\r\n  abbreviated: [\r\n    \"січ.\",\r\n    \"лют.\",\r\n    \"берез.\",\r\n    \"квіт.\",\r\n    \"трав.\",\r\n    \"черв.\",\r\n    \"лип.\",\r\n    \"серп.\",\r\n    \"верес.\",\r\n    \"жовт.\",\r\n    \"листоп.\",\r\n    \"груд.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"січень\",\r\n    \"лютий\",\r\n    \"березень\",\r\n    \"квітень\",\r\n    \"травень\",\r\n    \"червень\",\r\n    \"липень\",\r\n    \"серпень\",\r\n    \"вересень\",\r\n    \"жовтень\",\r\n    \"листопад\",\r\n    \"грудень\",\r\n  ],\r\n};\r\n\r\nconst formattingMonthValues = {\r\n  narrow: [\"С\", \"Л\", \"Б\", \"К\", \"Т\", \"Ч\", \"Л\", \"С\", \"В\", \"Ж\", \"Л\", \"Г\"],\r\n  abbreviated: [\r\n    \"січ.\",\r\n    \"лют.\",\r\n    \"берез.\",\r\n    \"квіт.\",\r\n    \"трав.\",\r\n    \"черв.\",\r\n    \"лип.\",\r\n    \"серп.\",\r\n    \"верес.\",\r\n    \"жовт.\",\r\n    \"листоп.\",\r\n    \"груд.\",\r\n  ],\r\n\r\n  wide: [\r\n    \"січня\",\r\n    \"лютого\",\r\n    \"березня\",\r\n    \"квітня\",\r\n    \"травня\",\r\n    \"червня\",\r\n    \"липня\",\r\n    \"серпня\",\r\n    \"вересня\",\r\n    \"жовтня\",\r\n    \"листопада\",\r\n    \"грудня\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Н\", \"П\", \"В\", \"С\", \"Ч\", \"П\", \"С\"],\r\n  short: [\"нд\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\"],\r\n  abbreviated: [\"нед\", \"пон\", \"вів\", \"сер\", \"чтв\", \"птн\", \"суб\"],\r\n  wide: [\r\n    \"неділя\",\r\n    \"понеділок\",\r\n    \"вівторок\",\r\n    \"середа\",\r\n    \"четвер\",\r\n    \"п’ятниця\",\r\n    \"субота\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"півн.\",\r\n    noon: \"пол.\",\r\n    morning: \"ранок\",\r\n    afternoon: \"день\",\r\n    evening: \"веч.\",\r\n    night: \"ніч\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"півн.\",\r\n    noon: \"пол.\",\r\n    morning: \"ранок\",\r\n    afternoon: \"день\",\r\n    evening: \"веч.\",\r\n    night: \"ніч\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"північ\",\r\n    noon: \"полудень\",\r\n    morning: \"ранок\",\r\n    afternoon: \"день\",\r\n    evening: \"вечір\",\r\n    night: \"ніч\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"півн.\",\r\n    noon: \"пол.\",\r\n    morning: \"ранку\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночі\",\r\n  },\r\n  abbreviated: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"півн.\",\r\n    noon: \"пол.\",\r\n    morning: \"ранку\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночі\",\r\n  },\r\n  wide: {\r\n    am: \"ДП\",\r\n    pm: \"ПП\",\r\n    midnight: \"північ\",\r\n    noon: \"полудень\",\r\n    morning: \"ранку\",\r\n    afternoon: \"дня\",\r\n    evening: \"веч.\",\r\n    night: \"ночі\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const unit = String(options?.unit);\r\n  const number = Number(dirtyNumber);\r\n  let suffix;\r\n\r\n  if (unit === \"date\") {\r\n    if (number === 3 || number === 23) {\r\n      suffix = \"-є\";\r\n    } else {\r\n      suffix = \"-е\";\r\n    }\r\n  } else if (unit === \"minute\" || unit === \"second\" || unit === \"hour\") {\r\n    suffix = \"-а\";\r\n  } else {\r\n    suffix = \"-й\";\r\n  }\r\n\r\n  return number + suffix;\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(-?(е|й|є|а|я))?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^((до )?н\\.?\\s?е\\.?)/i,\r\n  abbreviated: /^((до )?н\\.?\\s?е\\.?)/i,\r\n  wide: /^(до нашої ери|нашої ери|наша ера)/i,\r\n};\r\n\r\nconst parseEraPatterns = {\r\n  any: [/^д/i, /^н/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234](-?[иі]?й?)? кв.?/i,\r\n  wide: /^[1234](-?[иі]?й?)? квартал/i,\r\n};\r\n\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[слбктчвжг]/i,\r\n  abbreviated:\r\n    /^(січ|лют|бер(ез)?|квіт|трав|черв|лип|серп|вер(ес)?|жовт|лис(топ)?|груд)\\.?/i,\r\n  wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|червня|червень|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопад[а]?|грудень|грудня)/i,\r\n};\r\n\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^с/i,\r\n    /^л/i,\r\n    /^б/i,\r\n    /^к/i,\r\n    /^т/i,\r\n    /^ч/i,\r\n    /^л/i,\r\n    /^с/i,\r\n    /^в/i,\r\n    /^ж/i,\r\n    /^л/i,\r\n    /^г/i,\r\n  ],\r\n\r\n  any: [\r\n    /^сі/i,\r\n    /^лю/i,\r\n    /^б/i,\r\n    /^к/i,\r\n    /^т/i,\r\n    /^ч/i,\r\n    /^лип/i,\r\n    /^се/i,\r\n    /^в/i,\r\n    /^ж/i,\r\n    /^лис/i,\r\n    /^г/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[нпвсч]/i,\r\n  short: /^(нд|пн|вт|ср|чт|пт|сб)\\.?/i,\r\n  abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\\.?/i,\r\n  wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\\W*?ятниц[яі]|субот[аи])/i,\r\n};\r\n\r\nconst parseDayPatterns = {\r\n  narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\r\n  any: [/^н/i, /^п[он]/i, /^в/i, /^с[ер]/i, /^ч/i, /^п\\W*?[ят]/i, /^с[уб]/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\r\n  abbreviated: /^([дп]п|півн\\.?|пол\\.?|ранок|ранку|день|дня|веч\\.?|ніч|ночі)/i,\r\n  wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i,\r\n};\r\n\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^дп/i,\r\n    pm: /^пп/i,\r\n    midnight: /^півн/i,\r\n    noon: /^пол/i,\r\n    morning: /^р/i,\r\n    afternoon: /^д[ен]/i,\r\n    evening: /^в/i,\r\n    night: /^н/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./uk/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./uk/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./uk/_lib/formatRelative.js\";\r\nimport { localize } from \"./uk/_lib/localize.js\";\r\nimport { match } from \"./uk/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Ukrainian locale.\r\n * @language Ukrainian\r\n * @iso-639-2 ukr\r\n * @author Andrii Korzh [@korzhyk](https://github.com/korzhyk)\r\n * @author Andriy Shcherbyak [@shcherbyakdev](https://github.com/shcherbyakdev)\r\n */\r\nexport const uk = {\r\n  code: \"uk\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default uk;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"sekunddan kam\",\r\n    other: \"{{count}} sekunddan kam\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 sekund\",\r\n    other: \"{{count}} sekund\",\r\n  },\r\n\r\n  halfAMinute: \"yarim minut\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"bir minutdan kam\",\r\n    other: \"{{count}} minutdan kam\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 minut\",\r\n    other: \"{{count}} minut\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"tahminan 1 soat\",\r\n    other: \"tahminan {{count}} soat\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 soat\",\r\n    other: \"{{count}} soat\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 kun\",\r\n    other: \"{{count}} kun\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"tahminan 1 hafta\",\r\n    other: \"tahminan {{count}} hafta\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 hafta\",\r\n    other: \"{{count}} hafta\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"tahminan 1 oy\",\r\n    other: \"tahminan {{count}} oy\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 oy\",\r\n    other: \"{{count}} oy\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"tahminan 1 yil\",\r\n    other: \"tahminan {{count}} yil\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 yil\",\r\n    other: \"{{count}} yil\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 yildan ko'p\",\r\n    other: \"{{count}} yildan ko'p\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"deyarli 1 yil\",\r\n    other: \"deyarli {{count}} yil\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" dan keyin\";\r\n    } else {\r\n      return result + \" oldin\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM, y\",\r\n  long: \"do MMMM, y\",\r\n  medium: \"d MMM, y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"h:mm:ss zzzz\",\r\n  long: \"h:mm:ss z\",\r\n  medium: \"h:mm:ss\",\r\n  short: \"h:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'oldingi' eeee p 'da'\",\r\n  yesterday: \"'kecha' p 'da'\",\r\n  today: \"'bugun' p 'da'\",\r\n  tomorrow: \"'ertaga' p 'da'\",\r\n  nextWeek: \"eeee p 'da'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"M.A\", \"M.\"],\r\n  abbreviated: [\"M.A\", \"M.\"],\r\n  wide: [\"Miloddan Avvalgi\", \"Milodiy\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"CH.1\", \"CH.2\", \"CH.3\", \"CH.4\"],\r\n  wide: [\"1-chi chorak\", \"2-chi chorak\", \"3-chi chorak\", \"4-chi chorak\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"Y\", \"F\", \"M\", \"A\", \"M\", \"I\", \"I\", \"A\", \"S\", \"O\", \"N\", \"D\"],\r\n  abbreviated: [\r\n    \"Yan\",\r\n    \"Fev\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Iyun\",\r\n    \"Iyul\",\r\n    \"Avg\",\r\n    \"Sen\",\r\n    \"Okt\",\r\n    \"Noy\",\r\n    \"Dek\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Yanvar\",\r\n    \"Fevral\",\r\n    \"Mart\",\r\n    \"Aprel\",\r\n    \"May\",\r\n    \"Iyun\",\r\n    \"Iyul\",\r\n    \"Avgust\",\r\n    \"Sentabr\",\r\n    \"Oktabr\",\r\n    \"Noyabr\",\r\n    \"Dekabr\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Y\", \"D\", \"S\", \"CH\", \"P\", \"J\", \"SH\"],\r\n  short: [\"Ya\", \"Du\", \"Se\", \"Cho\", \"Pa\", \"Ju\", \"Sha\"],\r\n  abbreviated: [\"Yak\", \"Dush\", \"Sesh\", \"Chor\", \"Pay\", \"Jum\", \"Shan\"],\r\n  wide: [\r\n    \"Yakshanba\",\r\n    \"Dushanba\",\r\n    \"Seshanba\",\r\n    \"Chorshanba\",\r\n    \"Payshanba\",\r\n    \"Juma\",\r\n    \"Shanba\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"y.t\",\r\n    noon: \"p.\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"yarim tun\",\r\n    noon: \"peshin\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"yarim tun\",\r\n    noon: \"peshin\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"a\",\r\n    pm: \"p\",\r\n    midnight: \"y.t\",\r\n    noon: \"p.\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"yarim tun\",\r\n    noon: \"peshin\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n  wide: {\r\n    am: \"a.m.\",\r\n    pm: \"p.m.\",\r\n    midnight: \"yarim tun\",\r\n    noon: \"peshin\",\r\n    morning: \"ertalab\",\r\n    afternoon: \"tushdan keyin\",\r\n    evening: \"kechqurun\",\r\n    night: \"tun\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(chi)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(m\\.a|m\\.)/i,\r\n  abbreviated: /^(m\\.a\\.?\\s?m\\.?)/i,\r\n  wide: /^(miloddan avval|miloddan keyin)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^b/i, /^(a|c)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^q[1234]/i,\r\n  wide: /^[1234](chi)? chorak/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[yfmasond]/i,\r\n  abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,\r\n  wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^y/i,\r\n    /^f/i,\r\n    /^m/i,\r\n    /^a/i,\r\n    /^m/i,\r\n    /^i/i,\r\n    /^i/i,\r\n    /^a/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n\r\n  any: [\r\n    /^ya/i,\r\n    /^f/i,\r\n    /^mar/i,\r\n    /^ap/i,\r\n    /^may/i,\r\n    /^iyun/i,\r\n    /^iyul/i,\r\n    /^av/i,\r\n    /^s/i,\r\n    /^o/i,\r\n    /^n/i,\r\n    /^d/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[ydschj]/i,\r\n  short: /^(ya|du|se|cho|pa|ju|sha)/i,\r\n  abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,\r\n  wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i],\r\n  any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|y\\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,\r\n  any: /^([ap]\\.?\\s?m\\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^a/i,\r\n    pm: /^p/i,\r\n    midnight: /^y\\.t/i,\r\n    noon: /^pe/i,\r\n    morning: /ertalab/i,\r\n    afternoon: /tushdan keyin/i,\r\n    evening: /kechqurun/i,\r\n    night: /tun/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./uz/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./uz/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./uz/_lib/formatRelative.js\";\r\nimport { localize } from \"./uz/_lib/localize.js\";\r\nimport { match } from \"./uz/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Uzbek locale.\r\n * @language Uzbek\r\n * @iso-639-2 uzb\r\n * @author Mukhammadali [@mukhammadali](https://github.com/Mukhammadali)\r\n */\r\nexport const uz = {\r\n  code: \"uz\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default uz;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"1 сониядан кам\",\r\n    other: \"{{count}} сониядан кам\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 сония\",\r\n    other: \"{{count}} сония\",\r\n  },\r\n\r\n  halfAMinute: \"ярим дақиқа\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"1 дақиқадан кам\",\r\n    other: \"{{count}} дақиқадан кам\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 дақиқа\",\r\n    other: \"{{count}} дақиқа\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"тахминан 1 соат\",\r\n    other: \"тахминан {{count}} соат\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 соат\",\r\n    other: \"{{count}} соат\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 кун\",\r\n    other: \"{{count}} кун\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"тахминан 1 хафта\",\r\n    other: \"тахминан {{count}} хафта\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 хафта\",\r\n    other: \"{{count}} хафта\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"тахминан 1 ой\",\r\n    other: \"тахминан {{count}} ой\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 ой\",\r\n    other: \"{{count}} ой\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"тахминан 1 йил\",\r\n    other: \"тахминан {{count}} йил\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 йил\",\r\n    other: \"{{count}} йил\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"1 йилдан кўп\",\r\n    other: \"{{count}} йилдан кўп\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"деярли 1 йил\",\r\n    other: \"деярли {{count}} йил\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"дан кейин\";\r\n    } else {\r\n      return result + \" олдин\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"EEEE, do MMMM, y\",\r\n  long: \"do MMMM, y\",\r\n  medium: \"d MMM, y\",\r\n  short: \"dd/MM/yyyy\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"H:mm:ss zzzz\",\r\n  long: \"H:mm:ss z\",\r\n  medium: \"H:mm:ss\",\r\n  short: \"H:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  any: \"{{date}}, {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"any\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'ўтган' eeee p 'да'\",\r\n  yesterday: \"'кеча' p 'да'\",\r\n  today: \"'бугун' p 'да'\",\r\n  tomorrow: \"'эртага' p 'да'\",\r\n  nextWeek: \"eeee p 'да'\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"М.А\", \"М\"],\r\n  abbreviated: [\"М.А\", \"М\"],\r\n  wide: [\"Милоддан Аввалги\", \"Милодий\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"1-чор.\", \"2-чор.\", \"3-чор.\", \"4-чор.\"],\r\n  wide: [\"1-чорак\", \"2-чорак\", \"3-чорак\", \"4-чорак\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\"Я\", \"Ф\", \"М\", \"А\", \"М\", \"И\", \"И\", \"А\", \"С\", \"О\", \"Н\", \"Д\"],\r\n  abbreviated: [\r\n    \"янв\",\r\n    \"фев\",\r\n    \"мар\",\r\n    \"апр\",\r\n    \"май\",\r\n    \"июн\",\r\n    \"июл\",\r\n    \"авг\",\r\n    \"сен\",\r\n    \"окт\",\r\n    \"ноя\",\r\n    \"дек\",\r\n  ],\r\n\r\n  wide: [\r\n    \"январ\",\r\n    \"феврал\",\r\n    \"март\",\r\n    \"апрел\",\r\n    \"май\",\r\n    \"июн\",\r\n    \"июл\",\r\n    \"август\",\r\n    \"сентабр\",\r\n    \"октабр\",\r\n    \"ноябр\",\r\n    \"декабр\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"Я\", \"Д\", \"С\", \"Ч\", \"П\", \"Ж\", \"Ш\"],\r\n  short: [\"як\", \"ду\", \"се\", \"чо\", \"па\", \"жу\", \"ша\"],\r\n  abbreviated: [\"якш\", \"душ\", \"сеш\", \"чор\", \"пай\", \"жум\", \"шан\"],\r\n  wide: [\r\n    \"якшанба\",\r\n    \"душанба\",\r\n    \"сешанба\",\r\n    \"чоршанба\",\r\n    \"пайшанба\",\r\n    \"жума\",\r\n    \"шанба\",\r\n  ],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  any: {\r\n    am: \"П.О.\",\r\n    pm: \"П.К.\",\r\n    midnight: \"ярим тун\",\r\n    noon: \"пешин\",\r\n    morning: \"эрталаб\",\r\n    afternoon: \"пешиндан кейин\",\r\n    evening: \"кечаси\",\r\n    night: \"тун\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  any: {\r\n    am: \"П.О.\",\r\n    pm: \"П.К.\",\r\n    midnight: \"ярим тун\",\r\n    noon: \"пешин\",\r\n    morning: \"эрталаб\",\r\n    afternoon: \"пешиндан кейин\",\r\n    evening: \"кечаси\",\r\n    night: \"тун\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, _options) => {\r\n  return String(dirtyNumber);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"any\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"any\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)(чи)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(м\\.а|м\\.)/i,\r\n  abbreviated: /^(м\\.а|м\\.)/i,\r\n  wide: /^(милоддан аввал|милоддан кейин)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^м/i, /^а/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^[1234]-чор./i,\r\n  wide: /^[1234]-чорак/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/1/i, /2/i, /3/i, /4/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^[яфмамииасонд]/i,\r\n  abbreviated: /^(янв|фев|мар|апр|май|июн|июл|авг|сен|окт|ноя|дек)/i,\r\n  wide: /^(январ|феврал|март|апрел|май|июн|июл|август|сентабр|октабр|ноябр|декабр)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^я/i,\r\n    /^ф/i,\r\n    /^м/i,\r\n    /^а/i,\r\n    /^м/i,\r\n    /^и/i,\r\n    /^и/i,\r\n    /^а/i,\r\n    /^с/i,\r\n    /^о/i,\r\n    /^н/i,\r\n    /^д/i,\r\n  ],\r\n\r\n  any: [\r\n    /^я/i,\r\n    /^ф/i,\r\n    /^мар/i,\r\n    /^ап/i,\r\n    /^май/i,\r\n    /^июн/i,\r\n    /^июл/i,\r\n    /^ав/i,\r\n    /^с/i,\r\n    /^о/i,\r\n    /^н/i,\r\n    /^д/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[ядсчпжш]/i,\r\n  short: /^(як|ду|се|чо|па|жу|ша)/i,\r\n  abbreviated: /^(якш|душ|сеш|чор|пай|жум|шан)/i,\r\n  wide: /^(якшанба|душанба|сешанба|чоршанба|пайшанба|жума|шанба)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/^я/i, /^д/i, /^с/i, /^ч/i, /^п/i, /^ж/i, /^ш/i],\r\n  any: [/^як/i, /^ду/i, /^се/i, /^чор/i, /^пай/i, /^жу/i, /^шан/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(п\\.о\\.|п\\.к\\.|ярим тун|пешиндан кейин|(эрталаб|пешиндан кейин|кечаси|тун))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^п\\.о\\./i,\r\n    pm: /^п\\.к\\./i,\r\n    midnight: /^ярим тун/i,\r\n    noon: /^пешиндан кейин/i,\r\n    morning: /эрталаб/i,\r\n    afternoon: /пешиндан кейин/i,\r\n    evening: /кечаси/i,\r\n    night: /тун/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./uz-Cyrl/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./uz-Cyrl/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./uz-Cyrl/_lib/formatRelative.js\";\r\nimport { localize } from \"./uz-Cyrl/_lib/localize.js\";\r\nimport { match } from \"./uz-Cyrl/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Uzbek Cyrillic locale.\r\n * @language Uzbek\r\n * @iso-639-2 uzb\r\n * @author Kamronbek Shodmonov [@kamronbek28](https://github.com/kamronbek28)\r\n */\r\nexport const uzCyrl = {\r\n  code: \"uz-Cyrl\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default uzCyrl;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"dưới 1 giây\",\r\n    other: \"dưới {{count}} giây\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 giây\",\r\n    other: \"{{count}} giây\",\r\n  },\r\n\r\n  halfAMinute: \"nửa phút\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"dưới 1 phút\",\r\n    other: \"dưới {{count}} phút\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 phút\",\r\n    other: \"{{count}} phút\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"khoảng 1 giờ\",\r\n    other: \"khoảng {{count}} giờ\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 giờ\",\r\n    other: \"{{count}} giờ\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 ngày\",\r\n    other: \"{{count}} ngày\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"khoảng 1 tuần\",\r\n    other: \"khoảng {{count}} tuần\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 tuần\",\r\n    other: \"{{count}} tuần\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"khoảng 1 tháng\",\r\n    other: \"khoảng {{count}} tháng\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 tháng\",\r\n    other: \"{{count}} tháng\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"khoảng 1 năm\",\r\n    other: \"khoảng {{count}} năm\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 năm\",\r\n    other: \"{{count}} năm\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"hơn 1 năm\",\r\n    other: \"hơn {{count}} năm\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"gần 1 năm\",\r\n    other: \"gần {{count}} năm\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \" nữa\";\r\n    } else {\r\n      return result + \" trước\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  // thứ Sáu, ngày 25 tháng 08 năm 2017\r\n  full: \"EEEE, 'ngày' d MMMM 'năm' y\",\r\n  // ngày 25 tháng 08 năm 2017\r\n  long: \"'ngày' d MMMM 'năm' y\",\r\n  // 25 thg 08 năm 2017\r\n  medium: \"d MMM 'năm' y\",\r\n  // 25/08/2017\r\n  short: \"dd/MM/y\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"HH:mm:ss zzzz\",\r\n  long: \"HH:mm:ss z\",\r\n  medium: \"HH:mm:ss\",\r\n  short: \"HH:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  // thứ Sáu, ngày 25 tháng 08 năm 2017 23:25:59\r\n  full: \"{{date}} {{time}}\",\r\n  // ngày 25 tháng 08 năm 2017 23:25\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"eeee 'tuần trước vào lúc' p\",\r\n  yesterday: \"'hôm qua vào lúc' p\",\r\n  today: \"'hôm nay vào lúc' p\",\r\n  tomorrow: \"'ngày mai vào lúc' p\",\r\n  nextWeek: \"eeee 'tới vào lúc' p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\n// Vietnamese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html\r\n// Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134\r\n\r\nconst eraValues = {\r\n  narrow: [\"TCN\", \"SCN\"],\r\n  abbreviated: [\"trước CN\", \"sau CN\"],\r\n  wide: [\"trước Công Nguyên\", \"sau Công Nguyên\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  wide: [\"Quý 1\", \"Quý 2\", \"Quý 3\", \"Quý 4\"],\r\n};\r\n\r\nconst formattingQuarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\r\n  // I notice many news outlet use this \"quý II/2018\"\r\n  wide: [\"quý I\", \"quý II\", \"quý III\", \"quý IV\"],\r\n};\r\n\r\n// Note: in English, the names of days of the week and months are capitalized.\r\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\r\n// Generally, formatted dates should look like they are in the middle of a sentence,\r\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\r\nconst monthValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\r\n\r\n  abbreviated: [\r\n    \"Thg 1\",\r\n    \"Thg 2\",\r\n    \"Thg 3\",\r\n    \"Thg 4\",\r\n    \"Thg 5\",\r\n    \"Thg 6\",\r\n    \"Thg 7\",\r\n    \"Thg 8\",\r\n    \"Thg 9\",\r\n    \"Thg 10\",\r\n    \"Thg 11\",\r\n    \"Thg 12\",\r\n  ],\r\n\r\n  wide: [\r\n    \"Tháng Một\",\r\n    \"Tháng Hai\",\r\n    \"Tháng Ba\",\r\n    \"Tháng Tư\",\r\n    \"Tháng Năm\",\r\n    \"Tháng Sáu\",\r\n    \"Tháng Bảy\",\r\n    \"Tháng Tám\",\r\n    \"Tháng Chín\",\r\n    \"Tháng Mười\",\r\n    \"Tháng Mười Một\",\r\n    \"Tháng Mười Hai\",\r\n  ],\r\n};\r\n// In Vietnamese date formatting, month number less than 10 expected to have leading zero\r\nconst formattingMonthValues = {\r\n  narrow: [\r\n    \"01\",\r\n    \"02\",\r\n    \"03\",\r\n    \"04\",\r\n    \"05\",\r\n    \"06\",\r\n    \"07\",\r\n    \"08\",\r\n    \"09\",\r\n    \"10\",\r\n    \"11\",\r\n    \"12\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"thg 1\",\r\n    \"thg 2\",\r\n    \"thg 3\",\r\n    \"thg 4\",\r\n    \"thg 5\",\r\n    \"thg 6\",\r\n    \"thg 7\",\r\n    \"thg 8\",\r\n    \"thg 9\",\r\n    \"thg 10\",\r\n    \"thg 11\",\r\n    \"thg 12\",\r\n  ],\r\n\r\n  wide: [\r\n    \"tháng 01\",\r\n    \"tháng 02\",\r\n    \"tháng 03\",\r\n    \"tháng 04\",\r\n    \"tháng 05\",\r\n    \"tháng 06\",\r\n    \"tháng 07\",\r\n    \"tháng 08\",\r\n    \"tháng 09\",\r\n    \"tháng 10\",\r\n    \"tháng 11\",\r\n    \"tháng 12\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"],\r\n  short: [\"CN\", \"Th 2\", \"Th 3\", \"Th 4\", \"Th 5\", \"Th 6\", \"Th 7\"],\r\n  abbreviated: [\"CN\", \"Thứ 2\", \"Thứ 3\", \"Thứ 4\", \"Thứ 5\", \"Thứ 6\", \"Thứ 7\"],\r\n\r\n  wide: [\r\n    \"Chủ Nhật\",\r\n    \"Thứ Hai\",\r\n    \"Thứ Ba\",\r\n    \"Thứ Tư\",\r\n    \"Thứ Năm\",\r\n    \"Thứ Sáu\",\r\n    \"Thứ Bảy\",\r\n  ],\r\n};\r\n\r\n// Vietnamese are used to AM/PM borrowing from English, hence `narrow` and\r\n// `abbreviated` are just like English but I'm leaving the `wide`\r\n// format being localized with abbreviations found in some systems (SÁng / CHiều);\r\n// however, personally, I don't think `Chiều` sounds appropriate for `PM`\r\nconst dayPeriodValues = {\r\n  // narrow date period is extremely rare in Vietnamese\r\n  // I used abbreviated form for noon, morning and afternoon\r\n  // which are regconizable by Vietnamese, others cannot be any shorter\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"tr\",\r\n    morning: \"sg\",\r\n    afternoon: \"ch\",\r\n    evening: \"tối\",\r\n    night: \"đêm\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"trưa\",\r\n    morning: \"sáng\",\r\n    afternoon: \"chiều\",\r\n    evening: \"tối\",\r\n    night: \"đêm\",\r\n  },\r\n  wide: {\r\n    am: \"SA\",\r\n    pm: \"CH\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"trưa\",\r\n    morning: \"sáng\",\r\n    afternoon: \"chiều\",\r\n    evening: \"tối\",\r\n    night: \"đêm\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"am\",\r\n    pm: \"pm\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"tr\",\r\n    morning: \"sg\",\r\n    afternoon: \"ch\",\r\n    evening: \"tối\",\r\n    night: \"đêm\",\r\n  },\r\n  abbreviated: {\r\n    am: \"AM\",\r\n    pm: \"PM\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"trưa\",\r\n    morning: \"sáng\",\r\n    afternoon: \"chiều\",\r\n    evening: \"tối\",\r\n    night: \"đêm\",\r\n  },\r\n  wide: {\r\n    am: \"SA\",\r\n    pm: \"CH\",\r\n    midnight: \"nửa đêm\",\r\n    noon: \"giữa trưa\",\r\n    morning: \"vào buổi sáng\",\r\n    afternoon: \"vào buổi chiều\",\r\n    evening: \"vào buổi tối\",\r\n    night: \"vào ban đêm\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n  const unit = options?.unit;\r\n\r\n  if (unit === \"quarter\") {\r\n    // many news outlets use \"quý I\"...\r\n    switch (number) {\r\n      case 1:\r\n        return \"I\";\r\n      case 2:\r\n        return \"II\";\r\n      case 3:\r\n        return \"III\";\r\n      case 4:\r\n        return \"IV\";\r\n    }\r\n  } else if (unit === \"day\") {\r\n    // day of week in Vietnamese has ordinal number meaning,\r\n    // so we should use them, else it'll sound weird\r\n    switch (number) {\r\n      case 1:\r\n        return \"thứ 2\"; // meaning 2nd day but it's the first day of the week :D\r\n      case 2:\r\n        return \"thứ 3\"; // meaning 3rd day\r\n      case 3:\r\n        return \"thứ 4\"; // meaning 4th day and so on\r\n      case 4:\r\n        return \"thứ 5\";\r\n      case 5:\r\n        return \"thứ 6\";\r\n      case 6:\r\n        return \"thứ 7\";\r\n      case 7:\r\n        return \"chủ nhật\"; // meaning Sunday, there's no 8th day :D\r\n    }\r\n  } else if (unit === \"week\") {\r\n    if (number === 1) {\r\n      return \"thứ nhất\";\r\n    } else {\r\n      return \"thứ \" + number;\r\n    }\r\n  } else if (unit === \"dayOfYear\") {\r\n    if (number === 1) {\r\n      return \"đầu tiên\";\r\n    } else {\r\n      return \"thứ \" + number;\r\n    }\r\n  }\r\n\r\n  // there are no different forms of ordinal numbers in Vietnamese\r\n  return String(number);\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingQuarterValues,\r\n    defaultFormattingWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingMonthValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(\\d+)/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(tcn|scn)/i,\r\n  abbreviated: /^(trước CN|sau CN)/i,\r\n  wide: /^(trước Công Nguyên|sau Công Nguyên)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^t/i, /^s/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^([1234]|i{1,3}v?)/i,\r\n  abbreviated: /^q([1234]|i{1,3}v?)/i,\r\n  wide: /^quý ([1234]|i{1,3}v?)/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  // month number may contain leading 0, 'thg' prefix may have space, underscore or empty before number\r\n  // note the order of '1' since it is a sub-string of '10', so must be lower priority\r\n  narrow: /^(0?[2-9]|10|11|12|0?1)/i,\r\n  // note the order of 'thg 1' since it is sub-string of 'thg 10', so must be lower priority\r\n  abbreviated: /^thg[ _]?(0?[1-9](?!\\d)|10|11|12)/i,\r\n  // note the order of 'Mười' since it is sub-string of Mười Một, so must be lower priority\r\n  wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\\d)|10|11|12)/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /0?1$/i,\r\n    /0?2/i,\r\n    /3/,\r\n    /4/,\r\n    /5/,\r\n    /6/,\r\n    /7/,\r\n    /8/,\r\n    /9/,\r\n    /10/,\r\n    /11/,\r\n    /12/,\r\n  ],\r\n\r\n  abbreviated: [\r\n    /^thg[ _]?0?1(?!\\d)/i,\r\n    /^thg[ _]?0?2/i,\r\n    /^thg[ _]?0?3/i,\r\n    /^thg[ _]?0?4/i,\r\n    /^thg[ _]?0?5/i,\r\n    /^thg[ _]?0?6/i,\r\n    /^thg[ _]?0?7/i,\r\n    /^thg[ _]?0?8/i,\r\n    /^thg[ _]?0?9/i,\r\n    /^thg[ _]?10/i,\r\n    /^thg[ _]?11/i,\r\n    /^thg[ _]?12/i,\r\n  ],\r\n\r\n  wide: [\r\n    /^tháng ?(Một|0?1(?!\\d))/i,\r\n    /^tháng ?(Hai|0?2)/i,\r\n    /^tháng ?(Ba|0?3)/i,\r\n    /^tháng ?(Tư|0?4)/i,\r\n    /^tháng ?(Năm|0?5)/i,\r\n    /^tháng ?(Sáu|0?6)/i,\r\n    /^tháng ?(Bảy|0?7)/i,\r\n    /^tháng ?(Tám|0?8)/i,\r\n    /^tháng ?(Chín|0?9)/i,\r\n    /^tháng ?(Mười|10)/i,\r\n    /^tháng ?(Mười ?Một|11)/i,\r\n    /^tháng ?(Mười ?Hai|12)/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,\r\n  short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\r\n  abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,\r\n  wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i,\r\n};\r\nconst parseDayPatterns = {\r\n  narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\r\n  short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\r\n  abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],\r\n  wide: [/(Chủ|Chúa) ?Nhật/i, /Hai/i, /Ba/i, /Tư/i, /Năm/i, /Sáu/i, /Bảy/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,\r\n  abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,\r\n  wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^(a|sa)/i,\r\n    pm: /^(p|ch[^i]*)/i,\r\n    midnight: /nửa đêm/i,\r\n    noon: /trưa/i,\r\n    morning: /sáng/i,\r\n    afternoon: /chiều/i,\r\n    evening: /tối/i,\r\n    night: /^đêm/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./vi/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./vi/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./vi/_lib/formatRelative.js\";\r\nimport { localize } from \"./vi/_lib/localize.js\";\r\nimport { match } from \"./vi/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Vietnamese locale (Vietnam).\r\n * @language Vietnamese\r\n * @iso-639-2 vie\r\n * @author Thanh Tran [@trongthanh](https://github.com/trongthanh)\r\n * @author Leroy Hopson [@lihop](https://github.com/lihop)\r\n */\r\nexport const vi = {\r\n  code: \"vi\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 1 /* First week of new year contains Jan 1st  */,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default vi;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"不到 1 秒\",\r\n    other: \"不到 {{count}} 秒\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 秒\",\r\n    other: \"{{count}} 秒\",\r\n  },\r\n\r\n  halfAMinute: \"半分钟\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"不到 1 分钟\",\r\n    other: \"不到 {{count}} 分钟\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 分钟\",\r\n    other: \"{{count}} 分钟\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 小时\",\r\n    other: \"{{count}} 小时\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"大约 1 小时\",\r\n    other: \"大约 {{count}} 小时\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 天\",\r\n    other: \"{{count}} 天\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"大约 1 个星期\",\r\n    other: \"大约 {{count}} 个星期\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 个星期\",\r\n    other: \"{{count}} 个星期\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"大约 1 个月\",\r\n    other: \"大约 {{count}} 个月\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 个月\",\r\n    other: \"{{count}} 个月\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"大约 1 年\",\r\n    other: \"大约 {{count}} 年\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 年\",\r\n    other: \"{{count}} 年\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"超过 1 年\",\r\n    other: \"超过 {{count}} 年\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"将近 1 年\",\r\n    other: \"将近 {{count}} 年\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"内\";\r\n    } else {\r\n      return result + \"前\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y'年'M'月'd'日' EEEE\",\r\n  long: \"y'年'M'月'd'日'\",\r\n  medium: \"yyyy-MM-dd\",\r\n  short: \"yy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"zzzz a h:mm:ss\",\r\n  long: \"z a h:mm:ss\",\r\n  medium: \"a h:mm:ss\",\r\n  short: \"a h:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "import { isSameWeek } from \"../../../isSameWeek.js\";\r\n\r\nfunction checkWeek(date, baseDate, options) {\r\n  const baseFormat = \"eeee p\";\r\n\r\n  if (isSameWeek(date, baseDate, options)) {\r\n    return baseFormat; // in same week\r\n  } else if (date.getTime() > baseDate.getTime()) {\r\n    return \"'下个'\" + baseFormat; // in next week\r\n  }\r\n  return \"'上个'\" + baseFormat; // in last week\r\n}\r\n\r\nconst formatRelativeLocale = {\r\n  lastWeek: checkWeek, // days before yesterday, maybe in this week or last week\r\n  yesterday: \"'昨天' p\",\r\n  today: \"'今天' p\",\r\n  tomorrow: \"'明天' p\",\r\n  nextWeek: checkWeek, // days after tomorrow, maybe in this week or next week\r\n  other: \"PP p\",\r\n};\r\n\r\nexport const formatRelative = (token, date, baseDate, options) => {\r\n  const format = formatRelativeLocale[token];\r\n\r\n  if (typeof format === \"function\") {\r\n    return format(date, baseDate, options);\r\n  }\r\n\r\n  return format;\r\n};\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"前\", \"公元\"],\r\n  abbreviated: [\"前\", \"公元\"],\r\n  wide: [\"公元前\", \"公元\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"第一季\", \"第二季\", \"第三季\", \"第四季\"],\r\n  wide: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"一\",\r\n    \"二\",\r\n    \"三\",\r\n    \"四\",\r\n    \"五\",\r\n    \"六\",\r\n    \"七\",\r\n    \"八\",\r\n    \"九\",\r\n    \"十\",\r\n    \"十一\",\r\n    \"十二\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"1月\",\r\n    \"2月\",\r\n    \"3月\",\r\n    \"4月\",\r\n    \"5月\",\r\n    \"6月\",\r\n    \"7月\",\r\n    \"8月\",\r\n    \"9月\",\r\n    \"10月\",\r\n    \"11月\",\r\n    \"12月\",\r\n  ],\r\n\r\n  wide: [\r\n    \"一月\",\r\n    \"二月\",\r\n    \"三月\",\r\n    \"四月\",\r\n    \"五月\",\r\n    \"六月\",\r\n    \"七月\",\r\n    \"八月\",\r\n    \"九月\",\r\n    \"十月\",\r\n    \"十一月\",\r\n    \"十二月\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  short: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  abbreviated: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"],\r\n\r\n  wide: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"凌晨\",\r\n    noon: \"午\",\r\n    morning: \"早\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜间\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜间\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"凌晨\",\r\n    noon: \"午\",\r\n    morning: \"早\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜间\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜间\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  switch (options?.unit) {\r\n    case \"date\":\r\n      return number.toString() + \"日\";\r\n    case \"hour\":\r\n      return number.toString() + \"时\";\r\n    case \"minute\":\r\n      return number.toString() + \"分\";\r\n    case \"second\":\r\n      return number.toString() + \"秒\";\r\n    default:\r\n      return \"第 \" + number.toString();\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(第\\s*)?\\d+(日|时|分|秒)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(前)/i,\r\n  abbreviated: /^(前)/i,\r\n  wide: /^(公元前|公元)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(前)/i, /^(公元)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^第[一二三四]刻/i,\r\n  wide: /^第[一二三四]刻钟/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,\r\n  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\\d|1[12])月/i,\r\n  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^一/i,\r\n    /^二/i,\r\n    /^三/i,\r\n    /^四/i,\r\n    /^五/i,\r\n    /^六/i,\r\n    /^七/i,\r\n    /^八/i,\r\n    /^九/i,\r\n    /^十(?!(一|二))/i,\r\n    /^十一/i,\r\n    /^十二/i,\r\n  ],\r\n\r\n  any: [\r\n    /^一|1/i,\r\n    /^二|2/i,\r\n    /^三|3/i,\r\n    /^四|4/i,\r\n    /^五|5/i,\r\n    /^六|6/i,\r\n    /^七|7/i,\r\n    /^八|8/i,\r\n    /^九|9/i,\r\n    /^十(?!(一|二))|10/i,\r\n    /^十一|11/i,\r\n    /^十二|12/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[一二三四五六日]/i,\r\n  short: /^[一二三四五六日]/i,\r\n  abbreviated: /^周[一二三四五六日]/i,\r\n  wide: /^星期[一二三四五六日]/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^上午?/i,\r\n    pm: /^下午?/i,\r\n    midnight: /^午夜/i,\r\n    noon: /^[中正]午/i,\r\n    morning: /^早上/i,\r\n    afternoon: /^下午/i,\r\n    evening: /^晚上?/i,\r\n    night: /^凌晨/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./zh-CN/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./zh-CN/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./zh-CN/_lib/formatRelative.js\";\r\nimport { localize } from \"./zh-CN/_lib/localize.js\";\r\nimport { match } from \"./zh-CN/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Chinese Simplified locale.\r\n * @language Chinese Simplified\r\n * @iso-639-2 zho\r\n * @author Changyu Geng [@KingMario](https://github.com/KingMario)\r\n * @author Song Shuoyun [@fnlctrl](https://github.com/fnlctrl)\r\n * @author sabrinaM [@sabrinamiao](https://github.com/sabrinamiao)\r\n * @author Carney Wu [@cubicwork](https://github.com/cubicwork)\r\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\r\n */\r\nexport const zhCN = {\r\n  code: \"zh-CN\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default zhCN;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"少於 1 秒\",\r\n    other: \"少於 {{count}} 秒\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 秒\",\r\n    other: \"{{count}} 秒\",\r\n  },\r\n\r\n  halfAMinute: \"半分鐘\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"少於 1 分鐘\",\r\n    other: \"少於 {{count}} 分鐘\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 分鐘\",\r\n    other: \"{{count}} 分鐘\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 小時\",\r\n    other: \"{{count}} 小時\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"大約 1 小時\",\r\n    other: \"大約 {{count}} 小時\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 天\",\r\n    other: \"{{count}} 天\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"大約 1 個星期\",\r\n    other: \"大約 {{count}} 個星期\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 個星期\",\r\n    other: \"{{count}} 個星期\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"大約 1 個月\",\r\n    other: \"大約 {{count}} 個月\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 個月\",\r\n    other: \"{{count}} 個月\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"大約 1 年\",\r\n    other: \"大約 {{count}} 年\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 年\",\r\n    other: \"{{count}} 年\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"超過 1 年\",\r\n    other: \"超過 {{count}} 年\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"將近 1 年\",\r\n    other: \"將近 {{count}} 年\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"內\";\r\n    } else {\r\n      return result + \"前\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y'年'M'月'd'日' EEEE\",\r\n  long: \"y'年'M'月'd'日'\",\r\n  medium: \"yyyy-MM-dd\",\r\n  short: \"yy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"zzzz a h:mm:ss\",\r\n  long: \"z a h:mm:ss\",\r\n  medium: \"a h:mm:ss\",\r\n  short: \"a h:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'上個'eeee p\",\r\n  yesterday: \"'昨天' p\",\r\n  today: \"'今天' p\",\r\n  tomorrow: \"'明天' p\",\r\n  nextWeek: \"'下個'eeee p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"前\", \"公元\"],\r\n  abbreviated: [\"前\", \"公元\"],\r\n  wide: [\"公元前\", \"公元\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"第一季\", \"第二季\", \"第三季\", \"第四季\"],\r\n  wide: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"一\",\r\n    \"二\",\r\n    \"三\",\r\n    \"四\",\r\n    \"五\",\r\n    \"六\",\r\n    \"七\",\r\n    \"八\",\r\n    \"九\",\r\n    \"十\",\r\n    \"十一\",\r\n    \"十二\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"1月\",\r\n    \"2月\",\r\n    \"3月\",\r\n    \"4月\",\r\n    \"5月\",\r\n    \"6月\",\r\n    \"7月\",\r\n    \"8月\",\r\n    \"9月\",\r\n    \"10月\",\r\n    \"11月\",\r\n    \"12月\",\r\n  ],\r\n\r\n  wide: [\r\n    \"一月\",\r\n    \"二月\",\r\n    \"三月\",\r\n    \"四月\",\r\n    \"五月\",\r\n    \"六月\",\r\n    \"七月\",\r\n    \"八月\",\r\n    \"九月\",\r\n    \"十月\",\r\n    \"十一月\",\r\n    \"十二月\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  short: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  abbreviated: [\"週日\", \"週一\", \"週二\", \"週三\", \"週四\", \"週五\", \"週六\"],\r\n\r\n  wide: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"午夜\",\r\n    noon: \"晌\",\r\n    morning: \"早\",\r\n    afternoon: \"午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"午夜\",\r\n    noon: \"中午\",\r\n    morning: \"上午\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚上\",\r\n    night: \"夜晚\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"午夜\",\r\n    noon: \"中午\",\r\n    morning: \"上午\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚上\",\r\n    night: \"夜晚\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"午夜\",\r\n    noon: \"晌\",\r\n    morning: \"早\",\r\n    afternoon: \"午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"午夜\",\r\n    noon: \"中午\",\r\n    morning: \"上午\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚上\",\r\n    night: \"夜晚\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"午夜\",\r\n    noon: \"中午\",\r\n    morning: \"上午\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚上\",\r\n    night: \"夜晚\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  switch (options?.unit) {\r\n    case \"date\":\r\n      return number + \"日\";\r\n    case \"hour\":\r\n      return number + \"時\";\r\n    case \"minute\":\r\n      return number + \"分\";\r\n    case \"second\":\r\n      return number + \"秒\";\r\n    default:\r\n      return \"第 \" + number;\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(第\\s*)?\\d+(日|時|分|秒)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(前)/i,\r\n  abbreviated: /^(前)/i,\r\n  wide: /^(公元前|公元)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(前)/i, /^(公元)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^第[一二三四]季/i,\r\n  wide: /^第[一二三四]季度/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,\r\n  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\\d|1[12])月/i,\r\n  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^一/i,\r\n    /^二/i,\r\n    /^三/i,\r\n    /^四/i,\r\n    /^五/i,\r\n    /^六/i,\r\n    /^七/i,\r\n    /^八/i,\r\n    /^九/i,\r\n    /^十(?!(一|二))/i,\r\n    /^十一/i,\r\n    /^十二/i,\r\n  ],\r\n\r\n  any: [\r\n    /^一|1/i,\r\n    /^二|2/i,\r\n    /^三|3/i,\r\n    /^四|4/i,\r\n    /^五|5/i,\r\n    /^六|6/i,\r\n    /^七|7/i,\r\n    /^八|8/i,\r\n    /^九|9/i,\r\n    /^十(?!(一|二))|10/i,\r\n    /^十一|11/i,\r\n    /^十二|12/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[一二三四五六日]/i,\r\n  short: /^[一二三四五六日]/i,\r\n  abbreviated: /^週[一二三四五六日]/i,\r\n  wide: /^星期[一二三四五六日]/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^上午?/i,\r\n    pm: /^下午?/i,\r\n    midnight: /^午夜/i,\r\n    noon: /^[中正]午/i,\r\n    morning: /^早上/i,\r\n    afternoon: /^下午/i,\r\n    evening: /^晚上?/i,\r\n    night: /^凌晨/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./zh-HK/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./zh-HK/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./zh-HK/_lib/formatRelative.js\";\r\nimport { localize } from \"./zh-HK/_lib/localize.js\";\r\nimport { match } from \"./zh-HK/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Chinese Traditional locale.\r\n * @language Chinese Traditional\r\n * @iso-639-2 zho\r\n * @author Gary Ip [@gaplo](https://github.com/gaplo)\r\n */\r\nexport const zhHK = {\r\n  code: \"zh-HK\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 0 /* Sunday */,\r\n    firstWeekContainsDate: 1,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default zhHK;\r\n", "const formatDistanceLocale = {\r\n  lessThanXSeconds: {\r\n    one: \"少於 1 秒\",\r\n    other: \"少於 {{count}} 秒\",\r\n  },\r\n\r\n  xSeconds: {\r\n    one: \"1 秒\",\r\n    other: \"{{count}} 秒\",\r\n  },\r\n\r\n  halfAMinute: \"半分鐘\",\r\n\r\n  lessThanXMinutes: {\r\n    one: \"少於 1 分鐘\",\r\n    other: \"少於 {{count}} 分鐘\",\r\n  },\r\n\r\n  xMinutes: {\r\n    one: \"1 分鐘\",\r\n    other: \"{{count}} 分鐘\",\r\n  },\r\n\r\n  xHours: {\r\n    one: \"1 小時\",\r\n    other: \"{{count}} 小時\",\r\n  },\r\n\r\n  aboutXHours: {\r\n    one: \"大約 1 小時\",\r\n    other: \"大約 {{count}} 小時\",\r\n  },\r\n\r\n  xDays: {\r\n    one: \"1 天\",\r\n    other: \"{{count}} 天\",\r\n  },\r\n\r\n  aboutXWeeks: {\r\n    one: \"大約 1 個星期\",\r\n    other: \"大約 {{count}} 個星期\",\r\n  },\r\n\r\n  xWeeks: {\r\n    one: \"1 個星期\",\r\n    other: \"{{count}} 個星期\",\r\n  },\r\n\r\n  aboutXMonths: {\r\n    one: \"大約 1 個月\",\r\n    other: \"大約 {{count}} 個月\",\r\n  },\r\n\r\n  xMonths: {\r\n    one: \"1 個月\",\r\n    other: \"{{count}} 個月\",\r\n  },\r\n\r\n  aboutXYears: {\r\n    one: \"大約 1 年\",\r\n    other: \"大約 {{count}} 年\",\r\n  },\r\n\r\n  xYears: {\r\n    one: \"1 年\",\r\n    other: \"{{count}} 年\",\r\n  },\r\n\r\n  overXYears: {\r\n    one: \"超過 1 年\",\r\n    other: \"超過 {{count}} 年\",\r\n  },\r\n\r\n  almostXYears: {\r\n    one: \"將近 1 年\",\r\n    other: \"將近 {{count}} 年\",\r\n  },\r\n};\r\n\r\nexport const formatDistance = (token, count, options) => {\r\n  let result;\r\n\r\n  const tokenValue = formatDistanceLocale[token];\r\n  if (typeof tokenValue === \"string\") {\r\n    result = tokenValue;\r\n  } else if (count === 1) {\r\n    result = tokenValue.one;\r\n  } else {\r\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\r\n  }\r\n\r\n  if (options?.addSuffix) {\r\n    if (options.comparison && options.comparison > 0) {\r\n      return result + \"內\";\r\n    } else {\r\n      return result + \"前\";\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n", "import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\r\n\r\nconst dateFormats = {\r\n  full: \"y'年'M'月'd'日' EEEE\",\r\n  long: \"y'年'M'月'd'日'\",\r\n  medium: \"yyyy-MM-dd\",\r\n  short: \"yy-MM-dd\",\r\n};\r\n\r\nconst timeFormats = {\r\n  full: \"zzzz a h:mm:ss\",\r\n  long: \"z a h:mm:ss\",\r\n  medium: \"a h:mm:ss\",\r\n  short: \"a h:mm\",\r\n};\r\n\r\nconst dateTimeFormats = {\r\n  full: \"{{date}} {{time}}\",\r\n  long: \"{{date}} {{time}}\",\r\n  medium: \"{{date}} {{time}}\",\r\n  short: \"{{date}} {{time}}\",\r\n};\r\n\r\nexport const formatLong = {\r\n  date: buildFormatLongFn({\r\n    formats: dateFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  time: buildFormatLongFn({\r\n    formats: timeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n\r\n  dateTime: buildFormatLongFn({\r\n    formats: dateTimeFormats,\r\n    defaultWidth: \"full\",\r\n  }),\r\n};\r\n", "const formatRelativeLocale = {\r\n  lastWeek: \"'上個'eeee p\",\r\n  yesterday: \"'昨天' p\",\r\n  today: \"'今天' p\",\r\n  tomorrow: \"'明天' p\",\r\n  nextWeek: \"'下個'eeee p\",\r\n  other: \"P\",\r\n};\r\n\r\nexport const formatRelative = (token, _date, _baseDate, _options) =>\r\n  formatRelativeLocale[token];\r\n", "import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\r\n\r\nconst eraValues = {\r\n  narrow: [\"前\", \"公元\"],\r\n  abbreviated: [\"前\", \"公元\"],\r\n  wide: [\"公元前\", \"公元\"],\r\n};\r\n\r\nconst quarterValues = {\r\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\r\n  abbreviated: [\"第一刻\", \"第二刻\", \"第三刻\", \"第四刻\"],\r\n  wide: [\"第一刻鐘\", \"第二刻鐘\", \"第三刻鐘\", \"第四刻鐘\"],\r\n};\r\n\r\nconst monthValues = {\r\n  narrow: [\r\n    \"一\",\r\n    \"二\",\r\n    \"三\",\r\n    \"四\",\r\n    \"五\",\r\n    \"六\",\r\n    \"七\",\r\n    \"八\",\r\n    \"九\",\r\n    \"十\",\r\n    \"十一\",\r\n    \"十二\",\r\n  ],\r\n\r\n  abbreviated: [\r\n    \"1月\",\r\n    \"2月\",\r\n    \"3月\",\r\n    \"4月\",\r\n    \"5月\",\r\n    \"6月\",\r\n    \"7月\",\r\n    \"8月\",\r\n    \"9月\",\r\n    \"10月\",\r\n    \"11月\",\r\n    \"12月\",\r\n  ],\r\n\r\n  wide: [\r\n    \"一月\",\r\n    \"二月\",\r\n    \"三月\",\r\n    \"四月\",\r\n    \"五月\",\r\n    \"六月\",\r\n    \"七月\",\r\n    \"八月\",\r\n    \"九月\",\r\n    \"十月\",\r\n    \"十一月\",\r\n    \"十二月\",\r\n  ],\r\n};\r\n\r\nconst dayValues = {\r\n  narrow: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  short: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\r\n  abbreviated: [\"週日\", \"週一\", \"週二\", \"週三\", \"週四\", \"週五\", \"週六\"],\r\n\r\n  wide: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\r\n};\r\n\r\nconst dayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"凌晨\",\r\n    noon: \"午\",\r\n    morning: \"早\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜間\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜間\",\r\n  },\r\n};\r\n\r\nconst formattingDayPeriodValues = {\r\n  narrow: {\r\n    am: \"上\",\r\n    pm: \"下\",\r\n    midnight: \"凌晨\",\r\n    noon: \"午\",\r\n    morning: \"早\",\r\n    afternoon: \"下午\",\r\n    evening: \"晚\",\r\n    night: \"夜\",\r\n  },\r\n  abbreviated: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜間\",\r\n  },\r\n  wide: {\r\n    am: \"上午\",\r\n    pm: \"下午\",\r\n    midnight: \"凌晨\",\r\n    noon: \"中午\",\r\n    morning: \"早晨\",\r\n    afternoon: \"中午\",\r\n    evening: \"晚上\",\r\n    night: \"夜間\",\r\n  },\r\n};\r\n\r\nconst ordinalNumber = (dirtyNumber, options) => {\r\n  const number = Number(dirtyNumber);\r\n\r\n  switch (options?.unit) {\r\n    case \"date\":\r\n      return number + \"日\";\r\n    case \"hour\":\r\n      return number + \"時\";\r\n    case \"minute\":\r\n      return number + \"分\";\r\n    case \"second\":\r\n      return number + \"秒\";\r\n    default:\r\n      return \"第 \" + number;\r\n  }\r\n};\r\n\r\nexport const localize = {\r\n  ordinalNumber,\r\n\r\n  era: buildLocalizeFn({\r\n    values: eraValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  quarter: buildLocalizeFn({\r\n    values: quarterValues,\r\n    defaultWidth: \"wide\",\r\n    argumentCallback: (quarter) => quarter - 1,\r\n  }),\r\n\r\n  month: buildLocalizeFn({\r\n    values: monthValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  day: buildLocalizeFn({\r\n    values: dayValues,\r\n    defaultWidth: \"wide\",\r\n  }),\r\n\r\n  dayPeriod: buildLocalizeFn({\r\n    values: dayPeriodValues,\r\n    defaultWidth: \"wide\",\r\n    formattingValues: formattingDayPeriodValues,\r\n    defaultFormattingWidth: \"wide\",\r\n  }),\r\n};\r\n", "import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\r\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\r\n\r\nconst matchOrdinalNumberPattern = /^(第\\s*)?\\d+(日|時|分|秒)?/i;\r\nconst parseOrdinalNumberPattern = /\\d+/i;\r\n\r\nconst matchEraPatterns = {\r\n  narrow: /^(前)/i,\r\n  abbreviated: /^(前)/i,\r\n  wide: /^(公元前|公元)/i,\r\n};\r\nconst parseEraPatterns = {\r\n  any: [/^(前)/i, /^(公元)/i],\r\n};\r\n\r\nconst matchQuarterPatterns = {\r\n  narrow: /^[1234]/i,\r\n  abbreviated: /^第[一二三四]刻/i,\r\n  wide: /^第[一二三四]刻鐘/i,\r\n};\r\nconst parseQuarterPatterns = {\r\n  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],\r\n};\r\n\r\nconst matchMonthPatterns = {\r\n  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,\r\n  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\\d|1[12])月/i,\r\n  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,\r\n};\r\nconst parseMonthPatterns = {\r\n  narrow: [\r\n    /^一/i,\r\n    /^二/i,\r\n    /^三/i,\r\n    /^四/i,\r\n    /^五/i,\r\n    /^六/i,\r\n    /^七/i,\r\n    /^八/i,\r\n    /^九/i,\r\n    /^十(?!(一|二))/i,\r\n    /^十一/i,\r\n    /^十二/i,\r\n  ],\r\n\r\n  any: [\r\n    /^一|1/i,\r\n    /^二|2/i,\r\n    /^三|3/i,\r\n    /^四|4/i,\r\n    /^五|5/i,\r\n    /^六|6/i,\r\n    /^七|7/i,\r\n    /^八|8/i,\r\n    /^九|9/i,\r\n    /^十(?!(一|二))|10/i,\r\n    /^十一|11/i,\r\n    /^十二|12/i,\r\n  ],\r\n};\r\n\r\nconst matchDayPatterns = {\r\n  narrow: /^[一二三四五六日]/i,\r\n  short: /^[一二三四五六日]/i,\r\n  abbreviated: /^週[一二三四五六日]/i,\r\n  wide: /^星期[一二三四五六日]/i,\r\n};\r\nconst parseDayPatterns = {\r\n  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],\r\n};\r\n\r\nconst matchDayPeriodPatterns = {\r\n  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i,\r\n};\r\nconst parseDayPeriodPatterns = {\r\n  any: {\r\n    am: /^上午?/i,\r\n    pm: /^下午?/i,\r\n    midnight: /^午夜/i,\r\n    noon: /^[中正]午/i,\r\n    morning: /^早上/i,\r\n    afternoon: /^下午/i,\r\n    evening: /^晚上?/i,\r\n    night: /^凌晨/i,\r\n  },\r\n};\r\n\r\nexport const match = {\r\n  ordinalNumber: buildMatchPatternFn({\r\n    matchPattern: matchOrdinalNumberPattern,\r\n    parsePattern: parseOrdinalNumberPattern,\r\n    valueCallback: (value) => parseInt(value, 10),\r\n  }),\r\n\r\n  era: buildMatchFn({\r\n    matchPatterns: matchEraPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseEraPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  quarter: buildMatchFn({\r\n    matchPatterns: matchQuarterPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseQuarterPatterns,\r\n    defaultParseWidth: \"any\",\r\n    valueCallback: (index) => index + 1,\r\n  }),\r\n\r\n  month: buildMatchFn({\r\n    matchPatterns: matchMonthPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseMonthPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  day: buildMatchFn({\r\n    matchPatterns: matchDayPatterns,\r\n    defaultMatchWidth: \"wide\",\r\n    parsePatterns: parseDayPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n\r\n  dayPeriod: buildMatchFn({\r\n    matchPatterns: matchDayPeriodPatterns,\r\n    defaultMatchWidth: \"any\",\r\n    parsePatterns: parseDayPeriodPatterns,\r\n    defaultParseWidth: \"any\",\r\n  }),\r\n};\r\n", "import { formatDistance } from \"./zh-TW/_lib/formatDistance.js\";\r\nimport { formatLong } from \"./zh-TW/_lib/formatLong.js\";\r\nimport { formatRelative } from \"./zh-TW/_lib/formatRelative.js\";\r\nimport { localize } from \"./zh-TW/_lib/localize.js\";\r\nimport { match } from \"./zh-TW/_lib/match.js\";\r\n\r\n/**\r\n * @category Locales\r\n * @summary Chinese Traditional locale.\r\n * @language Chinese Traditional\r\n * @iso-639-2 zho\r\n * @author tonypai [@tpai](https://github.com/tpai)\r\n * @author Jack Hsu [@jackhsu978](https://github.com/jackhsu978)\r\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\r\n */\r\nexport const zhTW = {\r\n  code: \"zh-TW\",\r\n  formatDistance: formatDistance,\r\n  formatLong: formatLong,\r\n  formatRelative: formatRelative,\r\n  localize: localize,\r\n  match: match,\r\n  options: {\r\n    weekStartsOn: 1 /* Monday */,\r\n    firstWeekContainsDate: 4,\r\n  },\r\n};\r\n\r\n// Fallback for modularized imports:\r\nexport default zhTW;\r\n"],
  "mappings": "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",
  "names": ["formatDistance", "formatRelative", "localize", "match", "formatDistance", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "declension", "buildLocalizeTokenFn", "halfAMinute", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "lastWeek", "thisWeek", "nextWeek", "lastWeekFormat", "nextWeekFormat", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchDayPatterns", "parseDayPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "match", "localize", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatLong", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatDistance", "formatLong", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatLong", "formatLong", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatLong", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatLong", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatLong", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelativeLocalePlural", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelativeLocalePlural", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatDistance", "formatLong", "formatRelative", "localize", "match", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelativeLocalePlural", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "numberValues", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "numberToLocale", "match", "localize", "formatDistanceLocale", "formatDistance", "numberToLocale", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayPeriodValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "weekdays", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "declension", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "suffixes", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "translations", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "formattingQuarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "buildLocalizeTokenFn", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "weekdays", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "formattingQuarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "weekdays", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchDayPatterns", "parseDayPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "declension", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "declension", "buildLocalizeTokenFn", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "declensionGroup", "declension", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "lastWeek", "thisWeek", "nextWeek", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayPeriodValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "formattingDayPeriodValues", "dayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "wordMapping", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "isPluralType", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "dayValues", "monthValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "declension", "buildLocalizeTokenFn", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "accusativeWeekdays", "lastWeek", "thisWeek", "nextWeek", "lastWeekFormat", "nextWeekFormat", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "formattingQuarterValues", "monthValues", "formattingMonthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match", "formatDistanceLocale", "formatDistance", "dateFormats", "timeFormats", "dateTimeFormats", "formatLong", "formatRelativeLocale", "formatRelative", "eraValues", "quarterValues", "monthValues", "dayValues", "dayPeriodValues", "formattingDayPeriodValues", "ordinalNumber", "localize", "matchOrdinalNumberPattern", "parseOrdinalNumberPattern", "matchEraPatterns", "parseEraPatterns", "matchQuarterPatterns", "parseQuarterPatterns", "matchMonthPatterns", "parseMonthPatterns", "matchDayPatterns", "parseDayPatterns", "matchDayPeriodPatterns", "parseDayPeriodPatterns", "match", "formatDistance", "formatLong", "formatRelative", "localize", "match"]
}
